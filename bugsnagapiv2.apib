FORMAT: 1A
HOST: https://api.bugsnag.com/

# Bugsnag Data Access API

The Bugsnag Data Access API allows you to access information about your organization, projects, errors, and more to build custom integrations using your Bugsnag data.

If you need any help or have any comments about the API please contact <support@bugsnag.com>.


## Schema

API access is over HTTPS using the endpoint https://api.bugsnag.com, and all data is sent and received as [JSON](https://en.wikipedia.org/wiki/JSON).

Unless explicitly specified, time series data are returned sorted oldest to newest, and timestamps are returned in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format:

```
YYYY-MM-DDTHH:MM:SSZ
```


## Versioning

This document describes version 2 of the Bugsnag Data Access API.

You must explicitly request this version using the `X-Version` header:

```
curl -H "X-Version: 2" https://api.bugsnag.com
```

Alternatively, you can use use the `Accept` header:

```
curl -H "Accept: application/json; version=2" https://api.bugsnag.com
```

## Authentication

All API requests require authentication.

There are two ways to authenticate with the API, either using a personal auth token or your user credentials.


### Personal Auth Tokens (Recommended)

*Personal Auth Tokens* can be generated in the *My Account* section of [Bugsnag settings](https://app.bugsnag.com/settings/my-account).

There are two ways to send this auth token with requests. You can send the token
in the `Authorization` header:

```
curl -H "Authorization: token YOUR-AUTH-TOKEN-HERE" https://api.bugsnag.com
```

Alternatively, you can use the `auth_token` parameter:

```
curl https://api.bugsnag.com/?auth_token=YOUR-AUTH-TOKEN-HERE
```


### User credentials (on-premise only)

In [on-premise installations](https://docs.bugsnag.com/on-premise/), you can authenticate by using your Bugsnag user credentials via [Basic Authentication](http://en.wikipedia.org/wiki/Basic_access_authentication). Simply send the email address and password associated with the user:

```
curl -H "X-Bugsnag-API: true" -u user@example.com:password https://my-domain.com
```

## Rate Limiting

The time window for rate limits is 1 minute.

Requests that have not been denied due to rate limiting will have the following response headers:
* `X-RateLimit-Limit`: number of requests allowed per time window
* `X-RateLimit-Remaining`: number of requests remaining in the current time window

Requests that have been rate limited will return a `429` response code and have a `Retry-After` response header to indicate how long you should wait (in seconds) before trying again.

## Pagination

Pagination information is included in the `Link` header. It is important to follow these Link header values instead of constructing your own URLs since the pagination method can differ between resources.

The URL for pagination is shown inside angled brackets, and the type of pagination link is described in the rel field:

```
Link: `<https://api.bugsnag.com/example?offset=590bce131f7314d98eac23ba&per_page=5>; rel="next"`
```

### Results per page

Requests that return multiple items will be paginated to 30 items by default. For some resources, you can also set a custom page size up to 100 with the `per_page` parameter:

```
curl https://api.bugsnag.com/example?per_page=5
```

The `per_page` maximum for certain resources is lower. This will be specified in the API reference for the endpoint. If a `per_page` value greater than a given endpoint's maximum value is supplied, only results up to the maximum will be returned.


### Total count of results

Most requests that return multiple items will also include an `X-Total-Count` header with the count of all results:

```
X-Total-Count: 1335
```

## Parameters

Many API methods take optional parameters. For GET requests, any parameters not specified as a segment in the path can be passed as an HTTP query string parameter.

For `POST`, `PATCH`, and `DELETE` requests, parameters not included in the URL should be encoded as JSON with a `Content-Type` of `application/json`.

## Response Codes

### HTTP Status Codes

The API attempts to return appropriate [HTTP status codes](http://en.wikipedia.org/wiki/List_of_HTTP_status_codes) for every request, which are documented with each endpoint below.

Trying to access resources which you do not have access to will result in a `404 Not Found` response, in order to avoid disclosing the existence of user data.


### Error Messages

When the Bugsnag API returns error messages, describing a problem with a Bugsnag
API request, it does so using the following format:

```
{
  "errors": ["invalid password"]
}
```


### API Error Codes

In some cases, to help identify particular categories of API errors, the API will return a code number in addition to an error message:

```
{
  "errors": ["Unable to return complete results"]
  "code": 60000
}
```

The API error codes currently in use include:

|Code|Description|Remedy|
|---|---|---|
|30000|API access restricted due to lapsed payment|Update your [billing information](https://app.bugsnag.com/settings/)|
|31000|API access restricted due to expired trial or invalid subscription|[Select a plan](https://app.bugsnag.com/settings/)|
|32000|API access restricted for this user due to lack of available seats|[Select a plan](https://app.bugsnag.com/settings/) with more seats|
|40000|Insufficient Project Role for performing requested action|[Project Owner or Organization Administrator](https://docs.bugsnag.com/product/roles-and-permissions/) access level is required|
|60000|The number of sorted results has been limited|Set the `sort` parameter to `unsorted` on this request to obtain complete results or add additional filters to reduce the number of results|

## Filtering

Many endpoints that return information about errors and events support a `filters` parameter which can be used to restrict the data returned.

### Filter object

The filter object is a hash of Event Field keys containing an array of filter values. Each filter value has a type and a value to filter on. The type determines the type of comparison that will be performed.

Filters are composed of an array of hashes. Each hash contains a `type` and a `value`. Valid types are `eq`, `ne`, and `empty`, though not all Event Fields support filtering on all of these.

```
{
  "event.field": [{ "type": "eq", "value": "filter value 1" },
                  { "type": "eq", "value": "filter value 2" },
                  { "type": "empty", "value": "true"}]
}
```

Any number of Event Fields can be supplied and results must match each event _field_ (logical AND). Different filter _values_ for an event field will combined according to the following rules.

#### Field value comparison

These compare whether an Event Field is equal (`eq`) or not equal (`ne`) to a given value. Filter values for each Event Field are combined logically as shown:

|Type|Description|Multiple value combination logic|
|---|---|---|
|`eq`|Filter for items that 'match' the value. Some fields require an exact match and some support substring matching.|`OR`|
|`ne`|Filter for items that don't match the value.|`AND`|

If `ne` filter types are supplied alongside `eq`, the `ne` are discarded to avoid a logically ambiguous combination.

Note that the `ne` type is not supported for the time based filters `event.since` and `event.before`.  

#### Field emptiness

These filter based on the presence or absence of _any_ value for a given field. The filter type is `empty`, and takes `true` or `false` values. If an ambiguous value is supplied it is assumed `true`.

Field emptiness filters combine with field value comparisons `eq` and `ne` as follows:

|Field value type|Empty field `true`|Empty field `false`|
|---|---|---|
|`eq`|`OR`|emptiness ignored|
|`ne`|emptiness ignored|`AND`

If both `true` and `false` values are supplied for a given Event Field, `true` will be preferred, except for Event Field `error.assigned_to`.

### Encoding in URL parameters

The filters are generally sent as URL parameters. The object should be encoded as follows:

```
filters[event.field][][type]=eq
filters[event.field][][value]=filter value 1
filters[event.field][][type]=eq
filters[event.field][][value]=filter value 2
filters[event.field][][type]=empty
filters[event.field][][value]=true
```

### Event fields

Each project has a set of default Event Fields, which represent metadata captured on Error events. These are available to filter by plus any [custom event fields](#reference/projects/event-fields/create-a-custom-event-field) that have been created via the API or any [custom filters](https://docs.bugsnag.com/product/custom-filters/) that have been added via the Bugsnag dashboard.

To find the available Event Fields on a project use [List the Event Fields for a Project](#reference/projects/event-fields/list-the-event-fields-for-a-project).

Time filters can either be supplied in ISO 8601 format or as relative times in the format `<number><period>`. If using ISO 8601, times must use the extended format and be in UTC (e.g. `2018-05-20T00:00:00Z`). For relative times, the past seven days could be requested as `7d`. Valid values for `<period>` are:

|Period|Description|
|---|---|
|h|Hours|
|d|Days|

### Filtering errors vs. filtering events

While any of a project's Event Fields can be passed as a filter to any endpoint
that supports filtering, some fields are more applicable to Errors and others
are more applicable to Events.

For example, an Event Field like `error.status`
or `error.assigned_to` would make more sense when filtering at the Error level,
since all Events grouped within a particular error would share the same status
and assignee. Conversely, a filter like `user.email` or `app.release_stage`
is applied at the Event level, since different Events within a particular
Error may happen to different users or in different release stages.

If an endpoint that returns Errors is passed an Event-level filter, it will return
Errors that include at least one Event that matches the filter. Event-level
information within the Error, like the count of relevant Events, will reflect
the filters applied.

### Trace fields and Performance Filtering

Trace Fields are similar to Event Fields, but instead capture performance monitoring metadata as span attributes. These can be used for filtering spans in BugSnag.

To find available Trace Fields on a project, use [List the Trace Fields for a Project](#reference/projects/trace-fields/list-the-trace-fields-on-a-project).

As above, time filters can either be supplied in ISO 8601 format or as relative times in the format `<number><period>`. If using ISO 8601, times must use the extended format and be in UTC (e.g. `2018-05-20T00:00:00Z`). For relative times, the past seven days could be requested as `7d`. Valid values for `<period>` are:

|Period|Description|
|---|---|
|h|Hours|
|d|Days|

### Examples

#### Open errors with events in the last day

This example will filter for events of errors that have a status of open that occurred in the last day:

```
{
  "event.since": [{ "type": "eq", "value": "1d" }],
  "error.status": [{ "type": "eq", "value": "open" }]
}
```
or as URL parameters:
```
filters[event.since][][type]=eq
filters[event.since][][value]=1d
filters[error.status][][type]=eq
filters[error.status][][value]=open
```

#### Events affecting two specific users on a specific day

This example will filter for events that occurred for either user1@example.com or user2@example.com on January 1st, 2017:

```
{
  "event.before": [{ "type": "eq", "value": "2017-01-02T00:00:00Z" }],
  "event.since": [{ "type": "eq", "value": "2017-01-01T00:00:00Z" }],
  "user.email": [{ "type": "eq", "value": "user1@example.com" },
                 { "type": "eq", "value": "user2@example.com" }]
}
```
or as URL parameters:
```
filters[event.before][][type]=eq
filters[event.before][][value]=2017-01-02T00:00:00Z
filters[event.since][][type]=eq
filters[event.since][][value]=2017-01-01T00:00:00Z
filters[user.email][][type]=eq
filters[user.email][][value]=user1@example.com
filters[user.email][][type]=eq
filters[user.email][][value]=user2@example.com
```

#### Events that have user data

This example will filter for any events that have a user ID:

```
{
  "user.id": [{ "type": "empty", "value": "false"}]
}
```
or as URL parameters:
```
filters[user.id][][type]=empty
filters[user.id][][value]=false
```

#### Errors that are new and aren't assigned to anyone

This example will filter for errors that have a status of new but are not assigned to a particular user.

```
{
  "error.status": [{ "type": "eq", "value": "new" }]
  "error.assigned_to": [{ "type": "ne", "value": "12345" }]
}
```
or as URL parameters:
```
filters[error.status][][type]=eq
filters[error.status][][value]=new
filters[user.email][][type]=ne
filters[user.email][][value]=12345
```



## Using the interactive console

These API docs include an interactive console that can be used to make requests
to the production Bugsnag API. For general information about using the console,
see the [Console documentation](https://help.apiary.io/tools/interactive-documentation/#console).

To use the console to test the Bugsnag API, click the API endpoint you would
like to test. Then click the "Switch to Console" button in the upper right
corner. To make a valid request, you'll need to substitute in your own parameter
values for the sample parameters and set the relevant headers:

```
Content-Type: application/json
X-Version: 2
Authorization: token YOUR-AUTH-TOKEN-HERE
```

**Caution:** requests to the Bugsnag API from the console are real API
requests and have the ability to modify your production data!



# Group Current User

These endpoints are designed to act on the settings of the currently authenticated user. This User will be referred to as the Current User throughout this documentation.


## Organizations [/user/organizations{?admin,per_page}]
### List the Current User's Organizations [GET]

+ Parameters
  + `admin` (boolean, optional) - `true` if only Organizations the Current User is an admin of should be returned
  + `per_page`: 10 (number, optional)
      + Default: 30

+ Response 200 (application/json)
  + Attributes (array[OrganizationApiView])
  + Headers

            Link: `<https://api.bugsnag.com/user/organizations?direction=desc&offset=590bce131f7314d98eac23ba&per_page=30&sort=created_at>; rel="next"`
            X-Total-Count: 34

+ Response 404 (application/json)
  Request was made without User authorization. All requests about a User should be authorized as that User.
  + Body
    ```json
    {
      "errors": ["User not found"]
    }
    ```


### List an Organization's Projects [GET /organizations/{organization_id}/projects{?q,sort,direction,per_page}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the organization
  + `q` : MyProject (string, optional) - Search projects with names matching parameter
  + sort (enum[string], optional)
      Which field to sort the results by
      + Default: `created_at`
      + Members
          + `created_at`
          + `name`
          + `favorite`
  + direction (enum[string], optional)
      Which direction to sort the results by. Defaults to `desc` for all sorts except `favorite`. Defaults to `asc` if sorting by `favorite` (cannot sort `favorite`s `desc`).
      + Default: `desc`
      + Members
          + `asc`
          + `desc`
  + `per_page` (number, optional) - How many results to return per page
      + Default: `30`

+ Response 200 (application/json)
  + Attributes (array[ProjectApiView])
  + Headers
    ```
    Link: <https://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/projects?offset=517c41f07c1074aee9000002>; rel="next"
    X-Total-Count: 123
    ```

+ Response 404 (application/json)
  An organization with the ID you provided could not be found.

  + Body
    ```json
    {
      "errors": ["Organization not found"]
    }
    ```

+ Response 400 (application/json)
  Favorites only support ascending sort.

  + Body
    ```json
    {
      "errors": ["favorites cannot be sorted descending"]
    }
    ```



    ```






## Saved Searches/Saved Filtersets [/saved_searches/{id}]
A Saved Search is a set of [filters](/#introduction/filtering) and a sort order that have been saved to be used later.

Within the Bugsnag Dashboard, Saved Searches are referred to as Saved Filtersets. See the [Saved Filterset documentation](https://docs.bugsnag.com/product/searching-dashboard/#saving-filtersets) for more on how they can be used.

### Create a Saved Search [POST /saved_searches]

+ Request
  + Attributes (SavedSearchCreateRequest)

+ Response 201 (application/json)
  + Attributes (SavedSearch)

+ Response 403 (application/json)
  The organization does not have the relevant feature.
  + Body
    ```json
    {
      "errors": ["Account requires the performance-comparisons feature"]
    }
    ```


### Update a Saved Search [PATCH]

+ Request
  + Attributes (SavedSearchUpdateRequest)

+ Response 201 (application/json)
  + Attributes (SavedSearch)

+ Response 404 (application/json)
  The saved search was not found.
  + Body
    ```json
    {
    "errors": ["Saved Search not found"]
    }
    ```

### Delete a Saved Search [DELETE]

+ Response 204 (application/json)

+ Response 404 (application/json)
  The saved search was not found.
    + Body
    ```json
    {
    "errors": ["Saved Search not found"]
    }
    ```

### Get a Saved Search [GET /saved_searches/{id}]

+ Parameters
  + `id`: 515fb9337c1074f6fd000003 (string)

+ Response 200 (application/json)
  + Attributes (SavedSearch)

+ Response 404 (application/json)
  The saved search was not found.
  + Body
    ```json
    {
      "errors": ["Saved Search not found"]
    }
    ```

+ Response 400 (application/json)
  The supplied ID was malformed.
  + Body
    ```json
    {
      "errors": ["Bad request"]
    }
    ```

+ Response 403 (application/json)
  The organization does not have the relevant feature.
  + Body
    ```json
    {
      "errors": ["Account requires the performance-comparisons feature"]
    }
    ```


### List Saved Searches on a Project [GET /projects/{project_id}/saved_searches{?shared}]

Returns the saved searches for a given project sorted by name in lexographic order.

+ Parameters
  + `project_id`: 515fb9337c1074f6fd000003 (string)
  + `shared`: true (string, optional) - Limit Saved Searches returned to only those with this `shared` property

+ Response 200 (application/json)
  + Attributes (enum[SavedSearch])

+ Response 403 (application/json)
  The organization does not have the relevant feature.
  + Body
    ```json
    {
      "errors": ["Account requires the performance-comparisons feature"]
    }
    ```


### Get the Usage Summary for a Saved Search [GET /saved_searches/{id}/usage_summary]

Returns a short usage summary for a saved search.

+ Parameters
  + `id`: 515fb9337c1074f6fd000003 (string, required) - the ID of the saved search to get a summary for

+ Response 200 (application/json)
  + Attributes (SavedSearchUsageSummary)
+ Response 400 (application/json)
  The request was bad. This is returned when supplied malformed ids.
  + Body
    ```json
    {
      "errors": ["Bad request"]
    }
    ```
+ Response 404 (application/json)
  The saved search was not found.
  + Body
    ```json
    {
      "errors": ["Saved Search not found"]
    }
    ```






# Group Errors

## Errors [/errors]

An [Error](https://docs.bugsnag.com/product/error-grouping/) is a grouping of events of the same
crash/exception reported to Bugsnag.

### List the Errors on a Project [GET /projects/{project_id}/errors{?sort,direction,per_page,filters,base}]

Get a list of the errors on a project. If you require a feed of all new errors as they are
reported consider setting up a
[webhook integration](https://docs.bugsnag.com/product/integrations/webhook/) instead.

+ Parameters
  + `project_id`: `515fb9337c1074f6fd000003` (string, required) - ID of the Project
  + base: `2017-04-12T22:50:04Z` (string, optional)
      Default: current time
      Only Error Events occurring before this time will be considered.

  + sort (enum[string], optional)
      Which field to sort the results by
      + Default: `last_seen`
      + Members
          + `last_seen` - sorts Errors by most recent occurrence
          + `first_seen` - sorts Errors by first occurrence
          + `users` - sorts Errors by number of users affected
          + `events` - sorts Errors by number of occurrences
          + `unsorted` - This is only necessary in cases where the API returns an error code 60000, indicating that in order to obtain complete results, the unsorted API should be used.
  + direction (enum[string], optional)
      Which direction to sort the results by
      + Default: `desc`
      + Members
          + `asc` - ascending
          + `desc` - descending
  + `per_page` (number, optional) - How many results to return per page. When the `sort` parameter is set to `unsorted`, the actual page size may be smaller than the requested `per_page` size.
      + Default: `30`
  + filters (Filters, optional)
      The request may optionally provide a `filters` object. Only Errors
      matching `filters` will be returned in the response. See [Filtering](/#introduction/filtering)
      for details.


+ Request (application/json)

+ Response 200 (application/json)

  + Headers

            Link: `<https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors?offset=590bce131f7314d98eac23ba&sort=last_seen>; rel="next"`
            X-Total-Count: 123

  + Attributes (array[ErrorApiView])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

+ Response 422 (application/json)

  The number of sorted results that can be obtained from this endpoint is
  limited. By default, results are sorted by descending Event occurrences.
  If you receive this error, you may still obtain complete results by
  setting the "sort" parameter to "unsorted".

  + Body
    ```json
    {
      "errors": ["Unable to return complete results"],
      "code": 60000
    }
    ```

### View an Error [GET /projects/{project_id}/errors/{error_id}]

+ Parameters
  + `error_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the Error
  + `project_id`: `337515fb9c1074f6fd000001` (string, required) - ID of the Project

+ Response 200 (application/json)
  + Attributes (ErrorApiView)

+ Response 404 (application/json)
  Error could not be found. Check the supplied `error_id`.
  + Body
    ```json
    {
      "errors": ["Error not found"]
    }
    ```

### Update an Error [PATCH /projects/{project_id}/errors/{error_id}]

+ Parameters
  + `error_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the Error
  + `project_id`: `337515fb9c1074f6fd000001` (string, required) - ID of the Project

+ Request
  + Attributes (ErrorUpdateRequest)

+ Response 200 (application/json)
  + Attributes (ErrorApiView)

+ Response 204
  Returned upon a successful `discard` or `delete` `operation`.
  + Body

+ Response 400 (application/json)
  Request validation error. See `errors` for specific details.
  + Body
    ```json
    {
      "errors": ["base must be iso8601 format"]
    }
    ```

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404 (application/json)
  Error could not be found or User could not be found (when attempting to assign
  an error). Check the supplied `error_id` or the  supplied
  `assigned_collaborator_id`. It may be that the user does not have access to
  the project that contains the error.
  + Body
    ```json
    {
      "errors": ["Error not found", "User not found"]
    }
    ```


### Bulk Update Errors [PATCH /projects/{project_id}/errors{?error_ids}]

+ Parameters
  + `project_id`: 515fb9337c1074f6fd000003 (string)
  + `error_ids`: `515fb9337c1074f6fd000001` (array[string], required) - IDs of the Errors to update

+ Request
  + Attributes (ErrorUpdateRequest)

+ Response 200 (application/json)
  + Attributes
      + operation (enum[string], required)
          The type of bulk operation that was applied to the set of Errors
          + Members
            + overriden_severity - indicates that the Errors were set to the supplied `severity`.
            + assign - indicates that the Errors were assigned to the Collaborator specified by the `assigned_collaborator_id` parameter. If the request did not specify an `assigned_collaborator_id`, this operation means that the given Errors were unassigned. Note that errors may be assigned only to users who have accepted their Bugsnag invitation and have access to the project.
            + `create_issue` - indicates that a new issue was created for each Error.
            + `link_issue` - indicates that the Errors were linked to the issue specified by the `issue_url` parameter.
            + `unlink_issue` - indicates that any of the Errors that had linked issues have been unlinked
            + open - indicates that all of the Errors were set to open.
            + snooze - indicates that all of the Errors were set to snoozed.
            + fix - indicates that all of the Errors were set to fixed.
            + ignore - indicates that all of the Errors were ignored.
            + delete - indicates that all of the Errors were deleted.
            + discard - indicates that all of the Errors were discarded.
      + *515fb9337c1074f6fd000001* (object) - The response will contain an entry with the following fields for each of the `error_ids` specified in the request. These fields show the state of each of the Errors bulk modifiable fields after the updates have been applied.
          + `assigned_collaborator_id`: `515fb9337c1074f6fd000002` (string, optional) - The Error's assigned user.
          + `assigned_team_id`: `515fb9337c1074f6fd000003` (string, optional) - The Error's assigned team.
          + `linked_issues` (array[ErrorCreatedIssue], optional) - Issues linked to this error
          + `created_issue` (ErrorCreatedIssue, optional) - Deprecated field that returns the first `linked_issue`. Consider using the `linked_issues` field instead
          + `reopen_rules` (ErrorReopenRules, optional) - Snooze rules for automatically reopening the Error
          + status (ErrorStatus) - The Error's work flow status. Must be one of:
          + discarded (boolean) - Whether future Events for this error are being discarded

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404 (application/json)
  Project could not be found or User could not be found (when attempting to assign
  an error). Check the supplied `error_id` or the  supplied
  `assigned_collaborator_id`. It may be that the user does not have access to
  the project that contains the error.

  + Body
    ```json
    {
      "errors": ["Project not found", "User not found"]
    }
    ```

### Delete an Error [DELETE /errors/{id}]

+ Parameters
  + `id`: 515fb9337c1074f6fd000003 (string, required)

+ Response 204 (application/json)

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404 (application/json)
  Error could not be found. Check the supplied `error_id`.
  + Body
    ```json
    {
      "errors": ["Error not found"]
    }
    ```

### Delete all Errors in a Project [DELETE /projects/{project_id}/errors]

Deletes all Error and Event data in a project. Use with caution. This action cannot be reversed.

+ Parameters
  + `project_id`: `515fb9337c1074f6fd000003` (string, required) - ID of the Project

+ Response 204 (application/json)

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

## Events [/events]

An Event represents a single occurrence of an [Error](https://docs.bugsnag.com/product/error-grouping/).

### View an Event [GET /projects/{project_id}/events/{event_id}]

Note that event objects can include custom metadata and diagnostic fields
configured directly in your app or added by the notifier library. The API
preserves the original casing and key format as received, so any casing,
including both snake_case and camelCase, may be valid for some fields.

+ Parameters
  + `event_id`: 515fb9337c1074f6fd000009 (string, required) - ID of the Event
  + `project_id`: `337515fb9c1074f6fd000001` (string, required) - ID of the Project

+ Response 200 (application/json)
  + Attributes (EventApiView)

+ Response 404 (application/json)
  Event could not be found. Check the supplied `event_id`.
  + Body
    ```json
    {
      "errors": ["Event not found"]
    }
    ```

### Delete an Event [DELETE /projects/{project_id}/events/{event_id}]
+ Parameters
  + `event_id`: 515fb9337c1074f6fd000009 (string)
  + `project_id`: `337515fb9c1074f6fd000001` (string, required) - ID of the Project

+ Response 204 (application/json)
  + Attributes

+ Response 404 (application/json)
  Event could not be found. Check the supplied `event_id`.
  + Body
    ```json
    {
      "errors": ["Event not found"]
    }
    ```

### List the Events on an Error [GET /projects/{project_id}/errors/{error_id}/events{?sort,direction,filters,base,full_reports}]

Get a list of the events of an error. If you require a feed of all new events as they are
reported consider setting up a
[webhook integration](https://docs.bugsnag.com/product/integrations/webhook/) instead.

+ Parameters
  + `error_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the Error
  + `project_id`: `337515fb9c1074f6fd000001` (string, required) - ID of the Project
  + base: `2017-04-12T22:50:04Z` (string, optional)
      Default: current time
      Only Error Events occuring before this time will be considered.

  + sort (enum[string], optional)
      Which field to sort the results by
      + Default: `timestamp`
      + Members
          + `timestamp` - sorts Events by when they occurred
  + direction (enum[string], optional)
      Which direction to sort the results by
      + Default: `desc`
      + Members
          + `asc` - ascending
          + `desc` - descending
  + `per_page` (number, optional) - How many results to return per page, up to a maximum of `30`.
      + Default: `30`
  + filters (Filters, optional)
      The request may optionally provide a `filters` object. Only Errors
      matching `filters` will be returned in the response. See [Filtering](/#introduction/filtering)
      for details.
  + full_reports (boolean, optional)
      whether to request full reports (so the response has items that match the response format of the "View an Event" endpoint)
      + Default: false

+ Request (application/json)

+ Response 200 (application/json)

  + Headers

            Link: `<https://api.bugsnag.com/project/515fb9337c1074f6fd000003/errors/515fb9337c1074f6fd000001/events?offset=590bce131f7314d98eac23ba&sort=timestamp>; rel="next"`
            X-Total-Count: 123

  + Attributes (array[ElasticSearchEventApiView])

+ Response 404 (application/json)
  Error could not be found. Check the supplied `error_id`.
  + Body
    ```json
    {
      "errors": ["Error not found"]
    }
    ```

### View the latest Event on an Error [GET /errors/{error_id}/latest_event]

+ Parameters
  + `error_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the Error

+ Request (application/json)

+ Response 200 (application/json)
  + Attributes (EventApiView)

+ Response 404 (application/json)
  Error could not be found. Check the supplied `error_id`.
  + Body
    ```json
    {
      "errors": ["Error not found"]
    }
    ```

### List the Events on a Project [GET /projects/{project_id}/events{?sort,direction,filters,base,full_reports}]

+ Parameters
  + `project_id`: 515fb9337c1074f6fd000003 (string)
  + base: `2017-04-12T22:50:04Z` (string, optional)
      Default: current time
      Only Error Events occurring before this time will be considered.

  + sort (enum[string], optional)
      Which field to sort the results by
      + Default: `timestamp`
      + Members
          + `timestamp` - sorts Events by when they occurred
  + direction (enum[string], optional)
      Which direction to sort the results by
      + Default: `desc`
      + Members
          + `asc` - ascending
          + `desc` - descending
  + `per_page` (number, optional) - How many results to return per page, up to a maximum of `30`.
      + Default: `30`
  + filters (Filters, optional)
      The request may optionally provide a `filters` object. Only Errors
      matching `filters` will be returned in the response. See [Filtering](/#introduction/filtering)
      for details.
  + full_reports (boolean, optional)
      whether to request full reports (so the response has items that match the response format of the "View an Event" endpoint)
      + Default: false

+ Request (application/json)

+ Response 200 (application/json)

  + Headers

            Link: `<https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events?offset=590bce131f7314d98eac23ba&sort=timestamp>; rel="next"`
            X-Total-Count: 123

  + Attributes (array[ElasticSearchEventApiView])

+ Response 404 (application/json)
  Error could not be found. Check the supplied `error_id`.
  + Body
    ```json
    {
      "errors": ["Error not found"]
    }
    ```

## Pivots [/pivots]

Pivots represent the dimensions along which groups of Projects and Errors can be
summarized. The values of a Pivot describe the distribution of Events across one
of these dimensions. Pivot values can be used to answer questions like, which users
were most affected a particular error, or, what was the distribution of Events across
all of a Project's Releases?

### List Pivots on an Error [GET /projects/{project_id}/errors/{error_id}/pivots{?filters,pivots,summary_size,per_page}]
+ Parameters
  + `error_id` (string, required) - ID of the Error
  + `project_id`: `337515fb9c1074f6fd000001` (string, required) - ID of the Project
  + filters (Filters, optional) - The cardinalities for each returned Pivot will only reflect Events that match the provided Filters.
  + `summary_size`: 10 (number, optional) - The number of elements to include in the returned `summary.list`. The lower the value of this parameter, the greater the value of each Pivot's returned `other` count.
  + pivots (array, optional) - An array of EventField `display_id`s which identify Pivots, this will return results about only these Pivots.
  + `per_page`: 30 (number, optional)
      + Default: 30

+ Response 200 (application/json)
  + Attributes (array[PivotApiView])
  + Headers

            Link: `<https://api.bugsnag.com/projects/337515fb9c1074f6fd000001/errors/515fb9337c1074f6fd000001/pivots/?offset=2017-04-12T22:50:04Z>; rel="next"`
            X-Total-Count: 123

+ Response 400 (application/json)
  Request validation error. See `errors` for specific details.
  + Body
    ```json
    {
      "errors": ["summary_size must be a number"]
    }
    ```

+ Response 404 (application/json)
  Error could not be found. Check the supplied `error_id`.
  + Body
    ```json
    {
      "errors": ["Error not found"]
    }
    ```

### List values of a Pivot on an Error [GET /projects/{project_id}/errors/{error_id}/pivots/{event_field_display_id}/values{?filters,base,sort}]

+ Parameters
  + `error_id` (string, required) - ID of the Error
  + `project_id`: `337515fb9c1074f6fd000001` (string, required) - ID of the Project
  + `event_field_display_id`: `app.release_stage` - The display ID of the EventField for which Pivot values should be returned.
  + filters (Filters, optional) - The values returned will only reflect Events that match the provided Filters.
  + sort: `unsorted` (string, optional) By default Pivot values will be ordered by descending Event occurrences. This may optionally be set to "unsorted". This is only necessary in cases where the API returns an error code 60000, indicating that in order to obtain complete results, the unsorted API should be used.
  + base: `2017-04-12T22:50:04Z` (string, optional)
      Only Events occurring before this time will be considered.
  + `per_page`: 30 (number, optional)
      + Default: 30

+ Response 200 (application/json)
  + Attributes (array[PivotValueApiView])
  + Headers

            Link: `<https://api.bugsnag.com/projects/337515fb9c1074f6fd000001/errors/515fb9337c1074f6fd000001/pivots/release.stage/values?offset=2017-04-12T22:50:04Z>; rel="next"`
            X-Total-Count: 123

+ Response 404 (application/json)
  Error could not be found. Check the supplied `error_id`.
  + Body
    ```json
    {
      "errors": ["Error not found"]
    }
    ```

+ Response 422 (application/json)

  The number of sorted results that can be obtained from this endpoint is
  limited. By default, results are sorted by descending Event occurrences.
  If you receive this error, you may still obtain complete results by
  setting the "sort" parameter to "unsorted".

  + Body
    ```json
    {
      "errors": ["Unable to return complete results"],
      "code": 60000
    }
    ```

### List Pivots on a Project [GET /projects/{project_id}/pivots{?filters,pivots,summary_size}]
+ Parameters
  + `project_id` (string, required) - ID of the project
  + filters (Filters, optional) - The cardinality and summary returned for each returned Pivot will only reflect Events that match the provided Filters.
  + `summary_size`: 10 (number, optional) - The number of Pivots to return information about. 10 by default.
  + pivots (array, optional) - An array of Pivot ids, this will return results about only these Pivots.

+ Response 200 (application/json)
  + Attributes (array[PivotApiView])

+ Response 400 (application/json)
  Request validation error. See `errors` for specific details.
  + Body
    ```json
    {
      "errors": ["summary_size must be a number"]
    }
    ```

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### List values of a Pivot on a Project [GET /projects/{project_id}/pivots/{event_field_display_id}/values{?filters,base,sort}]
+ Parameters
  + `project_id` (string, required) - ID of the Project
  + `event_field_display_id`: `app.release_stage` - The display ID of the EventField for which Pivot values should be returned.
  + filters (Filters, optional) - The values returned will only reflect Events that match the provided Filters.
  + sort: `unsorted` (string, optional) By default Pivot values will be ordered by descending Event occurrences. This may optionally be set to "unsorted". This is only necessary in cases where the API returns an error code 60000, indicating that in order to obtain complete results, the unsorted API should be used.
  + base: `2017-04-12T22:50:04Z` (string, optional)
      Only Events occurring before this time will be considered.
  + `per_page`: 30 (number, optional)
      + Default: 30

+ Response 200 (application/json)
  + Attributes (array[PivotValueApiView])
  + Headers

            Link: `<https://api.bugsnag.com/projects/515fb9337c1074f6fd000001/pivots/release.stage/values?offset=2017-04-12T22:50:04>; rel="next"`
            X-Total-Count: 123

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

+ Response 422 (application/json)

  The number of sorted results that can be obtained from this endpoint is
  limited. By default, results are sorted by descending Event occurrences.
  If you receive this error, you may still obtain complete results by
  setting the "sort" parameter to "unsorted".

  + Body
    ```json
    {
      "errors": ["Unable to return complete results"],
      "code": 60000
    }
    ```


## Trends [/trends]

A Trend shows instances of events over time, by error or project.

### List the Trends for an Error (buckets) [GET /projects/{project_id}/errors/{error_id}/trend{?filters,buckets_count}]

Counts for an Error in a given time range, suitable for drawing histograms. Will return a maximum of 50 buckets.

+ Parameters
  + `error_id` (string, required) - ID of the error
  + `project_id` (string, required) - ID of the Project
  + filters (Filters, optional) - Search filters to restrict the events reported in the trend
  + `buckets_count` (number, required) - Number of buckets to group trend data into

+ Response 200 (application/json)

  + Attributes (array[Trend1, Trend2])

+ Response 400 (application/json)
  Returned when the number of data points required to respond to the request would exceed the maximum.

  + Body
    ```json
    {
      "errors": ["Buckets count must be between 1 and 50"]
    }
    ```

### List the Trends for an Error (resolution) [GET /projects/{project_id}/errors/{error_id}/trend{?filters,resolution}]

Counts for an Error in a given time range, suitable for drawing histograms. Will return a maximum of 2000 data points.

+ Parameters
  + `error_id` (string, required) - ID of the error
  + `project_id` (string, required) - ID of the Project
  + filters (Filters, optional) - Search filters to restrict the events reported in the trend
  + resolution (enum[string], required)
      The trend data will be grouped so that each bucket spans the given time period
      + Members
          + `1m`
          + `5m`
          + `30m`
          + `2h`
          + `12h`

+ Response 200 (application/json)

  When called with `resolution` param:

  + Attributes (array[Trend1, Trend2])

+ Response 400 (application/json)
  Returned when the number of data points required to respond to the request would exceed the maximum.

  + Body
    ```json
    {
      "errors": ["Too many data points requested. Please use a narrower time range or lower resolution."]
    }
    ```

### List the Trends for a Project (buckets) [GET /projects/{project_id}/trend{?filters,buckets_count}]
+ Parameters
  + `project_id` (string, required) - ID of the project
  + filters (Filters, optional) - Search filters to restrict the events reported in the trend
  + `buckets_count` (number, required) - Number of buckets to group trend data into

+ Response 200 (application/json)

  + Attributes (array[Trend1, Trend2])

+ Response 400 (application/json)
  Returned when the number of data points required to respond to the request would exceed the maximum.

  + Body
    ```json
    {
      "errors": ["Buckets count must be between 1 and 50"]
    }
    ```

### List the Trends for a Project (resolution) [GET /projects/{project_id}/trend{?filters,buckets_count,resolution}]
+ Parameters
  + `project_id` (string, required) - ID of the project
  + filters (Filters, optional) - Search filters to restrict the events reported in the trend
  + resolution (enum[string], required)
      The trend data will be grouped so that each bucket spans the given time period
      + Members
          + `1m`
          + `5m`
          + `30m`
          + `2h`
          + `12h`

+ Response 200 (application/json)

  + Attributes (array[Trend1, Trend2])

+ Response 400 (application/json)
  Returned when the number of data points required to respond to the request would exceed the maximum.

  + Body
    ```json
    {
      "errors": ["Too many data points requested. Please use a narrower time range or lower resolution."]
    }
    ```





# Group Integrations

Integrations are used to integrate Bugsnag with issue tracker, team notification, data-forwarding and on-call services. In terms of the data access API, an integration refers to a link from Bugsnag to an external service. When set up on a project they become [Configured Integrations](/#reference/integrations/configured-integrations).

## Configured Integrations

Configured integrations allow Bugsnag to use an integration for the project they are set up on. Only one issue tracker integration can be configured on a project unless the account has access to the multiple issue trackers feature, but there is no limit on the number of other integrations. Configured integrations can be set up to fire automatically with trigger configurations.

## Trigger configurations

When setting up an integration with other services, it may be desirable to have actions trigger automatically when something occurs. We configure these triggers using a _trigger config_. The structure of a particular trigger config depends on the `trigger_config_key` which [forms part of the URL for updating a trigger config](/#reference/integrations/configured-integrations/update-a-configured-integration's-trigger-config), and some triggers are only applicable for some integrations types.

### Types of trigger

There are eleven supported triggers for configured integrations. These are:

|Trigger Config Key|Triggers...|
|---|---|
|`first_exception_config`|when a new error is received|
|`error_event_frequency_config`|when an error occurs with a given frequency|
|`exception_config`|every time an error receives a new event|
|`power_ten_config`|when an error reaches a milestone|
|`new_release_config`|when the project sees a new release|
|`project_spiking_config`|when there is [a spike in the number of errors](https://docs.bugsnag.com/product/integrations/spike-detection/)|
|`reopened_config`|when an error is automatically reopened|
|`error_state_manual_change_config`|when a collaborator changes an error's state|
|`comment_config`|when a collaborator comments on an error|
|`project_sampling_started_config`|when a project is being rate-limited|
|`project_approaching_rate_limit_config`|when a project is approaching its rate limit|

Certain triggers are not applicable to all [integration types](https://docs.bugsnag.com/product/integrations/):

|[Integration Type](https://docs.bugsnag.com/product/integrations/)|Valid Trigger Configs|
|---|---|
|Data forwarding|All are supported|
|Issue tracker|Only `first_exception_config` and `error_event_frequency_config`|
|Team notifications|All are supported|
|Incident management|All except `new_release_config` and `comment_config`|

### Structure

When updating a trigger config there is a common structure: an `active` parameter to enable that trigger, and a `settings` parameter which sets up the specifics. Depending on the particular trigger, some subset of these setting parameters may be used. Note that while the `settings` parameter takes an array, only one object should be included in that array.

```
{
  "active": true,
  "settings": [
    {
      "saved_search_id": "515fb9337c1074f6fd000001",
      "basic_filter": {
        "release_stages": ["development"],
        "severities": ["error", "warning"],
        "unhandled_states": ["unhandled"],
        "error_statuses": ["open", "fixed"]
      },
      "period": "1d",
      "threshold": 1000,
      "type": "event",
      "include_all_states": true,
      "release_stages": ["development"],
    }
  ]
}
```

When supported, you may supply either a `saved_search_id` _or_ a `basic_filter`. Using a `saved_search_id` (also called a saved filterset) is only available for organizations on plans that support advanced filtering. Note as well that using a `saved_search_id` will make that saved search shared with all collaborators on the project. Only saved searches with a `type` of `error` are supported on configured integrations.

|Settings parameter|Valid|
|---|---|
|`saved_search_id`|All except `new_release_config`, `power_ten_config`, and `reopened_config`, if no `basic_filter` provided|
|`basic_filter`|All except `new_release_config`, if no `saved_search_id` provided|
|`period`|Only `error_event_frequency_config`|
|`threshold`|Only `error_event_frequency_config`|
|`type`|Only `error_event_frequency_config`|
|`include_all_states`|Only `project_spiking_config` for any integration, or `exception_config` on data forwarding integrations|
|`release_stages`|Only `new_release_config`|

If provided, `period` should be constructed using an integer and a unit (`m` for minute, `h` for hour, or `d` for day). `period` must be equal to or less than one week (e.g. `3d` for 3 days) in most cases, but must be equal to or less than one day when `type` is `user`.

`threshold` should be an integer, and `include_all_states` is a boolean. `release_stages` should match the release stages to be included (or blank for all).

The `basic_filter` should be a hash containing any fields that should be restricted. As with the top-level parameter, the `basic_filter` `release_stages` should match the release stages to be included (or blank for all). The `severities` array accepts values `error` `warning` and `info`, the `unhandled_states` array accepts `unhandled` and `handled`, and the `error_statuses` array accepts `open` `fixed` `snoozed` and `ignored`.

### Examples

#### Trigger on a new production release

This will trigger the configured integration when a new release is first seen on production.

```
PATCH /configured_integrations/[ID]/trigger_configs/new_release_config

{
  "active": true,
  "settings": [
    {
      "release_stages": ["production"],
    }
  ]
}
```

#### Trigger on a spike of errors in a saved filterset

This will trigger the configured integration when there's a spike detected on the errors matching a saved search.

```
PATCH /configured_integrations/[ID]/trigger_configs/project_spiking_config

{
  "active": true,
  "settings": [
    {
      "saved_search_id": "515fb9337c1074f6fd000001",
    }
  ]
}
```

#### Trigger on a certain frequency of unhandled errors

This will trigger the configured integration when there's 10,000 unhandled error-level events on errors that are open, fixed, or snoozed, in a 5 minute window.

```
PATCH /configured_integrations/[ID]/trigger_configs/error_event_frequency_config

{
  "active": true,
  "settings": [
    {
      "basic_filter": {
        "severities": ["error"],
        "unhandled_states": ["unhandled"],
        "error_statuses": ["open","fixed","snoozed"]
      },
      "threshold": 10000,
      "period": "5m",
      "type": "event"
    }
  ]
}
```

## Integrations [/integrations]

Integrations are used to integrate Bugsnag with issue tracker, team notification, data-forwarding and on-call services. When set up on a project they become [Configured Integrations](/#reference/integrations/configured-integrations).

### List the supported Integrations [GET /integrations]

Get information about all the integrations supported and how they can be configured. This includes details of the fields needed to set them up.


+ Response 200 (application/json)
  + Attributes (array[Integration])

### Test an Integration [POST /integrations/test{?key,configuration}]

Test an integration using the configuration parameters provided without saving it as a configured integration. For `issue-tracker` integrations this will created a test issue. For `team-notification`, `data-forwarding` and `on-call` notifications it will send a test alert/message. Use the [Configured Integrations](/#reference/integrations/configured-integrations) test endpoint for integrations which are already configured.

+ Request
  + Attributes
      + key: jira (string, required) - The key of the integration service to test. The supported keys can be obtained from [/integrations](/#reference/integrations/integrations)
      + configuration (SampleIntegrationConfiguration, required) - The configuration fields and their values to test the integration with. The required fields for each integration service can be obtained from [/integrations](/#reference/integrations/integrations). Example:

+ Response 204 (application/json)
  The integration was successfully tested.
  + Body

+ Response 400 (application/json)
  The test of the integration failed.
  + Body
    ```json
    {
      "errors":["Invalid username or password"]
    }
    ```


## Configured Integrations [/configured_integrations]

Configured integrations record the details of issue tracker, team notification, data-forwarding and on-call integrations set up on Bugsnag projects. Only one issue tracker integration can be configured on a project but there is no limit on the number of other integrations.

### Configure an Integration [POST /projects/{project_id}/configured_integrations]

Configure a new integration for a project. Only one issue-tracker-type integration is allowed on a project, unless your plan supports multiple issue trackers.

+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the project to configure the integration for.

+ Request
  + Attributes (ConfiguredIntegrationCreateRequest)

+ Response 200 (application/json)
  + Attributes (ConfiguredIntegration)

+ Response 400 (application/json)
  The integration could not be created. Check the errors supplied in the response.
  + Body
    ```json
    {
      "errors": ["Invalid password"]
    }
    ```

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


### List Summaries of the Configured Integrations for a Project [GET /projects/{project_id}/configured_integration_summaries]

List summaries of all the configured integrations on a project. Summaries are lightweight descriptions of a configured integration. For a full description, use the [Get a Configured Integration](/#reference/integrations/configured-integrations/get-a-configured-integration) endpoint.

+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the project to get the configured integration summaries for.
  + `per_page` (number, optional) - How many results to return per page, up to a maximum of `100`.
  + `page_token` (number, optional) - Page of results to show.
  + `category`: `issue-tracker` (string, optional) - Whether to limit the results to those matching this category.

+ Response 200 (application/json)
  + Attributes (array[ConfiguredIntegrationSummary])

+ Response 404 (application/json)
  The project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```


### Get a Configured Integration [GET /configured_integrations/{id}]

Get the full description of a configured integration.

+ Parameters
  + `id`: `625ab9337c1074f6fd004761` (string, required) - ID of the configured integration.

+ Response 200 (application/json)
  + Attributes (ConfiguredIntegration)

+ Response 404 (application/json)
  The configured integration could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Integration not found"]
    }
    ```

### Update a Configured Integration [PATCH /configured_integrations/{id}]

Update the configuration for an integration on a project.

+ Parameters
  + `id`: `515fb9337c1074f6fd000001` (string, required) - ID of the configured integration to update.

+ Request
  + Attributes (ConfiguredIntegrationUpdateRequest)

+ Response 200 (application/json)
  + Attributes (ConfiguredIntegration)

+ Response 400 (application/json)
  The integration could not be updated. Check the errors supplied in the response.
  + Body
    ```json
    {
      "errors": ["Invalid password"]
    }
    ```

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404 (application/json)
  Configured integration could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Integration not found"]
    }
    ```

### Update a Configured Integration's Trigger Config [PATCH /configured_integrations/{id}/trigger_configs/{trigger_config_key}]

Set a condition for automatic integration behavior. See the [reference on trigger configs](/#reference/integrations/) for details on how to construct the payload.

+ Parameters
  + `id`: `515fb9337c1074f6fd000001` (string, required) - ID of the configured integration
  + `trigger_config_key`: 'project_spiking_config' (string, required) - key of the configured integration's trigger_config to update

+ Request
  + Attributes (TriggerConfig)

+ Response 200 (application/json)
  + Attributes (TriggerConfig)

+ Response 400 (application/json)
  The request was bad. Check the errors supplied in the response.
  + Body
    ```json
    {
      "errors": ["active must be one of true or false"]
    }
    ```

+ Response 403 (application/json)
  The account does not have the notifications advanced filtering feature enabled
  + Body
    ```json
    {
      "errors": ["Advanced filtering is not enabled for this account"]
    }
    ```

+ Response 403 (application/json)
  Attempted to update a trigger config that requires a feature the account does not have.
  + Body
    ```json
    {
      "errors": ["Account reuqires the approaching-rate-limit-notifications feature"]
    }
    ```

+ Response 404 (application/json)
  Email Notification could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Configured integration not found"]
    }
    ```

+ Response 404 (application/json)
  Saved Search not found. If there is a Saved Search with this ID, the type may not be 'error'.
  + Body
    ```json
    {
      "errors": ["Saved Search not found"]
    }
    ```

### Delete a Configured Integration [DELETE /configured_integrations/{id}]

Delete the configuration for an integration.

+ Parameters
  + `id`: `515fb9337c1074f6fd000001` (string, required) - ID of the configured integration to delete.

+ Response 204 (application/json)
  The configured integration was successfully deleted.
  + Body

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404 (application/json)
  Configured integration could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Integration not found"]
    }
    ```

### Test a Configured Integration [POST /configured_integrations/{id}/test]

Test a configured integration. For `issue-tracker` integrations this will created a test issue. For `team-notification`, `data-forwarding` and `on-call` notifications it will send a test alert/message. To test an integration without saving the configuration first, use [/integrations/test](/#reference/integrations/configured-integrations/test-a-configured-integration).

+ Parameters
  + `id`: `515fb9337c1074f6fd000001` (string) - ID of the configured integration

+ Request
  + Attributes (SampleIntegrationConfigurationRequest)

+ Response 204 (application/json)
  The integration was successfully tested.
  + Body

+ Response 400 (application/json)
  The integration was not successfully tested. Check the errors supplied in the response.
  + Body
    ```json
    {
      "errors":["Invalid password"]
    }
    ```

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


## Integration Connections [/integration_connections]

Integration Connections allow organization-level configured integrations. Currently this setup only works for the Jira app.


### List the Integration Connections for an Organization [GET /organizations/{organization_id}/integration_connections]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization the integration connections belongs to.
  + `type`: `jira` (string, required) - The external software to communicate with. Currently this can only be 'jira' or nil.

+ Response 200 (application/json)
  + Attributes (array[IntegrationConnectionManualApiView])

+ Response 404 (application/json)
  The organization could not be found.
  + Body
    ```json
    {
      "errors": ["Organization not found"]
    }
    ```



# Group Organizations

## Organizations [/organizations]

An Organization is a collection of Bugsnag projects owned by a company, group, or individual.

### Create an Organization [POST /organizations]

  Creates a new Bugsnag organization and adds the current user to it as an admin. Requires user authentication as the initial user of the organization.

+ Request
  + Attributes
      + `name`: `Acme Co.` (string, required)
        Name of the company or organization to create

+ Response 200 (application/json)
  + Attributes (OrganizationApiView)

+ Response 400 (application/json)
  The request was bad. Check the errors supplied in the response.
  Examples: Heroku users and saml-authenticated users cannot create an organization
  + Body
    ```json
    {
      "errors": ["Cannot create upstream billing organization", "SAML users cannot create organization"]
    }
    ```

### View an Organization [GET /organizations/{id}]

+ Parameters
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the organization

+ Response 200 (application/json)
  + Attributes (OrganizationApiView)

+ Response 404 (application/json)
  An organization with the ID you provided could not be found.

  + Body
    ```json
    {
      "errors": ["Organization not found"]
    }
    ```

### Update an Organization [PATCH /organizations/{id}]

+ Parameters
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the organization

+ Request
  + Attributes (OrganizationUpdateRequest)

+ Response 200 (application/json)
  + Attributes (OrganizationApiView)

+ Response 400 (application/json)
  This Organization type cannot be updated via the API. Example: Heroku organizations.
  + Body
    ```json
    {
      "errors": ["cannot update upstream billing organization"]
    }
    ```

+ Response 404 (application/json)
  Organization could not be found. Check the supplied `organization_id`.
  + Body 
  ```json
  {
    "errors": ["Organization not found"]
  }
  ```
  
+ Response 403 (application/json)
  The user should be an Organization Administrator to perform this action

  + Body
    ```json
    {
      "errors": ["The requesting user should be an Organization Administrator to perform the action"]
    }
    ```
 
+ Response 403 (application/json)
  Organization does not have access to a required feature for the parameter being updated.

  + Body 
  ```json
  {
    "errors": ["Default project event cap unavailable on plan"]
  }
  ```

### Delete an Organization [DELETE /organizations/{id}]

+ Parameters
  + `id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization

+ Response 204 (application/json)

+ Response 400 (application/json)
  This Organization cannot be deleted via the API. (e.g. Heroku organizations)
  + Body
    ```json
    {
      "errors": ["cannot delete upstream billing organization"]
    }
    ```

+ Response 404 (application/json)
  Organization could not be found. Check the supplied `organization_id`.
  + Body 
  ```json
  {
    "errors": ["Organization not found"]
  }
  ```
  
+ Response 403 (application/json)
  The user should be an Organization Administrator to perform this action

  + Body
    ```json
    {
      "errors": ["The requesting user should be an Organization Administrator to perform the action"]
    }
    ```
 

### Regenerate an Organization's API key [DELETE /organizations/{id}/api_key]

+ Parameters
  + `id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization

+ Response 200 (application/json)
  + Attributes (OrganizationApiView)

+ Response 404 (application/json)
  Organization could not be found. Check the supplied `organization_id`.
  + Body 
  ```json
  {
    "errors": ["Organization not found"]
  }
  ```
  
+ Response 403 (application/json)
  The user should be an Organization Administrator to perform this action

  + Body
    ```json
    {
      "errors": ["The requesting user should be an Organization Administrator to perform the action"]
    }
    ```
 

### Regenerate an Organization's auth token [DELETE /organizations/{id}/auth_token]

  Deprecated. Use [user-level authentication tokens](/#introduction/authentication) instead.
  Generate a new data access API auth token for the organization. This token
  allows you to read data from and write data to Bugsnag relating to your
  Organization, Projects, Errors, etc. After regenerating the auth token, the
  prior data access API auth token will no longer be supported. Note that this
  key is different from the project-level notifier API key that you use to
  identify a project to Bugsnag when you report errors.

+ Parameters
  + `id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization

+ Response 200 (application/json)
  + Attributes (OrganizationApiView)

+ Response 404 (application/json)
  Organization could not be found. Check the supplied `organization_id`.
  + Body 
  ```json
  {
    "errors": ["Organization not found"]
  }
  ```
  
+ Response 403 (application/json)
  The user should be an Organization Administrator to perform this action

  + Body
    ```json
    {
      "errors": ["The requesting user should be an Organization Administrator to perform the action"]
    }
    ```
 


## Collaborators [/collaborators]

Collaborators are other users in your Bugsnag organization who collaborate on fixing errors
that have been reported.

### Show a Collaborator on an Organization [GET /organizations/{organization_id}/collaborators/{id}]

Show a collaborator within an organization. Requires requesting user to be an organization admin. 

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the collaborator

+ Response 200 (application/json)
  + Attributes (CollaboratorApiView)

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the Organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you provided or a user with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "User not found"]
    }
    ```

### Show Collaborator on a Project [GET /projects/{project_id}/collaborators/{id}]

Show a collaborator in a project. Requires requesting user to have access to the given project. 

+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the project
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the collaborator
+ Response 200 (application/json)
  + Attributes (CollaboratorApiView)

+ Response 404 (application/json)
  A project with the ID you provided could not be found, or you do not have access
to the project.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```
+ Response 404 (application/json)
  A collaborator with the ID you provided could not be found, or they do not have access to the project.
  + Body
    ```json
    {
      "errors": ["User not found"]
    }
    ```

### List Collaborators [GET /organizations/{organization_id}/collaborators{?per_page}]

List all collaborators that are members of your organization.

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of your organization
  + `per_page`: 10 (number, optional)
      + Default: 30
  + `q`: Marco (string, optional) - Search collaborators with names or emails matching parameter

+ Response 200 (application/json)
  + Attributes (array[CollaboratorApiView])

  + Headers

            Link: `<https://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/collaborators?offset=517c41f07c1074aee9000002>; rel="next"`
            X-Total-Count: 34

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the Organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found"]
    }
    ```


### Create a Collaborator [POST /organizations/{organization_id}/collaborators]

This endpoint is used to invite a collaborator to your Bugsnag organization. If
the user has already been invited, this endpoint can be used to resend their
invitation.

+ Parameters
  + organization_id: `515fb9337c1074f6fd000001` (string, required) - the ID of your organization

+ Request
  + Attributes
      + email: `jane@example.com` (string, required)
        The email of the person to invite
      + name: `Jane Smith` (string)
        A name for the invited user
      + password: `v3rys3curep4ssw0rd` (string)
        A password for the invited user
      + `project_ids`: `590270d39ef172ad693e05b1` (array[string])
        The ids of projects in the current organization that the invited user should have access to. Leave blank if the `admin` field is set to true. Admins have access to all projects. Only one of `project_roles` and `project_ids` may be supplied.
      + `project_roles`: (object)
        The IDs of the projects to which the user should have access, and the roles they should have, either 'project_owner' or 'project_member'. Leave blank if the `admin` field is set to true. Admins have access to all projects. Only one of `project_roles` and `project_ids` may be supplied. This field may only be supplied if the `enterprise-roles` feature is enabled for the account.
        Example:
        ```
        {
          "590270d39ef172ad693e05b1": "project_owner",
          ...
        }
        ```
      + admin: false (boolean)
        Whether to give admin permissions to the invited user.

+ Response 200 (application/json)
  + Attributes (CollaboratorApiView)

+ Response 400 (application/json)
  The request was invalid. This may be because your organization's configuration
  prevents adding additional collaborators via email/password, e.g. for
  organizations that only allow login via SAML.
  + Body
    ```json
    {
      "errors": ["Password parameter is not permitted if only SAML logins are allowed"]
    }
    ```

+ Response 403 (application/json)
  You do not have permission to invite additional collaborators. It may be
  because your plan is at its seat limit and you need to upgrade your plan to
  add more collaborators, or you are not an admin on the Organization.
  + Body
    ```json
    {
      "errors": ["You have reached your plan's collaborator limit of 30", "Organization Administrator role required"]
    }
    ```

+ Response 403 (application/json)
  The `project_roles` parameter was supplied but your organization's plan does not have this feature.
  + Body
    ```json
    {
      "errors": ["Project member roles are not enabled for the current plan"]
    }
    ```

+ Response 403 (application/json)
  Both the `project_roles` and `project_ids` parameters were supplied.
  + Body
    ```json
    {
      "errors": ["project_roles cannot be specified at the same time as project_ids"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found"]
    }
    ```

### Bulk invite Collaborators [POST /organizations/{organization_id}/collaborators/bulk_invite]

This endpoint is used to invite multiple collaborator to your Bugsnag
organization at once. If a collaborator has already been invited but has not
accepted, this action will resend their invitation.

+ Parameters
  + organization_id: `515fb9337c1074f6fd000001` (string, required) - the ID of your organization

+ Request
  + Attributes
      + emails: `jane@example.com` (array[string])
        A list of emails to invite
      + `project_ids`: `590270d39ef172ad693e05b1` (array[string])
        The ids of projects in the current organization that the invited user should have access to. Leave blank if the `admin` field is set to true. Admins have access to all projects. Only one of `project_roles` and `project_ids` may be supplied.
      + `project_roles`: (object)
        The IDs of the projects to which the user should have access, and the roles they should have, either 'project_owner' or 'project_member'. Leave blank if the `admin` field is set to true. Admins have access to all projects. Only one of `project_roles` and `project_ids` may be supplied. This field may only be supplied if the `enterprise-roles` feature is enabled for the account.
        Example:
        ```
        {
          "590270d39ef172ad693e05b1": "project_owner",
          ...
        }
        ```
      + admin: false (boolean)
        Whether to give admin permissions to the invited user(s).

+ Response 200 (application/json)
  + Attributes (array[CollaboratorApiView])

+ Response 400 (application/json)
  The request was invalid. This may be because your organization's configuration
  prevents adding additional collaborators via email/password, e.g. for
  organizations that only allow login via SAML. Or you may have provided a field
  that is not valid when combined with other fields in your request. For example,
  you may not send the `name` or `password` fields when bulk inviting.
  + Body
    ```json
    {
      "errors": ["Cannot add collaborators to SAML organization", "Bulk operation does not support 'name' parameter"]
    }
    ```

+ Response 403 (application/json)
  You do not have permission to invite additional collaborators. It may be
  because your plan is at its seat limit and you need to upgrade your plan to
  add more collaborators, or you are not an admin on the Organization.
  + Body
    ```json
    {
      "errors": ["You have reached your plan's collaborator limit of 30", "Organization Administrator role required"]
    }
    ```

+ Response 403 (application/json)
  The `project_roles` parameter was supplied but your organization's plan does not have this feature.
  + Body
    ```json
    {
      "errors": ["Project member roles are not enabled for the current plan"]
    }
    ```

+ Response 403 (application/json)
  Both the `project_roles` and `project_ids` parameters were supplied.
  + Body
    ```json
    {
      "errors": ["project_roles cannot be specified at the same time as project_ids"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found"]
    }
    ```


### Update a Collaborator's permissions [PATCH /organizations/{organization_id}/collaborators/{id}]

+ Parameters
  + organization_id: `515fb9337c1074f6fd000001` (string, required) - the ID of your organization
  + id: `590270d39ef172ad693e05b1` (string, required) - the ID of the collaborator to update

+ Request
  + Attributes
      + `project_ids`: `590270d39ef172ad693e05b1` (array[string])
        The ids of projects in the current organization that the invited user should have access to. Leave blank if the `admin` field is set to true. Admins have access to all projects. Only one of `project_roles` and `project_ids` may be supplied.
      + `project_roles`: (object)
        The IDs of the projects to which the user should have access, and the roles they should have, either 'project_owner' or 'project_member'. Leave blank if the `admin` field is set to true. Admins have access to all projects. Only one of `project_roles` and `project_ids` may be supplied. This field may only be supplied if the `enterprise-roles` feature is enabled for the account.
        Example:
        ```
        {
          "590270d39ef172ad693e05b1": "project_owner",
          ...
        }
        ```
      + admin: false (boolean)
        Whether to give admin permissions to the user.

+ Response 200 (application/json)
  + Attributes (CollaboratorApiView)

+ Response 400 (application/json)
  The request was invalid. This may be because the fields provided are not valid
  for that user, or because the particular type of user cannot be updated via
  the API. For example, Heroku SSO users cannot be changed via the API.
  + Body
    ```json
    {
      "errors": ["Cannot update upstream billing collaborator"]
    }
    ```

+ Response 403 (application/json)
  You do not have permission to update collaborators. You need to be an admin of the Organization.
  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 403 (application/json)
  The `project_roles` parameter was supplied but your organization's plan does not have this feature.
  + Body
    ```json
    {
      "errors": ["Project member roles are not enabled for the current plan"]
    }
    ```

+ Response 403 (application/json)
  Both the `project_roles` and `project_ids` parameters were supplied.
  + Body
    ```json
    {
      "errors": ["project_roles cannot be specified at the same time as project_ids"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you provided or a user with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "User not found"]
    }
    ```

### Delete a Collaborator [DELETE /organizations/{organization_id}/collaborators/{id}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of your organization
  + id: `590270d39ef172ad693e05b1` (string, required) - the ID of the collaborator to update

+ Response 204 (application/json)

+ Response 400 (application/json)
  The request was invalid. This may be because the particular type of user
  cannot be destroyed via the API. For example, Heroku SSO users cannot be
  changed via the API. It is also not possible to remove the last admin from
  an organization. You must promote another user to admin first or delete
  the organization entirely.
  + Body
    ```json
    {
      "errors": ["Cannot remove last admin"]
    }
    ```

+ Response 403 (application/json)
  You do not have permission to update collaborators. You need to be an admin on the Organization.
  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you provided or a user with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "User not found"]
    }
    ```

### List Collaborators on a Project [GET /projects/{project_id}/collaborators{?per_page}]
List all collaborators that have access to a project.
+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the project
  + `per_page`: 10 (number, optional)
      + Default: 30
+ Response 200 (application/json)
  + Attributes (array[CollaboratorApiView])
  + Headers

            Link: `<https://api.bugsnag.com/projects/515fb9337c1074f6fd000001/collaborators?offset=517c41f07c1074aee9000002>; rel="next"`
            X-Total-Count: 34

+ Response 404 (application/json)
  A project with the ID you provided could not be found, or you do not have access
to the project.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### View the project count of a collaborator [GET /organizations/{organization_id}/collaborators/project_access_counts{?collaborator_ids}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + 'collaborator_ids': (array[string], requied) - IDs of collaborators to view the project count of

+ Response 200 (application/json)
  + Attributes (array[ProjectAccessCountsApiView])

+ Response 404 (application/json)
  You do not have permission to view this data. You must be an admin of the organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 403 (application/json)
  The collaborator ids must be in an array format

  + Body
    ```json
    {
      "errors": ["Collaborator_ids must be an array"]
    }
    ```

+ Response 404 (application/json)
  A collaborator was not found.

  + Body
    ```json
    {
      "errors": ["Collaborator not found"]
    }
    ```

### View Projects a Collaborator has access to [GET /organizations/{organization_id}/collaborators/{collaborator_id}/projects{?sort,direction,per_page}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the organization
  + `collaborator_id`: `590270d39ef172ad693e05b1` (string, required) - the ID of the user
  + `q` : MyProject (string, optional) - Search projects with names matching parameter
  + sort (enum[string], optional)
      Which field to sort the results by
      + Default: `created_at`
      + Members
          + `created_at`
  + direction (enum[string], optional)
      Which direction to sort the results by
      + Default: `desc`
      + Members
          + `asc`
          + `desc`
  + `per_page` (number, optional) - How many results to return per page
      + Default: `30`

+ Response 200 (application/json)
  + Attributes (array[ProjectApiView])
  + Headers

            Link: <https://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/collaborators/515fb9337c74f6fd00000100/projects?offset=517c41f07c1074aee9000002>; rel="next"
            X-Total-Count: 123

+ Response 403 (application/json)
  You do not have permission to view a collaborator's project access. You need
  to be an admin on the Organization.
  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you provided or a user with the ID you provided could not be found.
to the project.

  + Body
    ```json
    {
      "errors": ["Organization not found", "User not found"]
    }
    ```


### List a Collaborator's Access Details for Projects [GET /organizations/{organization_id}/collaborators/{collaborator_id}/project_accesses{?q,inaccessible,per_page}]

List summary details of the projects the collaborator has access to.

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - The ID of the organization.
  + `collaborator_id`: `515fb9337c1074f6fd000001` (string, required) - The ID of the collaborator.
  + `q': `shop` (string, optional) - A query term to filter the names of projects by.
  + `inaccessible`: `true` (boolean, optional) - Return only inaccessible projects on the organization if true, only accessible projects if false.
      + Default: `false`
  + `individual_only`: `true` (boolean, optional) - Whether to just return the Project access that the Collaborator has individually (and not as part of a Team).
      + Default: `false`
  + `per_page`: 10 (number, optional)
      + Default: 30

+ Response 200 (application/json)
  + Attributes (array[CollaboratorProjectAccessApiView])

+ Response 404 (application/json)
  An organization, collaborator or project with the ID you provided could not be found.

  + Body
    ```json
    {
    "errors": ["Project not found"]
    }
    ```

### Show a Collaborator's Access Details for a Project [GET /organizations/{organization_id}/collaborators/{collaborator_id}/project_accesses/{project_id}]

Return the details of a collaborator's access to a project.

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - The ID of the organization.
  + `collaborator_id`: `515fb9337c1074f6fd000001` (string, required) - The ID of the collaborator.
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - The ID of the project.

+ Response 200 (application/json)
  + Attributes (CollaboratorProjectAccessApiView)

+ Response 404 (application/json)
  An organization, collaborator or  project with the ID you provided could not be found.

  + Body
    ```json
    {
    "errors": ["Project not found"]
    }
    ```

### Add a Collaborator to a group of Teams [POST /organizations/{organization_id}/collaborators/{id}/team_memberships]

  Add a collaborator to a list of teams, or all a collaborator to all the teams in this organization.

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - The ID of the organization.
  + `id`: `515fb9337c1074f6fd000001` (string, required) - The ID of the collaborator.

+ Request
  + Attributes (CreateTeamMembershipRequest)

+ Response 200 (application/json)
  + Attributes (CollaboratorApiView)

+ Response 404 (application/json)
  The collaborator you're accessing is not part of this organization

  + Body
    ```json
    {
      "errors": ["Collaborator not found"]
    }
    ```

+ Response 403 (application/json)
  You must provide a `team_ids` parameter when `add_all_teams` is false.

  + Body
    ```json
    {
      "errors": ["Team_ids must be supplied when add_all_teams is set to false"]
    }
    ```

+ Response 403 (application/json)
  Your `team_ids` parameter must be in an array format.

  + Body
    ```json
    {
      "errors": ["Team_ids must be an array"]
    }
    ```

+ Response 404 (application/json)
  A team ID you provided could not be found.

  + Body
    ```json
    {
      "errors": ["Team not found"]
    }
  ```

### Remove a Collaborator from a group of Teams [DELETE /organizations/{organization_id}/collaborators/{id}/team_memberships]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - The ID of the organization.
  + `id`: `515fb9337c1074f6fd000001` (string, required) - The ID of the collaborator.

+ Request
  + Attributes (TeamIDRequest)

+ Response 200 (application/json)
  + Attributes (CollaboratorApiView)

+ Response 404 (application/json)
  The collaborator could not be found, or is not part of the organization

  + Body
    ```json
    {
      "errors": ["Collaborator not found"]
    }
    ```

+ Response 404 (application/json)
  A team ID you provided could not be found.

  + Body
    ```json
    {
      "errors": ["Team not found"]
    }
    ```

## Teams [/teams]

Teams allow you to easily control the project permissions of a group of collaborators.

### List Teams from a query [GET /organzations/{organization_id}/teams{?q,per_page,offset}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `q` (string, optional) - A partial or full team name to filter the results by.
  + `per_page`: 10 (number, optional)
      + Default: 30
  + `offset` (string, optional) - Token to retrieve next page of results

+ Response 200 (application/json)
  + Attributes (array[TeamApiView])

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the Organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

### Create a Team [POST /organizations/{organization_id}/teams]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization

+ Request
  + Attributes (TeamCreateRequest)

+ Response 200 (application/json)
  + Attributes (TeamApiView)

+ Response 400 (application/json)
  The team name is not unique for the organization or the name is too long.

  + Body
    ```json
    {
      "errors": ["Team name is more than 200 characters", "A team called Team co already exists for this organization"]
    }
    ```

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the organization.

+ Body
  ```json
  {
    "errors": ["Organization Administrator role required"]
  }
  ```

+ Response 404 (application/json)
  A team with the ID you provided could not be found.

+ Body
  ```json
  {
    "errors": ["Team not found"]
  }
  ```

### Show the details of a team [GET /organizations/{organization_id}/teams/{id}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team

+ Response 200 (application/json)
  + Attributes (TeamApiView)

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  A team with the ID you provided could not be found.

  + Body
    ```json
    {
      "errors": ["Team not found"]
    }
    ```

### Update a team name [PATCH /organizations/{organization_id}/teams/{id}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team to be deleted

+ Request
  + Attributes (TeamUpdateRequest)

+ Response 200 (application/json)
  + Attributes (TeamApiView)

+ Response 400 (application/json)
  There is an issue with the new name. It may be too long or not unique.

  + Body
    ```json
    {
      "errors": ["Team name is blank", "Team name is more than 200 characters", A team called Team co already exists for this organization"]
    }
    ```

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  A team with the ID you provided could not be found.

  + Body
    ```json
    {
      "errors": ["Team not found"]
    }
    ```

### Delete a team [DELETE /organizations/{organization_id}/teams/{id}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team to be deleted

+ Response 200 (application/json)

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you've provided or a team with the ID you've provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "Team not found"]
    }
    ```

### List Suggested Collaborators to Add to a Team [GET /organizations/{organization_id}/teams/{id}/suggested_collaborators]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team
  + `q` (string, optional) - A partial or full user name or email to filter the results by.
  + `include_has_access` (boolean, optional) - Request all collaborators in the organization, including those that are not members of the team. By default only collaborators who are not members of the team will be returned.
  + `per_page`: 10 (number, optional)
      + Default: 30
  + `offset` (string, optional) - token to retrieve next page of results

+ Response 200 (application/json)
  + Attributes (array[SuggestedTeamCollaboratorApiView])

+ Response 404 (application/json)
  An organization with the ID you provided or a team with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "Team not found"]
    }
    ```

### List Teams for a Collaborator [GET /organizations/{organization_id}/collaborators/{id}/teams]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the collaborator
  + `q` (string, optional) - A partial or full team name to filter the results by
  + `per_page`: 10 (number, optional)
      + Default: 30
  + `offset` (string, optional) - token to retrieve next page of results

+ Response 200 (application/json)
  + Attributes (array[TeamApiView])

+ Response 404 (application/json)
  An organization with the ID you provided or a user with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "User not found"]
    }
    ```

### List Suggested Teams for a Collaborator [GET /organizations/{organization_id}/collaborators/{id}/suggested_teams]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the collaborator
  + `q` (string, optional) - A partial or full team name to filter the results by
  + `include_is_member` (boolean, optional) - Request all teams in the organization, including those that the collaborator is already on. By default only teams the collaborator is not a member of will be returned
  + `per_page`: 10 (number, optional)
      + Default: 30
  + `offset` (string, optional) - token to retrieve next page of results

+ Response 200 (application/json)
  + Attributes (array[TeamSuggestionApiView])

+ Response 404 (application/json)
  An organization with the ID you provided or a user with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "User not found"]
    }
    ```

### List the Collaborators in a Team [GET /organizations/{organization_id}/teams/{id}/collaborators]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team
  + `q` (string, optional) - A partial or full user name or email to filter the results by.
  + `per_page`: 10 (number, optional)
      + Default: 30
  + `offset` (string, optional) - token to retrieve next page of results

+ Response 200 (application/json)
  + Attributes (array[CollaboratorApiView])

+ Response 404 (application/json)
  An organization with the ID you provided or a team with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "Team not found"]
    }
    ```

### Add Collaborators to a Team [POST /organizations/{organization_id}/teams/{id}/team_memberships]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team

+ Request
  + Attributes (TeamMembershipsAddUsersRequest)

+ Response 200 (application/json)
  + Attributes (TeamApiView)

+ Response 403 (application/json)
  You do not have permission to add collaborators to a team. You must be an admin of the organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  An organization, team or user with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "Team not found", "User not found"]
    }
    ```

### Remove Collaborators from a Team [DELETE /organizations/{organization_id}/teams/{id}/team_memberships]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team

+ Request
  + Attributes (CollaboratorsRequest)

+ Response 200 (application/json)
  + Attributes (TeamApiView)

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  An organization, team or user with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "Team not found", "User not found"]
    }
    ```

### List Project Access for a Team [GET /organizations/{organization_id}/teams/{id}/project_accesses]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team
  + `q` (string, optional) - A partial or full project name to filter the results by.
  + `per_page`: 10 (number, optional)
      + Default: 30
  + `offset` (string, optional) - A token for pagination

+ Response 200 (application/json)
  + Attributes (array[TeamProjectAccessApiView])

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the Organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you provided or a team with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "Team not found"]
    }
    ```

### Add Project Access to a Team [PATCH /organizations/{organization_id}/teams/{id}/project_accesses]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `team_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team

+ Request
  + Attributes (TeamProjectAccessesUpdate)

+ Response 200 (application/json)
  + Attributes (array[TeamApiView])

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the Organization or a project owner, or you are trying to set the project role to a role not supported for your organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required", "Insufficient Project Role for performing requested action", "Enterprise roles are not enabled on this account"]
    }
    ```

+ Response 404 (application/json)
  An organization, team, or project with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "Team not found", "Project not found"]
    }
    ```

### Remove Project Access from a Team [DELETE /organizations/{organization_id}/teams/{id}/project_accesses]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `team_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team

+ Request
  + Attributes (TeamProjectAccessesDelete)

+ Response 200 (application/json)
  + Attributes (array[TeamApiView])

+ Response 403 (application/json)
  You must be an admin of the Organization or a project owner.

  + Body
    ```json
    {
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```

+ Response 404 (application/json)
  An organization, team, or project with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "Team not found", "Project not found"]
    }
    ```

### Suggest Projects to Add to a Team [GET /organizations/{organization_id}/teams/{id}/suggested_projects]

Suggest a list of projects from the organization that the team could be given access to.

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the team
  + `include_has_access` (boolean, optional) - should projects the team already has access to be included?
  + `q` (string, optional) - A partial or full project name to filter the results by.
  + `per_page`: 10 (number, optional)
      + Default: 30
  + `offset` (string, optional) - token to retrieve next page of results

+ Response 200 (application/json)
  + Attributes (array[TeamProjectSuggestionApiView])

+ Response 403 (application/json)
  You do not have permission to view this data. You must be an admin of the Organization.

  + Body
    ```json
    {
      "errors": ["Organization Administrator role required"]
    }
    ```

+ Response 404 (application/json)
  An organization with the ID you provided or a team with the ID you provided could not be found

  + Body
    ```json
    {
      "errors": ["Organization not found", "Team not found"]
    }
    ```

## Event data requests [/organizations/{organization_id}/event_data_requests]

Request event data for the given organization. This request will start an asynchronous job to collate all event data present at the time of the request and return a URL where you can download the data when the job is complete. These endpoints are intended for bulk download of events. If you want to query events, use the [Events APIs](/#reference/errors/events) instead.

User data will not be included in the bulk download unless the request's `report_type` attribute is set to `gdpr`. With the `report_type` set to `gdpr` Bugsnag will only return user-related metadata.

### Create an event data request [POST /organizations/{organization_id}/event_data_requests]
+ Parameters
  + organization_id: 5bf5b201468ce95aa753a35f (string, required) - ID of the organization to request events for

+ Request (application/json)
  + Attributes
      + report_type (EventDataRequestReportType, optional) - the type of report to request; omit this if you want all event fields
      + filters (Filters, required)
        The filters used to determine which events will be included in the report.
        See [Filtering](/#introduction/filtering) for details.

+ Response 201 (application/json)
  + Attributes (EventDataRequestApiView)

### Check the status of an event data request [GET /organizations/{organization_id}/event_data_requests/{id}]
+ Parameters
  + organization_id: 5bf5b201468ce95aa753a35f (string, required) - ID of the organization of the event data request
  + id: 5bf5bde1468ce95b0a6724e8 (string, required) - ID of the event data request

+ Response 200 (application/json)
  + Attributes (EventDataRequestApiView)

## Event data deletions [/organizations/{organization_id}/event_data_deletions]

Request events of the given organization to be deleted. This request will start an asynchronous job to delete events present at the time of the request. If you want to delete a single event, use [this endpoint](/#reference/errors/events/delete-an-event) instead.

### Create an event deletion request [POST /organizations/{organization_id}/event_data_deletions]
Creates a request to asynchronously delete events for the organization.
Note that filters such as `user.email` and `user.name` use substring matching,
so using the `user.id` filter will be more appropriate for deleting events for
1 specific user.

+ Parameters
  + organization_id: 5bf5c369468ce95b0a6734c9 (string, required) - ID of the organization to delete events from

+ Request (application/json)
  + Attributes
      + skip_confirmation: false (boolean, optional) - whether to skip requiring another request to confirm the deletion
          + Default: false
      + filters (Filters, required)
        The filters used to determine which events will be deleted.
        See [Filtering](/#introduction/filtering) for details.
        Note that filters with an empty string value and filters that don't
        apply to a project (e.g. using a custom filter from one project on
        another project that doesn't have that custom filter) will be skipped.
        Before proceeding with an event data deletion request, it's recommended to verify the
        [project's event fields](/#reference/projects/event-fields/list-the-event-fields-for-a-project)
        and test your filters using the
        [List the Events on an Error](/#reference/errors/events/list-the-events-on-a-project)
        or
        [Create an event data request](/#reference/organizations/event-data-requests/create-an-event-data-request)
        API.

+ Response 201 (application/json)
  + Attributes (EventDataDeletionApiView)

### Confirm an event deletion request [POST /organizations/{organization_id}/event_data_deletions/{id}/confirm]
+ Parameters
  + organization_id: 5bf5c369468ce95b0a6734c9 (string, required) - ID of the organization of the deletion request
  + id: 5bf5c5ee468ce95db8170d15 (string, required) - ID of the deletion request

+ Response 200 (application/json)
  + Attributes (EventDataDeletionApiView)

### Check the status of an event deletion request [GET /organizations/{organization_id}/event_data_deletions/{id}]
+ Parameters
  + organization_id: 5bf5c369468ce95b0a6734c9 (string, required) - ID of the organization of the deletion request
  + id: 5bf5c5ee468ce95db8170d15 (string, required) - ID of the deletion request

+ Response 200 (application/json)
  + Attributes (EventDataDeletionApiView)









## SCIM Endpoint [/organizations/{organization_id}/scim/v2/]

SCIM (System for Cross-domain Identity Managment) is a protocol for synchronizing identities across systems. It is used by SSO providers to provision, update, and deprovision accounts. SCIM is available on enterprise plans. Contact <support@bugsnag.com> for access.

The full SCIM standard is defined in [RFC7644](https://tools.ietf.org/html/rfc7644). Bugsnag supports a subset of the full standard sufficient for an SSO provider to manage collaborators and groups (which are known within BugSnag as Teams). It provides methods to:

- Get details for an individual collaborator
- List an organization's collaborators
- Search an organizations's collaborators by email address
- Create a new collaborator for an organization
- Remove a collaborator from an organization
- Update a collaborator's basic details (email address and name)
- Get details for a group
- List an organization's groups
- Create a new group for an organization
- Delete a group from an organization
- Update a groups details
- Update a groups collaborators

Requests are authorized using the personal auth token of an organization's admin. The token should be passed as a *Bearer* token in the Authorization request header. This differs from the normal means of authenticating with the Bugsnag API.

*Personal Auth Tokens* can be generated in the *My Account* section of [Bugsnag settings](https://app.bugsnag.com/settings/my-account).

```
curl -H "Authorization: Bearer YOUR-AUTH-TOKEN-HERE" https://api.bugsnag.com
```

### Show a Collaborator on an Organization [GET /organizations/{organization_id}/scim/v2/Users/{id}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the collaborator

+ Response 200 (application/json)
  + Attributes (ScimUser)

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


### List Collaborators on an Organization [GET /organizations/{organization_id}/scim/v2/Users]

Return the list of users for the organization.

The request may be filtered by `userName` equality by passing a filter of the form `userName eq "james@example.com"`. No other filtering is supported.

Results will be paginated. Further pages may be requested by setting `startIndex` and `itemsPerPage`.

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `filter`: `userName eq "james@example.com"` (string, optional) - filter the results by userName
  + `startIndex`: 15 (number, required) - the pagination offset, 1-indexed, defaults to 1
  + `itemsPerPage`: 10 (number, required) - the number of results returned in this response, defaults to 30, maximum of 100

+ Response 200 (application/json)
  + Attributes (ScimUserListResponse)

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


### Create a Collaborator [POST /organizations/{organization_id}/scim/v2/Users]

This endpoint is used to add a collaborator to your Bugsnag organization. If the collaborator does not exist in Bugsnag then a new user will be created. If the collaborator does exist then they will be added to the organization.

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization

+ Request
  + Attributes (ScimUser)

+ Response 200 (application/json)
  + Attributes (ScimUser)

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


+ Response 400 (application/json)
  The values supplied are invalid

  + Body
    ```json
    {
      "detail": "Operation failed since record has become invalid",
      "status": "400",
      "scimType": "invalidValue"
    }
    ```




### Update a Collaborator [PUT /organizations/{organization_id}/scim/v2/Users/{id}]

Update the basic details of a collaborator. This includes the email address and name of the collaborator.

Optionally, a collaborator can be added or removed from the organization.
- If the `active` flag is set to `false` for an existing collaborator then they are removed from the organization.
- If the `active` flag is set to `true` for a user who is not currently a collaborator, but for whom the ID is known, then they are added to the organization.

This approach is used by Okta and OneLogin to remove and re-add users to a Bugsnag organization without removing them entirely from their records.

+ Parameters
  + organization_id: `515fb9337c1074f6fd000001` (string, required) - the ID of your organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the collaborator

+ Request
  + Attributes (ScimUser)

+ Response 200 (application/json)
  + Attributes (ScimUser)

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


+ Response 400 (application/json)
  The values supplied are invalid

  + Body
    ```json
    {
      "detail": "Operation failed since record has become invalid",
      "status": "400",
      "scimType": "invalidValue"
    }
    ```




### Add or Remove Previously Added Collaborators [PATCH /organizations/{organization_id}/scim/v2/Users/{id}]

As with the update method above, the `active` flag for a previously added collaborator can be set to remove or re-add them to an organization.

Setting the `active` flag is the only operation we support for this method.

+ Parameters
  + organization_id: `515fb9337c1074f6fd000001` (string, required) - the ID of your organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the collaborator

+ Request
  + Attributes
      + `Operations`: (array[ScimPatchOp])

+ Response 200 (application/json)
  + Attributes (ScimUser)

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


+ Response 400 (application/json)
  The values supplied are invalid

  + Body
    ```json
    {
      "detail": "Operation failed since record has become invalid",
      "status": "400",
      "scimType": "invalidValue"
    }
    ```




### Remove a Collaborator [DELETE /organizations/{organization_id}/scim/v2/Users/{id}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of your organization
  + id: `590270d39ef172ad693e05b1` (string, required) - the ID of the collaborator to update

+ Response 204 (application/json)
  Collaborator successfully removed.

+ Response 400 (application/json)
  The values supplied are invalid

  + Body
    ```json
    {
      "detail": "Failed to delete the resource with id `515fb9337c1074f6fd000001`",
      "status": "400",
      "scimType": "invalidValue"
    }
    ```

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


### Show Group on an Organization [GET /organizations/{organization_id}/scim/v2/groups/{id}]
+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the Group

+ Response 200 (application/json)
  + Attributes (ScimGroup)

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


### List Groups on an Organization [GET /organizations/{organization_id}/scim/v2/groups/]

Return the list of groups for an organization.

The request may be filtered by `displayName` equality by passing a filter of the form `displayName eq "Development Group"`. No other filtering is supported.

Results will be paginated. Further pages may be requested by setting `startIndex` and `itemsPerPage`.

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `filter`: `userName eq "james@example.com"` (string, optional) - filter the results by userName
  + `startIndex`: 15 (number, required) - the pagination offset, 1-indexed, defaults to 1
  + `itemsPerPage`: 10 (number, required) - the number of results returned in this response, defaults to 30, maximum of 100

+ Response 200 (application/json)
  + Attributes (ScimGroupListResponse)

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


### Create Group on an Organization [POST /organizations/{organization_id}/scim/v2/Groups]

This endpoint is used to add a group to your BugSnag organization.

Collaborators are not added when creating a group, so these must be added using the Update Group on an
Organization endpoint after a group is created.

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization

+ Request
  + Attributes (ScimGroupCreateRequest)

+ Response 200 (application/json)
  + Attributes (ScimGroup)

+ Response 400 (application/json)
  The displayName is too long

    + Body
    ```json
    {
    "detail": "displayName is too long",
    "status": "400",
    }
    ```

+ Response 409 (application/json)
  A group with this name already exists

    + Body
    ```json
    {
    "details": "Duplicate resource already exists"
    "status": "409"
    }
    ```

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


### Update Group on an Organization [PATCH /organizations/{organization_id}/scim/v2/Groups/{id}]

The `value` attribute can use different formatting depending on the context. When updating a groups collaborators
with the `add` or `remove` operations use an array of objects, where each objects `value` is an ID for a collaborator in the org:

```
"value": [
  {
    "value": "515fb9337c1074f6fd000001"
  },
  {
    "value": "515fb9337c1074f6fd000002"
  }
]
```

When updating group details (i.e. the display name) with the `replace` operation use an object with the `displayName` attribute:

```
"value": {
  "displayName": "Testing Group"
}
```

For more details see the full SCIM standard as defined in [RFC7644](https://tools.ietf.org/html/rfc7644).

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization
  + `id`: `515fb9337c1074f6fd000002` (string, required) - ID of the group

+ Request
  + Attributes (ScimGroupOperations)

+ Response 204 (application/json)

+ Response 400 (application/json)

  + Body
    ```json
    {
    "details": "No operations present"
    "status": "400"
    }
    ```

+ Response 400 (application/json)

  + Body
    ```json
    {
    "details": "Bad request"
    "status": "400"
    }
    ```


+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```


### Delete Group on an Organization [DELETE /organizations/{organization_id}/scim/v2/Groups/{id}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the organization

+ Response 204 (application/json)

+ Response 404 (application/json)
  The group cannot be found

    + Body
    ```json
    {
    "details": "Resource not found"
    "status": "404"
    }
    ```

+ Response 401 (application/json)
  You do not have permission to view this data. Either an auth token was not
provided, or you do not have permission to perform this operation.

  + Body
    ```json
    {
      "detail": "Invalid credentials",
      "status": "401"
    }
    ```

+ Response 403 (application/json)
  SCIM is not enabled for this organization. Contact support@bugsnag.com for access.

  + Body
    ```json
    {
      "detail": "SCIM not enabled",
      "status": "403"
    }
    ```




## Spans [/organizations/{organization_id}/traces/{trace_id}/spans]

### List Spans for a Trace  [GET /organizations/{organization_id}/traces/{trace_id}/spans{?target_span_id,per_page,from,to}]

Returns the spans for a trace at an organizational level. Access to this endpoint is restricted on the distributed traces view permission.

+ Parameters
  + `organization_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Organization to which the spans belong.
  + `trace_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Trace to which the spans belong.
  + `from`: `2023-04-11T13:14:25.123Z` (string, required) - Beginning of window to return spans from.
  + `to`: `2023-04-11T13:14:26.123Z` (string, required) - End of window to return spans from.
  + `target_span_id`: `6368f07a518fa064ce036bdb` (string, optional) - The ID of a Span within the Trace to focus on. If provided the target Span and its direct children will be returned ahead of other Spans in the Trace.
  + `per_page`: `20` (number, optional) - The number of results to return per page. Defaults to 20.

+ Response 200 (application/json)
    + Attributes (array[Span])

+ Response 404 (application/json)
  Organization could not be found. Check the supplied `organization_id`.
  + Body 
  ```json
  {
    "errors": ["Organization not found"]
  }
  ```
  








# Group Projects

## Projects [/projects]

A Project is used to record errors from an individual application that are reported using the same
API key.

### Create a Project in an Organization [POST /organizations/{organization_id}/projects]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000007` (string, required) - ID of the organization

+ Request
  + Attributes (ProjectCreateRequest)

+ Response 200 (application/json)
  + Attributes (ProjectApiView)

+ Response 400 (application/json)

  Request validation error. See `errors` for specific details.

  + Body
    ```json
    {
      "errors": ["Authentication required"]
    }
    ```

+ Response 404 (application/json)
  Organization could not be found. Check the supplied `organization_id`.
  + Body
    ```json
    {
      "errors": ["Organization not found"]
    }
    ```

### List an Organization's Projects [GET /organizations/{organization_id}/projects{?q,sort,direction,per_page}]

+ Parameters
  + `organization_id`: `515fb9337c1074f6fd000001` (string, required) - the ID of the organization
  + `q` : MyProject (string, optional) - Search projects with names matching parameter
  + sort (enum[string], optional)
      Which field to sort the results by
      + Default: `created_at`
      + Members
          + `created_at`
          + `name`
          + `favorite`
  + direction (enum[string], optional)
      Which direction to sort the results by. Defaults to `desc` for all sorts except `favorite`. Defaults to `asc` if sorting by `favorite` (cannot sort `favorite`s `desc`).
      + Default: `desc`
      + Members
          + `asc`
          + `desc`
  + `per_page` (number, optional) - How many results to return per page
      + Default: `30`

+ Response 200 (application/json)
  + Attributes (array[ProjectApiView])
  + Headers
    ```
    Link: <https://api.bugsnag.com/organizations/515fb9337c1074f6fd000001/projects?offset=517c41f07c1074aee9000002>; rel="next"
    X-Total-Count: 123
    ```

+ Response 404 (application/json)
  An organization with the ID you provided could not be found.

  + Body
    ```json
    {
      "errors": ["Organization not found"]
    }
    ```

+ Response 400 (application/json)
  Favorites only support ascending sort.

  + Body
    ```json
    {
      "errors": ["favorites cannot be sorted descending"]
    }
    ```



    ```


### View a Project [GET /projects/{project_id}]
+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the project

+ Response 200 (application/json)
  + Attributes (ProjectApiView)

+ Response 404 (application/json)
  Project could not be found, or you do not have access. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### Update a Project [PATCH /projects/{project_id}]

+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the project

+ Request
  + Attributes (ProjectUpdateRequest)

+ Response 200 (application/json)
  + Attributes (ProjectApiView)

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404 (application/json)
  Project could not be found, or you do not have access. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

+ Response 403 (application/json)
  This request requires feature access not included in the account's plan.
  + Body
    ```json
    {
      "errors": ["This action is not supported on your current plan"]
    }
    ```

### Regenerate a Project's notifier API key [DELETE /projects/{project_id}/api_key]

Generate a new notifier API key for a project. This API key is used to
configure the [notifier library](https://docs.bugsnag.com/platforms/) being
used to report errors in the project. After regenerating a Project's notifier
API key, your platform-specific notifier will need its configuration updated to
use the new key. The previous key will not be supported. Note that a Project's
notifier API key is different from both the Organization-level and User-level
Data Access API auth tokens.

+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the project

+ Response 200 (application/json)
  The projects notifier API key was successfully regenerated.
  + Attributes (ProjectApiView)

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### Delete a Project [DELETE /projects/{project_id}]

+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the project

+ Response 204
  The project was successfully deleted.
  + Body

+ Response 400 (application/json)
  This Project cannot be deleted. This can happen for Projects maintained by a third party add-on (e.g. Heroku).
  + Body
    ```json
    {
      "errors": ["cannot delete upstream billing project"]
    }
    ```

+ Response 403 (application/json)
  You do not have permission to delete this Project. You need to be an admin on the Organization.
  + Body
    ```json
    {
      "errors": ["Must be an Organization Administrator to delete projects"]
    }
    ```
+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }










## Event Fields [/event_fields]

Event fields are the fields on event resources that can be used for filtering. This includes built-in fields and any custom filters. The event fields supported vary by project type.

### List the Event Fields for a Project [GET /projects/{project_id}/event_fields{?per_page}]
+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the Project

+ Response 200 (application/json)
  + Attributes (array[EventField])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### Create a custom Event Field [POST /projects/{project_id}/event_fields]
+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the Project

+ Request
  + Attributes (EventFieldCreateRequest)

+ Response 201 (application/json)
  + Attributes (EventField)

+ Response 400 (application/json)
  The request was bad. Check the errors supplied in the response.
  + Body
    ```json
    {
      "errors": ["At custom event field limit"]
    }
    ```

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### Update a custom Event Field [PATCH /projects/{project_id}/event_fields/{display_id}]
+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the Project
  + `display_id`: `user.id` (string, required) - human friendly ID for the EventField

+ Request
  + Attributes (EventFieldCreateRequest)

+ Response 201 (application/json)
  + Attributes (EventField)

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 404
  Unsupported or unrecognized event field id, or project could not be found. Check the supplied `project_id` and supplied `display_id`.
  + Body
    ```json
    {
      "errors": ["Project not found", "Event field not found"]
    }
    ```

### Delete a custom Event Field [DELETE /projects/{project_id}/event_fields/{display_id}]
+ Parameters
  + `project_id`: `515fb9337c1074f6fd000001` (string, required) - ID of the Project
  + `display_id`: `user.id` (string, required) - human friendly ID for the EventField

+ Response 204
  The event field was successfully deleted.
  + Body

+ Response 404
  Unsupported or unrecognized event field id, or project could not be found. Check the supplied `project_id` and supplied `display_id`.
  + Body
    ```json
    {
      "errors": ["Project not found", "Event field not found"]
    }
    ```






## Release Groups [/release_groups]

A release group contains a collection of releases having the same release stage
and app version.

Non-mobile projects will usually have one release per release group. Some
mobile projects will have many releases per release group because one release
stage and app version combination can have many releases with different
secondary versions (version codes or bundle versions).

### List Release Groups on a Project [GET /projects/{project_id}/release_groups{?release_stage_name,sort,top_only,per_page}]
+ Parameters
  + project_id: 515fb9337c1074f6fd000003 (string, required) - ID of the project
  + release_stage_name: production (string, required) - name of release stage to list release groups for
  + top_only: true (boolean, optional) - return only the top release groups (default false)
  + visible_only: true (boolean, optional) - return only visible release groups (default false)
  + per_page: 30 (number, optional) - how many results to return per page
  + page_token (string, optional) - value from the next relation in the Link response header to obtain the next page of results

+ Response 200 (application/json)
  + Attributes (array[ReleaseGroup])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```


### Retrieve a Release Group [GET /release_groups/{id}]
+ Parameters
  + id: 5cf9a562d1befa0021e6a600 (string, required) - ID of release group to get

+ Response 200 (application/json)
  + Attributes (ReleaseGroup)

+ Response 404 (application/json)
  Release group could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Release group not found"]
    }
    ```

### Update a Release Group  [PATCH /release_groups/{id}]
+ Parameters
  + id: 5cf9a562d1befa0021e6a600 (string, required) - ID of release group to update

+ Request (application/json)
  + Attributes
      + visible: false (boolean, required) - the updated visibility

+ Response 200 (application/json)
  + Attributes (ReleaseGroup)

+ Response 404 (application/json)
  Release group could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Release group not found"]
    }
    ```



## Releases [/projects/{project_id}/releases]

A release models a particular application version running in a particular release stage. In the case of mobile projects, a release is also associated with a version code or bundle version.
To learn more, see the following resources on the [releases dashboard](https://docs.bugsnag.com/product/releases/releases-dashboard) and [build tool integrations](https://docs.bugsnag.com/build-integrations/).

### List Releases on a Project [GET /projects/{project_id}/releases{?release_stage,base,sort,offset,per_page}]
+ Parameters
  + project_id: 515fb9337c1074f6fd000003 (string, required) - ID of the Project
  + release_stage: production (string, optional) - release stage to filter by
  + base: `2018-02-22T12:00:00Z` (string, optional)
    date and time (in ISO 8601 format) to search for releases before
  + sort (enum[string], optional)
      How to sort the results
      + Default: `timestamp`
      + Members
          + timestamp
          + percent_of_sessions
  + offset: 0 (number, optional) - The pagination offset
      + Default: `0`
  + per_page: 5 (number, optional) - How many results (between 1 and 10) to return per page
      + Default: `5`

+ Response 200 (application/json)
  + Attributes (array[ReleaseApiView])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### View a Release [GET /projects/{project_id}/releases/{release_id}]
+ Parameters
  + project_id: 515fb9337c1074f6fd000003 (string, required) - ID of the Project
  + release_id: 5a8f71f6d1befa04f3610cde (string, required) - ID of release to view

+ Response 200 (application/json)
  + Attributes (ReleaseApiView)

+ Response 404 (application/json)
  Release could not be found. Check the supplied `release_id`.
  + Body
    ```json
    {
      "errors": ["Release not found"]
    }
    ```

### List Releases on a Release Group [GET /release_groups/{release_group_id}/releases{?per_page,page_token}]
+ Parameters
  + release_group_id: 5d24fd08d1befa004a0e83e7 (string, required) - ID of release group to list releases for
  + per_page: 30 (number, optional) - how many results to return per page
  + page_token (string, optional) - value from the next relation in the Link response header to obtain the next page of results

+ Response 200 (application/json)
  + Attributes (array[ReleaseApiView])

+ Response 404 (application/json)
  Release group could not be found. Check the supplied `release_group_id`.
  + Body
    ```json
    {
      "errors": ["Release group not found"]
    }
    ```

## Stability Trend [/projects/{project_id}/stability_trend]

Request the trend of unhandled session information (grouped by UTC day) in the last 30 days for the project's primary release stage.

### View the stability trend for a project [GET /projects/{project_id}/stability_trend]
+ Parameters
  + project_id: 5bf5c369468ce95b0a6734c9 (string, required) - ID of the project to retrieve stability information for

+ Response 200 (application/json)
  + Attributes (ProjectStabilityTrendApiView)

+ Response 204
  The project has no sessions at this time.

+ Response 404 (application/json)
  Project could not be found, or the project has no sessions seen from any release stage. Check the supplied `project_id`, and that there is session information for the project.
  + Body
    ```json
    {
      "errors": ["Project not found", "This project does not have a primary release stage"]
    }
    ```
## Event data requests [/projects/{project_id}/event_data_requests]

Request event data for the given project. This request will start an asynchronous job to collate all event data present at the time of the request and return a URL where you can download the data when the job is complete. These endpoints are intended for bulk download of events. If you want to query events, use the [Events APIs](/#reference/errors/events) instead.

User data will not be included in the bulk download unless the request's `report_type` attribute is set to `gdpr`. With the `report_type` set to `gdpr` Bugsnag will only return user-related metadata.

### Create an event data request [POST /projects/{project_id}/event_data_requests]
+ Parameters
  + project_id: 5bf5b201468ce95aa753a35f (string, required) - ID of the project to request events for

+ Request (application/json)
  + Attributes
      + report_type (EventDataRequestReportType, optional) - the type of report to request; omit this if you want all event fields
      + filters (Filters, required)
        The filters used to determine which events will be included in the report.
        See [Filtering](/#introduction/filtering) for details.

+ Response 201 (application/json)
  + Attributes (EventDataRequestApiView)

### Check the status of an event data request [GET /projects/{project_id}/event_data_requests/{id}]
+ Parameters
  + project_id: 5bf5b201468ce95aa753a35f (string, required) - ID of the project of the event data request
  + id: 5bf5bde1468ce95b0a6724e8 (string, required) - ID of the event data request

+ Response 200 (application/json)
  + Attributes (EventDataRequestApiView)

## Event data deletions [/projects/{project_id}/event_data_deletions]

Request events of the given project to be deleted. This request will start an asynchronous job to delete events present at the time of the request. If you want to delete a single event, use [this endpoint](/#reference/errors/events/delete-an-event) instead.

### Create an event deletion request [POST /projects/{project_id}/event_data_deletions]
Creates a request to asynchronously delete events for the project.
Note that filters such as `user.email` and `user.name` use substring matching,
so using the `user.id` filter will be more appropriate for deleting events for
1 specific user.

+ Parameters
  + project_id: 5bf5c369468ce95b0a6734c9 (string, required) - ID of the project to delete events from

+ Request (application/json)
  + Attributes
      + skip_confirmation: false (boolean, optional) - whether to skip requiring another request to confirm the deletion
          + Default: false
      + filters (Filters, required)
        The filters used to determine which events will be deleted.
        See [Filtering](/#introduction/filtering) for details.
        Note that filters with an empty string value and filters that don't
        apply to a project (e.g. using a custom filter from one project on
        another project that doesn't have that custom filter) will be skipped.
        Before proceeding with an event data deletion request, it's recommended to verify the
        [project's event fields](/#reference/projects/event-fields/list-the-event-fields-for-a-project)
        and test your filters using the
        [List the Events on an Error](/#reference/errors/events/list-the-events-on-a-project)
        or
        [Create an event data request](/#reference/projects/event-data-requests/create-an-event-data-request)
        API.

+ Response 201 (application/json)
  + Attributes (EventDataDeletionApiView)

### Confirm an event deletion request [POST /projects/{project_id}/event_data_deletions/{id}/confirm]
+ Parameters
  + project_id: 5bf5c369468ce95b0a6734c9 (string, required) - ID of the project of the deletion request
  + id: 5bf5c5ee468ce95db8170d15 (string, required) - ID of the deletion request

+ Response 200 (application/json)
  + Attributes (EventDataDeletionApiView)

### Check the status of an event deletion request [GET /projects/{project_id}/event_data_deletions/{id}]
+ Parameters
  + project_id: 5bf5c369468ce95b0a6734c9 (string, required) - ID of the project of the deletion request
  + id: 5bf5c5ee468ce95db8170d15 (string, required) - ID of the deletion request

+ Response 200 (application/json)
  + Attributes (EventDataDeletionApiView)









## Feature Flags [/projects/{project_id}/feature_flags]
    A feature flag is a property of an event for organizations with the `features-experiments` feature. It allows end users to experiment with different features in their applications and view the effect on the stability of their application. A feature flag may contain several variants.

### List Feature Flags on a Project [GET /projects/{project_id}/feature_flags{?release_stage_name,per_page,starred_at_top,sort,direction,include_variant_summary,q,first_seen,include_inactive}]

+ Parameters
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the Project.
  + `release_stage_name`: `production` (string, required) - Release stage name to get the feature flags for.
  + `starred_at_top`: `false` (boolean, optional) - Whether to return starred Feature Flags at the top of the Feature Flags list.
      + Default: `false`
  + `include_variant_summary`: `false` (boolean, optional) - Whether to include a summary of the Variants for each Feature Flag.
      + Default: `false`
  + `q`: `name` (string, optional) - Search for feature flags with a name matching this query parameter. Supports case-insensitive substring matching.
  + `first_seen` (enum[string], optional)
      Filter to Feature Flags that were first seen in the release stage within the specified time frame.
      + Default: `all`
      + Members
          + `all` - any point
          + `this_week` - this week
          + `today` - today
  + `include_inactive`: `false` (boolean, optional) - Whether to include inactive Feature Flags.
      + Default: `false`
  + `sort` (enum[string], optional)
      Which field to sort on.
      + Default: `name`
      + Members
          + `name` - sort by name
          + `first_seen` - sort by first seen time
  + direction (enum[string], optional)
      Which direction to sort the results by.
      + Default: `asc`
      + Members
          + `asc` - ascending
          + `desc` - descending
  + `per_page` (number, optional) - How many results to return per page.
      + Default: `30`


+ Response 200 (application/json)
  + Attributes (array[FeatureFlag])


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### List Feature Flag Summaries for a Project [GET /projects/{project_id}/feature_flag_summaries{?per_page,q}]

+ Parameters
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the Project.
  + `q`: `name` (string, optional) - Search for feature flags with a name matching this query parameter. Supports case-insensitive substring matching.
  + `per_page` (number, optional) - How many results to return per page.
      + Default: `30`


+ Response 200 (application/json)
  + Attributes (array[FeatureFlagSummary])


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### Get a Feature Flag [GET /projects/{project_id}/feature_flags/{id}{?release_stage_name,include_variant_summary}]

+ Parameters
  + `id`: `fb59337c511074f6fd000001` (string, required) - ID of the FeatureFlag.
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the Project.
  + `release_stage_name`: `production` (string, required) - Release stage name to get the feature flags for.
  + `include_variant_summary`: `false` (boolean, optional) - Whether to include a summary of the Variants for the Feature Flag.
      + Default: `false`

+ Response 200 (application/json)
  + Attributes (FeatureFlag)

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

+ Response 404 (application/json)
  Feature flag could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Feature flag not found"]
    }
    ```

### Get a Feature Flag's Error Overview [GET /projects/{project_id}/feature_flags/{id}/error_overview/{?release_stage_name}]

+ Parameters
  + `id`: `fb59337c511074f6fd000001` (string, required) - ID of the FeatureFlag.
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the Project.
  + `release_stage_name`: `production` (string, required) - Release stage name to get the feature flags for.


+ Response 200 (application/json)
  + Attributes (FeatureFlagErrorSummary)


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

+ Response 404 (application/json)
  Feature flag could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Feature flag not found"]
    }
    ```

### Get a Feature Flag Variant's Error Overview [GET /projects/{project_id}/feature_flags/{id}/variants/error_overview/{?variant_ids,release_stage_name}]

+ Parameters
  + `id`: `fb59337c511074f6fd000001` (string, required) - ID of the FeatureFlag.
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the Project.
  + `variant_ids`: (MultiEntryParams, required) - IDs for the FeatureFlag variants.
  + `release_stage_name`: `production` (string, required) - Release stage name to get the feature flags for.


+ Response 200 (application/json)
  + Attributes (array[FeatureFlagVariantErrorSummary])


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

+ Response 404 (application/json)
  Feature flag could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Feature flag not found"]
    }
    ```

### List Variants on a Feature Flag by ID [GET /projects/{project_id}/feature_flags/{id}/variants/{?release_stage_name,q,per_page}]

+ Parameters
  + `id`: `fb59337c511074f6fd000001` (string, required) - ID of the feature flag.
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the project.
  + `release_stage_name`: `production` (string, optional) - Release stage name to get the variants for.
  + `q`: `name` (string, optional) - Search for feature flags with a name matching this query parameter. Supports case-insensitive substring matching.
  + `per_page` (number, optional) - How many results to return per page.
      + Default: `30`

+ Response 200 (application/json)
  + Attributes (array[FeatureFlagVariant])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

+ Response 404 (application/json)
  Feature flag could not be found. Check the supplied `id`.
  + Body
    ```json
    {
      "errors": ["Feature flag not found"]
    }
    ```


### List Variants on a Feature Flag by name [GET /projects/{project_id}/feature_flags/by_name/{name}/variants/{?release_stage_name,q,per_page}]

+ Parameters
  + `name`: `feature_flag_name` (string, required) - Name of the feature flag, case-sensitive and with no substring matching.
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the project.
  + `release_stage_name`: `production` (string, optional) - Release stage name to get the variants for.
  + `q`: `name` (string, optional) - Search for feature flag variants with a name matching this query parameter. Supports case-insensitive substring matching.
  + `per_page` (number, optional) - How many results to return per page.
      + Default: `30`

+ Response 200 (application/json)
  + Attributes (array[FeatureFlagVariant])

+ Response 404 (application/json)
  No feature flag was found with the supplied `name`.
  + Body
    ```json
    {
      "errors": ["Feature flag not found"]
    }
    ```

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```


### Delete a Feature Flag [DELETE /projects/{project_id}/feature_flags/{id}]

+ Parameters
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the Project.
  + `id`: `fb59337c511074f6fd000002` (string, required) - ID of the Feature Flag to unstar.


+ Response 204 (application/json)


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### Star a Feature Flag [POST /user/projects/{project_id}/starred_feature_flags]

+ Parameters
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the Project.

+ Request (application/json)
  + Attributes
      + `feature_flag_id`: `fb59337c511074f6fd000002` (string, required) - ID of the Feature Flag to star.


+ Response 204 (application/json)


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

### Unstar a Feature Flag [DELETE /user/projects/{project_id}/starred_feature_flags/{id}]

+ Parameters
  + `project_id`: `fb59337c511074f6fd000001` (string, required) - ID of the Project.
  + `id`: `fb59337c511074f6fd000002` (string, required) - ID of the Feature Flag to unstar.


+ Response 204 (application/json)


+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```


## Error Assignment Rules [/projects/{project_id}/error_assignment_rules]
  Error Assignment Rules are used to automatically assign errors on the project to a chosen User or Team.


### Replace the ErrorAssignmentRules on a project [PUT /projects/{project_id}/error_assignment_rules]
  Replaces all the ErrorAssignmentRules on the project with the rules supplied rules. If no rules are supplied, all rules on the project are deleted.

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the ErrorAssignmentRule belongs.

+ Request (application/json)
  + Attributes (ErrorAssignmentRulesReplaceRequest)

+ Response 204

+ Response 403 (application/json)
  The user should be an Organization Administrator or Project Owner to perform this action
    
  + Body

    ```json
    {
      "code": 40000,
      "errors": ["Insufficient Project Role for performing requested action"]
    }
    ```


+ Response 403 (application/json)
  The organization does not have the relevant feature.
  + Body
    ```json
    {
      "errors": ["Account requires the error-assignment-rules feature"]
    }
    ```


+ Response 404 (application/json)
  Project cannot be found. Check the supplied `project_id`.
  + Body
    ```json
    {
      "errors": ["Project not found"]
    }
    ```

+ Response 400 (application/json)
  ErrorAssignmentRules are invalid. Request structure may be incorrect or assignees may not have access to the project.
  + Body
    ```json
    {
      "errors": ["Assignees do not have project access"]
    }
    ```

## Span Groups [/projects/{project_id}/span_groups]
  A span group is a collection of aggregated spans associated with a particular operation in an application, for example a mobile app start, a single screen or page load, a network request or a custom timing of any arbitrary operation.
In the span group model, the properties and statistics variables accept only one of the listed available objects. See [Filtering](#introduction/filtering/trace-fields-and-performance-filtering) for more information.

### Show a Span Group [GET /projects/{project_id}/span_groups/{id}{?filters}]
  If there are no spans in the requested group, it will show a span group with an empty `statistics` attribute.

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the Span Group belongs.
  + `id`: `1.app_start.AppStart%2FCold` (string, required) - The [URL-encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) ID of the Span Group.
  + `filters` (array[PerformanceFilter], optional) - The current filters that are being applied.

+ Response 200 (application/json)
  + Attributes (SpanGroup)

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  The format of the Span Group ID was invalid. Check the supplied `id`.
  + Body
  ```json
  {
  "errors": ["invalid span group id"]
  }
  ```

+ Response 400 (application/json)
  Improperly formatted filters.
  + Body
  ```json
  {
    "errors": ["Invalid Filter: invalid filter key: <key>"]
  }
  ```

### List Span Groups on a Project [GET /projects/{project_id}/span_groups{?per_page,offset,filters,sort,direction,starred_only}]
    If there are no Span Groups, it returns an empty array.

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the Span Groups belong.
  + `sort`: `total_spans` (enum[String], optional) - The field to sort the span groups by
      + `total_spans`
      + `last_seen`
      + `name`
      + `display_name`
      + `network_http_method`
      + `rendering_slow_frame_span_percentage`
      + `rendering_frozen_frame_span_percentage`
      + `duration_p50`
      + `duration_p75`
      + `duration_p90`
      + `duration_p95`
      + `duration_p99`
  + `direction`: `desc` (enum[String], optional) - The direction to sort the span groups by
      + `desc`
      + `asc`
  + `per_page`: `1` (number, optional) - the number of results per page
  + `offset` : `10` (number, optional) - the offset for the next page of results
  + `filters` (array[PerformanceFilter], optional) - The current filters that are being applied.
  + `starred_only`: false (boolean, optional) - Whether to only return Span Groups the requesting user has starred.

+ Response 200 (application/json)
  + Attributes (array[SpanGroup])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  Improperly formatted filters.
  + Body
  ```json
  {
    "errors": ["Invalid Filter: invalid filter key: <key>"]
  }
  ```

### List Span Group Summaries for a Project [GET /projects/{project_id}/span_group_summaries{?per_page,offset,filters}]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the Span Groups belong.
  + `per_page`: `1` (number, optional) - the number of results per page
  + `offset` : `10` (number, optional) - the offset for the next page of results
  + `filters` (array[PerformanceFilter], optional) - The current filters that are being applied.

+ Response 200 (application/json)
  + Attributes (array[SpanGroupSummary])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  Improperly formatted request.
  + Body
  ```json
  {
    "errors": ["Invalid Filter: invalid filter key: <key>"]
  }
  ```

### Get a Span Group's timeline [GET /projects/{project_id}/span_groups/{id}/timeline{?filters}]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the Span Group belongs.
  + `id`: `1.app_start.AppStart%2FCold` (string, required) - The [URL-encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) ID of the Span Group.
  + `filters` (array[PerformanceFilter], optional) - The current filters that are being applied.

+ Response 200 (application/json)
  + Attributes (array[SpanGroupTimelinePoint])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  The format of the Span Group ID was invalid. Check the supplied `id`.
  + Body
  ```json
  {
  "errors": ["invalid span group id"]
  }
  ```

+ Response 400 (application/json)
  Improperly formatted filters.
  + Body
  ```json
  {
    "errors": ["Invalid Filter: invalid filter key: <key>"]
  }
  ```

### Get a Span Group's distribution [GET /projects/{project_id}/span_groups/{id}/distribution{?filters}]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the Span Group belongs.
  + `id`: `1.app_start.AppStart%2FCold` (string, required) - The [URL-encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) ID of the Span Group.
  + `filters` (array[PerformanceFilter], optional) - The current filters that are being applied.

+ Response 200 (application/json)
  + Attributes (array[SpanGroupDistributionPoint])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  The format of the Span Group ID was invalid. Check the supplied `id`.
  + Body
  ```json
  {
  "errors": ["invalid span group id"]
  }
  ```

+ Response 400 (application/json)
  Improperly formatted filters.
  + Body
  ```json
  {
    "errors": ["Invalid Filter: invalid filter key: <key>"]
  }
  ```

### Update Span Group [PATCH /projects/{project_id}/span_groups/{id}]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the Span Group belongs.
  + `id`: `1.app_start.AppStart%2FCold` (string, required) - The [URL-encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) ID of the Span Group.

+ Request (application/json)
  + Attributes
      + is_starred: true (boolean) - whether or not the Span Group is starred by the user.

+ Response 204

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  The format of the Span Group ID was invalid. Check the supplied `id`.
  + Body
  ```json
  {
    "errors": ["invalid span group id"]
  }
  ```

+ Response 422 (application/json)
  User has reached their limit for starring Span Groups in this project & category.
  + Body
  ```json
  {
    "errors": ["Starred span groups limit reached"]
  }
  ```

### List the starred Span Group descriptions [GET /projects/{project_id}/starred_span_groups{?categories,per_page,offset}]
List the names and properties of the requesting user's starred Span Groups for a project and optionally performance categories.

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the project to which the Span Groups belong.
  + `categories` (array(enum[string]), optional) - The performance categories of the Span Groups.
      + `app_start`
      + `view_load`
      + `network`
      + `page_load`
      + `route_change`
      + `full_page_load`
      + `navigation`
      + `custom`
  + `per_page`: `1` (number, optional) - the number of results per page
  + `offset` : `10` (number, optional) - the offset for the next page of results

+ Response 200 (application/json)
If there are no starred Span Groups the response will be an empty array.
  + Attributes (array[SpanGroupDescription])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

### List Performance Targets for a Span Group by ID [GET /projects/{project_id}/span_groups/{id}/performance_targets]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the span group belongs.
  + `id`: `1.app_start.AppStart%2FCold` (string, required) - The [URL-encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) ID of the Span Group.

+ Response 200 (application/json)
  + Attributes (array[PerformanceTarget])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  Invalid argument supplied. Response should contain a description of the issue.
  + Body
    ```json
    {
      "errors": ["Invalid argument"]
    }
    ```

+ Response 403 (application/json)
  Permission denied to view the performance targets. Response should contain a description of the issue.
  + Body
    ```json
    {
      "errors": ["Insufficient project role"]
    }
    ```

### Get Spans for a Span Group [GET /projects/{project_id}/span_group_categories/{category}/span_groups/{name}/spans]

+ Response 400 (application/json)
  No performance category with this name. Check the supplied `category`.
  + Body 
  ```json
  {
    "errors": ["Category is not included in the list"]
  }
  ```

+ Response 400 (application/json)
  Improperly formatted filters.
  + Body 
  ```json
  {
    "errors": ["Invalid Filter: invalid filter key: <key>"]
  }
  ```

### List Spans for a Span Group by ID [GET /projects/{project_id}/span_groups/{id}/spans{?filters,sort,direction,per_page}]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the spans belong.
  + `id`: `1.app_start.AppStart%2FCold` (string, required) - The [URL-encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) ID of the Span Group.
  + `filters` (array[PerformanceFilter], optional) - The current filters that are being applied.
  + `sort` (string, optional) - The field to sort the results by.
      + `duration`
      + `timestamp`
      + `full_page_load_lcp`
      + `full_page_load_fid`
      + `full_page_load_cls`
      + `full_page_load_ttfb`
      + `full_page_load_fcp`
      + `rendering_slow_frame_percentage`
      + `rendering_frozen_frame_percentage`
  + `direction` (enum[string], optional) - The direction to sort the results by.
      + `asc`
      + `desc`
  + `per_page` (number, optional) - The number of results to return per page. Defaults to 20.

+ Response 200 (application/json)
    + Attributes (array[Span])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  The format of the Span Group ID was invalid. Check the supplied `id`.
  + Body
  ```json
  {
  "errors": ["invalid span group id"]
  }
  ```

+ Response 400 (application/json)
  Improperly formatted filters.
  + Body
  ```json
  {
    "errors": ["Invalid Filter: invalid filter key: <key>"]
  }
  ```

### List Spans for a Trace  [GET /projects/{project_id}/traces/{trace_id}/spans{?target_span_id,per_page,from,to}]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the spans belong.
  + `trace_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Trace to which the spans belong.
  + `from`: `2023-04-11T13:14:25.123Z` (string, required) - Beginning of window to return spans from.
  + `to`: `2023-04-11T13:14:26.123Z` (string, required) - End of window to return spans from.
  + `target_span_id`: `6368f07a518fa064ce036bdb` (string, optional) - The ID of a Span within the Trace to focus on. If provided the target Span and its direct children will be returned ahead of other Spans in the Trace.
  + `per_page`: `20` (number, optional) - The number of results to return per page. Defaults to 20.

+ Response 200 (application/json)
    + Attributes (array[Span])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

## Page Load Span Groups [/projects/{project_id}/page_load_span_groups]
  Page load span groups are virtual span groups representing two collections of aggregated spans associated with a page load -- one for full page loads and another for route changes.
Each page load span group holds up to two regular span groups. The endpoints can be filtered to only return full page loads or route changes using a `PerformanceFilter` filter on `span_group.category`.
See [Filtering](#introduction/filtering/trace-fields-and-performance-filtering) for more information.

### Show a Page Load Span Group by ID [GET /projects/{project_id}/page_load_span_groups/{id}{?filters}]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the Page Load Span Group belongs.
  + `id`: `1.page_load.AppStart%2FCold` (string, required) - The [URL-encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding) ID of the Page Load Span Group.
  + `filters` (array[PerformanceFilter], optional) - The current filters that are being applied.

+ Response 200 (application/json)
  + Attributes (PageLoadSpanGroup)

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  Improperly formatted filters.
  + Body
  ```json
  {
    "errors": ["Invalid Filter: invalid filter key: <key>"]
  }
  ```

+ Response 400 (application/json)
  The format of the Span Group ID was invalid. Check the supplied `id`.
  + Body
  ```json
  {
  "errors": ["invalid span group id"]
  }
  ```

### List Page Load Span Groups [GET /projects/{project_id}/page_load_span_groups/{?per_page,offset,filters,sort,direction,starred_only}]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the Page Load Span Groups belong.
  + `sort`: `total_spans` (enum[String], optional) - The field to sort the page load span groups by
      + `name`
      + `total_spans`
      + `full_page_load_total_spans`
      + `route_change_load_total_spans`
      + `cls` - cumulative layout shift
      + `ttfb` - time to first byte
      + `fcp` - first contentful paint
      + `route_change_total_spans`
      + `lcp` - largest contentful paint
      + `fid` - first input delay
      + `full_page_load_duration_p50`
      + `full_page_load_duration_p75`
      + `full_page_load_duration_p90`
      + `full_page_load_duration_p95`
      + `full_page_load_duration_p99`
      + `route_change_duration_p50`
      + `route_change_duration_p75`
      + `route_change_duration_p90`
      + `route_change_duration_p95`
      + `route_change_duration_p99`
  + `direction`: `desc` (enum[String], optional) - The direction to sort the page load span groups by
      + `desc`
      + `asc`
  + `per_page`: `1` (number, optional) - the number of results per page
  + `offset` : `10` (number, optional) - the offset for the next page of results
  + `filters` (array[PerformanceFilter], optional) - The current filters that are being applied. 
  + `starred_only`: false (boolean, optional) - Whether to only return Page Load Span Groups the requesting user has starred.

+ Response 200 (application/json)
  + Attributes (array[PageLoadSpanGroup])

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  

+ Response 400 (application/json)
  Improperly formatted filters.
  + Body 
  ```json
  {
    "errors": ["Invalid Filter: invalid filter key: <key>"]
  }
  ```

## Trace Fields [/projects/{project_id}/trace_fields]
  Trace fields are the fields used for filtering spans that are aggregated in span groups on a project.
They include a name identifier and filter options for each field.
See [Filtering](#introduction/filtering/trace-fields-and-performance-filtering) for more information.

### List the Trace Fields on a project [GET /projects/{project_id}/trace_fields]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to which the Trace Field belongs.

+ Response 200 (application/json)
  + Attributes (array[TraceField])
  
+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```
  





## Network Endpoint Grouping [/network_endpoint_grouping]

  Network endpoint groupings are configured to allow you to see the performance of individual endpoints on your domain. The groupings use Open API templating syntax for path parameters, and also support * wildcards in the domain.

### List a Project's Network Grouping Ruleset [GET /projects/{project_id}/network_endpoint_grouping]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to retrieve the endpoints for

+ Response 200 (application/json)
  + Attributes (ProjectNetworkGroupingRuleset)

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```

+ Response 403 (application/json)
  Organization does not have access to the performance feature.

  + Body 
  ```json
  {
    "errors": ["Organization requires the performance network grouping feature"]
  }
  ```

### Update a Project's Network Grouping Ruleset [PUT /projects/{project_id}/network_endpoint_grouping]

+ Parameters
  + `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project to retrieve the endpoints for

+ Request (application/json)
  + Attributes (NetworkGroupingRulesetRequest)

+ Response 200 (application/json)
  + Attributes (ProjectNetworkGroupingRuleset)

+ Response 400 (application/json)
  Supplied endpoints must be an array of strings

  + Body 
  ```json
  {
    "errors": ["Endpoints must contain an array of values"]
  }
  ```

+ Response 400 (application/json)
  A validation issue occurred with at least one supplied endpoint

  + Body 
  ```json
  {
    "errors": ["Bad request: explanatory message"]
  }
  ```

+ Response 404 (application/json)
  Project could not be found. Check the supplied `project_id`.
  + Body 
  ```json
  {
    "errors": ["Project not found"]
  }
  ```

+ Response 403 (application/json)
  Organization does not have access to the performance feature.

  + Body 
  ```json
  {
    "errors": ["Organization requires the performance network grouping feature"]
  }
  ```






# Data Structures

## ActivityItem
+ id: 515fb9337c1074f6fd000001 (string)
+ action (enum[string])
  + fixed
  + unfixed
  + snoozed
  + unsnoozed
  + ignored
  + unignored
  + assigned
  + unassigned
  + `issue_created`
  + `issue_linked`
  + `issue_unlinked`
  + `first_seen`

+ actor (User)
    Indicates the Collaborator who performed the action.  Actor
    can also simply be the string `"system"`, which indicates that
    the activity is attributed to Bugsnag rather than a
    Collaborator.

+ `assignee` (User, optional)

    The Collaborator to whom the Error has been assigned

+ `assigned_team` (TeamApiView, optional)

    The Team to whom the Error has been assigned

+ `created_at`: `2017-03-06 23:34:00 UTC` (string, required)
+ `snoozed_conditions` (ErrorUpdateReopenRules, optional) - Will be present if the `action` is `snoozed` or `unsnoozed`.
+ `new_app_version`: `1.3` (string, optional)
    If the ActivityItem relates to a changed error status, this field will contain the new app version the error occurred in, if any.
+ `issue_tracker`: jira (string, optional)
    If the ActivityItem relates to an issue, this field will contain the issue tracker's name.
+ `issue_url` (string)
    If the ActivityItem relates to an issue, this field will contain the url of the issue.
+ `issue_url_verified` (boolean)
    If the ActivityItem relates to an issue, this field will contain whether or not the url of the issue was verified.
+ `issue_number`: 0 (number, optional)
    If the ActivityItem relates to an issue, this field will contain the number of the issue.
+ `issue_key`: `NAME-0001` (string, optional)
    If the ActivityItem relates to an issue, this field will contain the key for the issue.
+ `issue_id`: `21560530120205` (string, optional)
    If the ActivityItem relates to an issue, this field will contain the id for the issue on the external service.

+ reason (string, optional)
    Some ActivityItems will contain a reason field which will provide more context for why the `action` was taken.

## ErrorSummary
+ id: 515fb9337c1074f6fd000007 (string, required)
+ `error_class`: `SyntaxError` (string, required) Error class from the error that was discarded
+ context (string, required) The context details of the error
+ severity (SeverityOptions, required) The severity of the error
+ unhandled: true (boolean, required) Whether the error's last event was unhandled
+ message (string, required) The error message

## ProjectActivityItem
+ id: 515fb9337c1074f6fd000001 (string)
+ action (enum[string])
  + commented
  + fixed
  + unfixed
  + snoozed
  + unsnoozed
  + ignored
  + unignored
  + assigned
  + unassigned
  + `issue_created`
  + `issue_linked`
  + `issue_unlinked`
  + `first_seen`

+ actor (User)
    Indicates the Collaborator who performed the action.  Actor
    can also simply be the string `"system"`, which indicates that
    the activity is attributed to Bugsnag rather than a
    Collaborator.

+ `assignee` (User, optional)

    The Collaborator to whom the Error has been assigned

+ `assigned_team` (TeamApiView, optional)

    The Team to whom the Error has been assigned

+ `created_at`: `2017-03-06 23:34:00 UTC` (string, required)
+ `snoozed_conditions` (ErrorUpdateReopenRules, optional) - Will be present if the `action` is `snoozed` or `unsnoozed`.
+ `issue_tracker`: jira (string, optional)
    If the ActivityItem relates to an issue, this field will contain the issue tracker's name.
+ `issue_url` (string)
    If the ActivityItem relates to an issue, this field will contain the url of the issue.
+ `issue_url_verified` (boolean)
    If the ActivityItem relates to an issue, this field will contain whether or not the url of the issue was verified.
+ `issue_number`: 0 (number, optional)
    If the ActivityItem relates to an issue, this field will contain the number of the issue.
+ `issue_key`: `NAME-0001` (string, optional)
    If the ActivityItem relates to an issue, this field will contain the key for the issue.
+ `issue_id`: `21560530120205` (string, optional)
    If the ActivityItem relates to an issue, this field will contain the id for the issue on the external service.

+ reason (string, optional)
    Some ActivityItems will contain a reason field which will provide more context for why the `action` was taken.

+ `updated_at` (string, optional)
    Comments will contain an updated_at field which will contain the time and date that the comment was updated.

+ `integration_key`: jira (string, optional)
    Actions initiated by an integration will have this field set to the key of the integration.

+ `error_summary` (ErrorSummary, required) Details of the error to which the activity item references.

## CommentApiView
+ id: 515fb9337c1074f6fd000007 (string, required)
+ `created_at`: `2017-03-02T05:55:55.555Z` (string)
  The time the Comment was created.
+ `updated_at`: `2017-08-10T06:66:66.666Z` (string)
  The time the Comment was updated.
+ message (string) - the comment body itself
+ url (string): `https://api.bugsnag.com/comments/515fb9337c1074f6fd000007` - a permalink to the Comment.
+ collaborator (User) - the Collaborator who made the comment

## ProjectSessionOverviewWithProjectIdApiView (ProjectSessionOverviewApiView)
+ `project_id`: `515fb9337c1074f6fd000001` (string) - ID of the project

## ProjectSessionOverviewApiView
+ `stability_score` (nullable) - Will be null if no release stage was returned
  + `sessions_started`: `200` (number) - number of sessions started in last 30 days
  + `sessions_with_unhandled`: `40` (number) - number of sessions with unhandled errors in last 30 days
  + `unhandled_rate`: `0.2` - ratio of unhandled sessions to total number started
  + `accumulative_daily_users_seen`: `200` (number) - number of users seen in last 30 days
  + `accumulative_daily_users_with_unhandled`: `40` (number) - number of users seeing at least one unhandled error in last 30 days
  + `unhandled_user_rate`: `0.2` - ratio of users with unhandled error to total users seen
+ `session_timeline` (array[GenericTimelinePointWithUserSessions], nullable) - Will be null if no release stage was returned

## ProjectOverviewApiView
+ `project_id`: `515fb9337c1074f6fd000001` (string) - ID of the project
+ `for_review`
  + `one_week_ago`: `13` (number, nullable) - The number of errors for review one week ago, will be null if project is younger than a week
  + `current`: `4` (number) - The number of errors for review at time of request
+ `release_stage_name`: `production` (string, nullable) - The primary release stage name, will be null if no primary release stage was returned
+ `latest_release` (nullable) - Will be null if no release stage was returned
  + `release_group_id`:  `515fb9337c1074f6fd000001` (string) - ID of the release group
  + `app_version`: `1.3` (string) - The latest app version in the primary release stage
  + `first_release_time`: `2020-04-07T21:48:30.046Z` (string) - The ISO-8601-encoded time the first release was recorded

## SingleProjectOverviewApiView
+ `project_id`: `515fb9337c1074f6fd000001` (string) - ID of the project
+ `for_review`
  + `one_week_ago`: `13` (number, nullable) - The number of errors for review one week ago, will be null if project is younger than a week
  + `current`: `4` (number) - The number of errors for review at time of request
+ `latest_release` (nullable) - Will be null if no release stage was returned
  + `release_group_id`:  `515fb9337c1074f6fd000001` (string) - ID of the release group
  + `app_version`: `1.3` (string) - The latest app version in the primary release stage
  + `first_release_time`: `2020-04-07T21:48:30.046Z` (string) - The ISO-8601-encoded time the first release was recorded

## ConfiguredIntegration
+ `id`: 515fb9337c1074f6fd000007 (string) - ID of the configured integration
+ `integration_key`: jira (string) - Key to identify the integration service.
+ `project_id`: `515fb9337c1074f6fd000001` (string) - ID of the project
+ `configuration` (SampleIntegrationConfiguration, required) - A map of the configuration parameters required for the integration. The fields vary depending on the integration being configured. Example:
+ `description`: `Create and sync Jira ticket` (string)
    Description of the configured integration
+ `disable_release_stages` (array)
    The release stages that this notification should not be triggered for.
    Example:
    {
     "disable_release_stages": ["development", "staging"]
    }
+ `disable_severities` (array[enum[string]])
    The severities that this notification should not be triggered for.
    + Members
      + error - Error severity.
      + warning - Warning severity.
      + info - Info severity.
+ `disable_unhandled_states` (array[UnhandledOptions])
    The kinds of exceptions that this notification should not be triggered for.
+ `issue_automation` (IssueAutomationSettings, optional)  - Automation settings (applicable for `issue-tracker` integrations only).
+ `last_failure_message`: 'Integration not found' (string) - The error message from the most recent failure of the integration.
+ `total_rate_limits`: 4 (number) - The total number of times the integration has failed due to a rate limit from the integration.
+ `last_successful_usage_at`: `2017-03-02T05:55:55.555Z` (string) - The ISO8601 timestamp of the last time the integration was successfully used.
+ `status`: enabled (enum[string])
   The status of the configured integration.
   + Members
      + enabled - The integration is enabled.
      + disabled - The integration is disabled. No notifications will be sent.
      + failing - The integration is failing. If it continues to fail over a period of time it will become failed.
      + failed - The integration is failed. No notifications will be sent. An integration can be enabled again by performing a successful [/configured_integrations/test](/#reference/integrations/configured-integrations).
+ `additional_setup_required`: `webhook` (enum[string], optional, nullable)
  This will be set if an integration could not be fully configured automatically and requires additional setup by the user.
  + Members
      + webhook - A two-way integration requires a webhook in the target system to be created manually. Currently only set for Jira.
+ `label`: `My Issue Tracker` (string, optional, nullable)
    A label for use in identifying the issue tracker.
+ `integration_connection_id`: `515fb9337c1074f6fd000007` (string, optional)
    ID of an associated integration connection.

## ConfiguredIntegrationUpdateRequest
+ `configuration` (SampleIntegrationConfiguration, required) - A map of the configuration parameters required for the integration. The fields vary depending on the integration being configured. Example:
+ `disable_release_stages` (array)
    The release stages that this notification should not be triggered for.
    Example:
    {
     "disable_release_stages": ["development", "staging"]
    }
+ `disable_severities` (array[enum[string]])
    The severities that this notification should not be triggered for.
    + Members
      + error - Error severity.
      + warning - Warning severity.
      + info - Info severity.
+ `disable_unhandled_states` (array[UnhandledOptions])
    The kinds of exceptions that this notification should not be triggered for.
+ `issue_automation` (IssueAutomationSettings, optional)  - Automation settings (applicable for `issue-tracker` integrations only).
+ `label`: `My Issue Tracker` (string, optional, nullable)
    A label for use in identifying the issue tracker.
+ `integration_connection_id`: 515fb9337c1074f6fd000007 (string)
  The id of the integration connection to base this configured integration off of.

## ConfiguredIntegrationCreateRequest
+ `integration_key`: jira (string, required) - Key to identify the integration service.
+ `configuration` (SampleIntegrationConfiguration, required) - A map of the configuration parameters required for the integration. The fields vary depending on the integration being configured. Example:
+ `disable_release_stages` (array)
    The release stages that this notification should not be triggered for.
    Example:
    {
     "disable_release_stages": ["development", "staging"]
    }
+ `disable_severities` (array[enum[string]])
    The severities that this notification should not be triggered for.
    + Members
      + error - Error severity.
      + warning - Warning severity.
      + info - Info severity.
+ `disable_unhandled_states` (array[UnhandledOptions])
    The kinds of exceptions that this notification should not be triggered for.
+ `issue_automation` (IssueAutomationSettings, optional)  - Automation settings (applicable for `issue-tracker` integrations only).
+ `label`: `My Issue Tracker` (string, optional, nullable)
    A label for use in identifying the issue tracker.
+ `integration_connection_id`: 515fb9337c1074f6fd000007 (string)
  The id of the integration connection to base this configured integration off of.

## ConfiguredIntegrationSummary
+ `notification_id`: `515fb9337c1074f6fd000007` (string)
    ID of the base configured integration
+ `description`: `Create and sync Jira ticket` (string)
    Description of the configured integration
+ `project_identifier`: `PROJ` (string, optional, nullable)
    If the notification is an issue tracker, this is a human-readable project identifier associated with the issue tracker. If there is no human-readable project identifier (e.g. the service uses an API key only) then this will be null.
+ `integration_key`: `jira` (string)
    Key to identify the integration service
+ `category`: `issue-tracker` (string)
    Category of configured integration
+ `enabled_trigger_count`: `5` (number)
    Number of triggers enabled
+ `status`: enabled (enum[string])
   The status of the configured integration.
   + Members
      + enabled - The integration is enabled.
      + disabled - The integration is disabled. No notifications will be sent.
      + failing - The integration is failing. If it continues to fail over a period of time it will become failed.
      + failed - The integration is failed. No notifications will be sent. An integration can be enabled again by performing a successful [/configured_integrations/test](/#reference/integrations/configured-integrations).
+ `label`: `My Issue Tracker` (string, optional, nullable)
    A label for use in identifying the issue tracker.

## ConfiguredIntegrationUsage
+ `integration_key`: `jira` (string) - The key to identify the Integration
+ `category`: `issue-tracker` (string) - The category of the Integration
+ `count`: 120 (number) - The total number of Configured Integrations with the Integration key for the Project
+ `enabled_trigger_count`: 250 (number) - The sum of all enabled triggers for all Configured Integrations with the Integration key for the Project

## SampleIntegrationConfiguration
+ `user_name`: `a_user` (string, optional)
+ `project_id`: `1234` (string, optional)
+ `password`: `so_secure` (string, optional)

## SampleIntegrationConfigurationRequest
+ `component`: `Ticket, Action` (string, optional)
  Comma separated list of components to create the issue in
+ `customFields`: `{"customfield_10024": {"value": "Engineering"}}` (string, optional)
  Additional JSON-encoded Jira fields
+ `host`: `https://example.atlassian.net`
    URL of your Jira instance
+ `ignore_tls_validation`: false (boolean)
  Whether to ignore TLS validation when making API calls
+ `issueType`: `Task` (string, optional)
  The type of issue to be created
+ `password`: `e112Fq0cc5` (string, optional)
  API token generated for your Jira account (use your password for Jira Server)
+ `project_key`: `jira` (string, optional)
  The project key for the Jira project
+ `user_name`: `example@example.com` (string, optional)
  Your Jira email

## IntegrationConnectionManualCreateRequest
+ `type`: `jira` (string) - The external software to communicate with. Currently this can only be 'jira'
+ `configuration` (JiraConnectionTypeRequest) - The configuration of the integration connection

## IntegrationConnectionManualUpdateRequest
+ `configuration` (JiraConnectionTypeRequest) - The configuration of the integration connection

## IntegrationConnectionManualApiView
+ `id`: `515fb9337c1074f6fd000001` (string) - The ID of the integration connection
+ `organization_id`: `515fb9337c1074f6fd000001` (string) - The ID of the organization that the integration connection belongs to
+ `external_identifier`: `j1l443` (string) - An identifier to communicate with external service
+ `type`: `jira` (string) - The external software to communicate with. Currently this can only be 'jira'
+ `configuration_type`: `manual` (string) - The type of configuration. Can be manual or app, but only manual can be updated through the Bugsnag API
+ `configuration`: (JiraConnectionTypeResponse) - The configuration of the integration connection

## JiraConnectionTypeRequest
+ `jira` (ManualConfigurationRequest) - A jira type configuration. Currently we only allow jira types.

## JiraConnectionTypeResponse
+ `jira` (ManualConfigurationResponse) - A jira type configuration. Currently we only allow jira types.

## ManualConfigurationRequest
+ `manual` - A manual configuration.
  + `host`: `https://host.example.com` (string) - The Jira host (Used as the base for API calls)
  + `authentication_type` (ManualConfigurationResponseAuthenticationType) - (manual configuration only) The authentication type used on this connection
  + `username`: `sampleUser` (string) - (manual configuration only) The username of the Jira user to make API calls as. Required if `authentication_type` is `basic`.
  + `password`: `e1ooanWEs` (string) - (manual configuration only) The password use to sign into the Jira account. Required if `authentication_type` is `basic`.
  + `bearer_token`: `abcde-12345-token` (string) - (manual configuration only) The bearer token for Jira. Required if `authentication_type` is `bearer`.
  + `ignore_tls_validation` (boolean, nil) - (manual configuration only) Whether to ignore TLS validation when making API calls

## IntegrationConnectionConfiguredIntegrationCountApiView
+ `integration_connection_id`: `515fb9337c1074f6fd000001` (string) - The ID of the integration connection
+ `configured_integration_count`: 3 (number) - The number of configured integrations for this integration connection

## GlobalIntegrationConnectionUpdateRequest
+ `organization_id`: `515fb9337c1074f6fd000001` (string) - The ID of the organization that the integration connection belongs to
+ `external_identifier`: `j1l443` (string) - An identifier to communicate with external service

## ManualConfigurationResponse
+ `manual` - A manual configuration.
  + `host`: `https://host.example.com` (string) - The Jira host (Used as the base for API calls)
  + `username`: `sampleUser` (string, optional) - (manual configuration only) The username of the Jira user to make API calls as
  + `ignore_tls_validation` (boolean, nil) - (manual configuration only) Whether to ignore TLS validation when making API calls
  + `authentication_type` (ManualConfigurationResponseAuthenticationType) - (manual configuration only) The authentication type used on this connection

## ManualConfigurationResponseAuthenticationType (enum)
### Members
+ basic
+ bearer

## AccountTrigger (enum)
### Members
+ accountSamplingStarted
+ accountApproachingRateLimit

## ProjectTrigger (enum)
### Members
+ firstException
+ exception
+ exceptionUnfiltered
+ reopened
+ powerTen
+ comment
+ mention
+ dailySummaryEmail
+ weeklySummaryEmail
+ projectSpiking
+ errorStateManualChange
+ newRelease
+ dailyPerformanceSummaryEmail
+ weeklyPerformanceSummaryEmail
+ projectSamplingStarted
+ projectApproachingRateLimit
+ performanceAlertStatusChange

## EmailNotification
+ id: 515fb9337c1074f6fd000007 (string, required)
+ `project_id`: 515fb9337c1074f6fd000008 (string, required)
+ triggers: (array[ProjectTrigger], required) - triggers to email on
+ `disable_severities`: info (enum[string], required)
+ `disable_unhandled_states`: handled (UnhandledOptions, optional)
+ `disable_release_stages`: staging (enum[string], required)
+ status: "enabled" (string, required)
+ `last_failure_message` (string, optional, nullable)

## EmailNotificationSummary
+ `notification_id`: 515fb9337c1074f6fd000007 (string, required)
+ `project_id`: 515fb9337c1074f6fd000008 (string, required)
+ `enabled_trigger_count`: 5 (number, required) - the number of trigger types used by this email notification

## TriggerConfig
+ active: true (boolean, required)
+ settings: (array[NotificationSetting], optional) - settings for the trigger

## NotificationSetting
+ `saved_search_id`: 515fb9337c1074f6fd000007 (string, optional) - must be from the same project as the notification, and have a `type` of `error`
+ `basic_filter`: (BasicFilter, optional)
+ `include_all_states`: true (boolean, optional) - for `exception_config` and `project_spiking_config` are all states included, or just open
+ `release_stages`: production (array[string], optional) - the release stages to include (only for `new_release_config` trigger config)
+ threshold: 19 (number, optional) - for `error_event_frequency_config`, the threshold to alert above
+ condition: (enum[string], optional) - for `weekly_performance_summary_email_config` and `daily_performance_summary_email_config`.
  + Members
    + `always`
    + `when_degraded`
+ period: 1m (string, optional) - for 'error_event_frequency_config`, the period for which the threshold applies
  The supported string format is a whole number followed by either:
    - "m" which represents minutes
    - "h" which represents hours
    - "d" which represents days

  E.g. "2h" is a period of 2 hours.

  The minimum supported periods are:
    - "1m"
    - "1h"
    - "1d"

  The maximum supported period is 7 days, or:
    - "10080m"
    - "168h"
    - "7d"

## BasicFilter
+ error_statuses: open (array[BasicFilterErrorStatus], optional) - the error statuses to include
+ release_stages: production, staging (array[string], optional) - the release stages to include
+ severities: (array[SeverityOptions], optional) - the severities to include
+ unhandled_states: (array[UnhandledOptions], optional) - unhandled states to include

## EmailSettings
+ `organization_id`: 515fb9337c1074f6fd000007 (string, required)
+ `share_email_settings`: true (boolean, required)
+ `auto_subscribe_email_notifications`: true (boolean, required)
+ triggers: (array[ProjectTrigger, AccountTrigger], required) - triggers to email on
+ `disable_severities`: info (enum[string], optional)
+ `disable_unhandled_states`: handled (UnhandledOptions, optional)
+ `disable_release_stages`: staging (enum[string], optional)

## EmailSettingTriggerConfig
+ active: true (boolean, required) - Is the trigger active? If active, notifications will be sent when events match the trigger
+ settings: (array[EmailSettingsTriggerConfigSetting], optional) - settings for the trigger

## EmailSettingsTriggerConfigSetting
+ `basic_filter`: (BasicFilter, optional)
+ `include_all_states`: true (boolean, optional) - for `exception_config` (with data-forwarding integrations) and `project_spiking_config`, are all states included, or just open
+ `release_stages`: production (array[string], optional) - the release stages to include (only for `new_release_config` trigger config)
+ threshold: 19 (number, optional) - for `error_event_frequency_config`, the threshold to alert above
+ condition: (enum[string], optional) - for `weekly_performance_summary_email_config` and `daily_performance_summary_email_config`.
  + Members
    + `always`
    + `when_degraded`
+ period: 1m (string, optional) - for `error_event_frequency_config`, the period for which the threshold applies
  The supported string format is a whole number followed by either:
    - "m" which represents minutes
    - "h" which represents hours
    - "d" which represents days

  E.g. "2h" is a period of 2 hours.

  The minimum supported periods are:
    - "1m"
    - "1h"
    - "1d"

  The maximum supported period is 7 days, or:
    - "10080m"
    - "168h"
    - "7d"

## ErrorBase

+ `severity` (SeverityOptions) - The severity of the Error

## ErrorUpdateRequest (ErrorBase)
+ `operation` (enum[string], required)
  The type of update operation to perform. The can be used to change the Error's workflow state (e.g. marking the Error as `fixed`).
  It must be one of the following:
  + Members
    + `override_severity`
      Set the Error's severity to the newly supplied `severity` parameter.
    + `assign`
      Assign the Error to the Collaborator specified by the `assigned_collaborator_id` parameter. The error will be unassigned if `assigned_collaborator_id` is blank, the identified Collaborator has not accepted their invitation, or they do not have access to the Error's Project.
    + `create_issue`
      Create an issue for the Error. If the `issue_title` parameter is set, the new issue will be created with this title.
    + `link_issue`
      Link the Error to an existing issue. The url should be provided in the `issue_url` parameter. `verify_issue_url` can be set to control whether Bugsnag should attempt to verify the issue URL with any configured issue tracker integration. This is the default behaviour if `verify_issue_url` is not supplied.
    + `unlink_issue`
      Remove the link between the Error and its current linked issue. 
    + open
      Set the Error's status to open.
    + `snooze`
      Snooze the error per the `reopen_rules` parameter.
    + `fix`
      Set the Error's status to fixed.
    + `ignore`
      Ignore the Error. Errors that are ignored and can only be reopened manually. Events are collected, but no notifications are sent.
    + `delete`
      Delete the Error. The Error and all related Events will be removed from Bugsnag. If the error occurs again, it will appear as a new Error with status `Open`.
    + `discard`

      Discard future Events for this Error. The Error and all existing Events will remain in Bugsnag, but future occurrences of the Error will not be stored by Bugsnag or count toward Event usage limits.


    + `undiscard`

      Undiscard the Error. Future Events will be stored for this Error. This undoes the `discard` option.

+ `assigned_collaborator_id`: `515fb9337c1074f6fd000002` (string, optional)
  The Collaborator to assign to the Error. Errors may be assigned only to users who have accepted their Bugsnag invitation and have access to the project. 
+ `assigned_team_id`: `515fb9337c1074f6fd000003` (string, optional)
  The Team to assign to the Error. Mutually exclusive with `assigned_collaborator_id`.
+ `issue_url` (string, optional)
   Specifies the HTTP link to an external issue when adding or updating a link. 
+ `verify_issue_url` (boolean, optional)
  Setting `false` will prevent Bugsnag from attempting to verify the `issue_url` with the configured issue tracker when linking an issue. Defaults to `true` if the parameter is not supplied. If no configured issue tracker the parameter is ignored.
+ `issue_title` (string, optional)
  If the Error has a `created_issue`, the `issue_title` request field can be set to update the issue's title.
+ `notification_id`: `337515fb9c1074f6fd000001` (string, optional)
  ID of the issue tracker to use for `create_issue` and `link_issue` operations. The most recent issue tracker is used if the parameter is omitted, and no issue tracker is used even if `notification_id` is set for `link_issue` operations if `verify_issue_url` is `false`. 
+ `reopen_rules` (ErrorUpdateReopenRules)
  Snooze rules for automatically reopening the Error
+ `severity` (SeverityOptions, optional)
  The Error's new severity. This will be reflected in the Error's `overridden_severity` property. This is only applicable if the `override_severity` option is provided.

## SeverityOptions (enum)
### Members
  + info - can be used in manual Bugsnag.notify calls
  + warning - the default severity when Bugsnag.notify is called manually
  + error - the default severity for uncaught exceptions and crashes

## UnhandledOptions (enum[string])
### Members
  + unhandled - Unhandled exceptions.
  + handled - Handled exceptions.

## ErrorCreatedIssue
  + id: 1246284 (string)
      The immutable issue id.
  + key: `ENG-10` (string, optional)
      The issue key (if applicable). For example, in the case of a Jira story,
      this will be the mutable key (e.g. ENG-10)
  + number: 123 (number, optional)
      The issue number (if applicable). For example, in the case of a github issue
      with the url `https://github.com/foo/bar/issues/123` this field will be
      set to `123`.
  + type: jira (string)
      An identifier for the 3rd party service
  + url: `https://example.atlassian.net/browse/ENG-10` (string)
      The url to the issue on the 3rd party service

## ErrorStatus (enum[string])

### Members
  + open
  + in progress
  + for_review
  + fixed
  + snoozed
  + ignored

## BasicFilterErrorStatus (enum[string])

### Members
  + open
  + fixed
  + snoozed
  + ignored

## ErrorUpdateReopenRules (object)
### Properties
  + `reopen_if` (enum[string], required) - Must be one of the following:
    + `occurs_after` - Indicates that the error should be reopened if there are any occurrences after the specified time period. In this case, the `seconds` field must also be provided.
    + `n_occurrences_in_m_hours` - Indicates that the Error should be reopened after n occurrences over some period of hours. In this case, the `occurrences` and `hours` fields will both be present.
    + `n_additional_occurrences` - Indicates that the Error should be reopened after n more occurrences. In this case, the `additional_occurrences` field indicates the number of additional occurrences that were allowed before reopening. Cannot be set if more than 10,000 existing users are already affected by an error.
    + `n_additional_users` - Reopen the error after `n` more users are affected. In this case, the `additional_users` field must be provided.`

  + `additional_users` (number) - for `n_additional_users` reopen rules, the number of additional users to be affected by an Error before the Error is automatically reopened. Value cannot exceed 100,000.

  + seconds (number) - for `occurs_after` reopen rules, the number of seconds that the Error should be snoozed for.
  + occurrences (number) - for `n_occurrences_in_m_hours` reopen rules, the number of occurrences to allow in the number of hours indicated by the `hours` field, before the Error is automatically reopened.
  + hours (number) - for `n_occurrences_in_m_hours` reopen rules, the number of hours.
  + `additional_occurrences` (number) - for `n_additional_occurrences` reopen rules, the number of additional occurrences allowed before reopening.

## ErrorReopenRules (object)
### Properties
  + `reopen_if` (enum[string], required) - Must be one of the following:
      + `n_additional_occurrences` - Indicates that the Error should be reopened after n more occurrences. In this case, the `occurrence_threshold` field indicates the number of total occurrences at which the Error should be reopened, and the `additional_occurrences` field indicates the number of additional occurrences that were allowed before reopening.
      + `n_occurrences_in_m_hours` - Indicates that the Error should be reopened after n occurrences over some configurable number of hours. In this case, the `occurrences` and `hours` fields will both be present.
      + `occurs_after` - Indicates that the error should be reopened if there are any occurrences after the specified time period. The `seconds` field contains the number of seconds that the Error has been snoozed for. In this case, the `seconds` and `reopen_after` fields will both be present.
  + `reopen_after` (string) - for `occurs_after` reopen rules, this field indicates the time after which the Error should be reopened if there is an additional occurrence.
  + seconds (number) - for `occurs_after` reopen rules, the number of seconds that the Error was set to snooze for.
  + occurrences (number) - for `n_occurrences_in_m_hours` reopen rules, the number of occurrences to allow in the number of hours indicated by the `hours` field, before the Error is automatically reopened.
  + hours (number) - for `n_occurrences_in_m_hours` reopen rules, the number of hours.

  + `occurrence_threshold` (number) - for `n_additional_occurrences` reopen rules, the number of total occurrences at which the Error should be reopened.
  + `additional_occurrences` (number) - for `n_additional_occurrences` reopen rules, the number of additional occurrences allowed before reopening.




## ErrorApiView (ErrorBase)
+ `assigned_collaborator_id`: `515fb9337c1074f6fd000002` (string, optional)
  Identifies the collaborator, if any, who has been assigned to the Error.
+ `assigned_team_id`: `515fb9337c1074f6fd000002` (string, optional)
  Identifies the team, if any, that has been assigned to the Error.
+ id: 515fb9337c1074f6fd000001 (string)
+ `project_id`: 74f6fd000001515fb9337c10 (string)
+ url: https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001 (string)
+ `project_url`: https://api.bugsnag.com/projects/74f6fd000001515fb9337c10 (string)
+ `error_class`: `NoMethodError` (string)
+ message: undefined method `foo` for nil:NilClass (string)
+ context: `users#show` (string)
+ `original_severity` (SeverityOptions) - The Error's original severity. Present if the Error's default severity has been modified.
+ `overridden_severity` (SeverityOptions) - The Error's updated severity. Present if the Error's default severity has been modified.
+ events: 10 (number)
  The number of occurrences of the Error. If the Error request includes filters, this will be a filtered count.
+ `events_url`: `https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001/events` (string)
  The API URL for the Error's Events.
+ `unthrottled_occurrence_count`: 10 (number)
  The absolute count of all received Events for the Error.
+ users: 5 (number)
  The number of users affected by the Error. If the Error request includes filters, this will be a filtered count.
+ `first_seen`: `2017-03-20T00:00:00Z` (string, optional)
  The time of the first occurrence of the Error. This time will be within the
  bounds of any applied time Filters.
+ `last_seen`: `2017-03-27T00:00:00Z` (string, optional)
  The time of the last occurrence of the Error. This time will be within
  the bounds of any applied time Filters.
+ `first_seen_unfiltered`: `2017-03-19T08:41:13Z` (string, optional)
  The time of the first occurrence of this Error. This is an absolute time which
  may extend beyond the bounds of any applied time Filters.
+ `last_seen_unfiltered``2017-03-31:00:00Z` (string, optional)
  The time of the last occurrence of this Error. This is an absolute time which
  may extend beyond the bounds of any applied time Filters.
+ `reopen_rules` (ErrorReopenRules)
  Snooze rules for automatically reopening the Error
+ status: open (ErrorStatus)
  The Error's work flow status. Must be one of:
+ `linked_issues` (array[ErrorCreatedIssue], optional)
  Issues linked to this error
+ `created_issue` (ErrorCreatedIssue, optional)
  Deprecated field that returns the first `linked_issue`. Consider using the `linked_issues` field instead.
+ `comment_count`: 5 (number)
  The number of comments on the Error. This count does not consider time Filters.
+ `missing_dsyms` (array)
  An array of UUIDs for dSYMs that were not [uploaded](https://docs.bugsnag.com/platforms/ios/symbolication-guide/) but are required to
  symbolicate the Error. Applies to iOS, macOS, and tvOS projects.
+ `release_stages` (array)
  The release stages where this Error has occurred.
  Example:
  {
    "release_stages": ["staging", "production"]
  }
+ `grouping_reason`: `frame-inner` (enum[string], nullable)
  The reason that events were grouped into this error.
  + Members
    + `frame-code` - same code location
    + `frame-inner` - top in-project stackframe
    + `context-inner` - context
    + `error_class-inner` - error class
    + `user_defined` - custom grouping hash
    + `js-blob` - from blobs (JS only)
    + `js-tag` - same inline script (JS only)
    + `js-html` - same page location (JS only)
    + `js-eval` - originate from eval statements (JS only)
    + `js-structure` - same point in the code using the structure of the surrounding minified code (JS only)
    + `js-codebase` - same point in the code using the surrounding minified code (JS only)
    + `js-location` - similar location (JS only)
+ `grouping_fields` (object)
  A map of the fields and their values that were used for the grouping of this error. Long field values may be truncated. The specific fields included in this response are dependent on the `grouping_reason`.
  + Sample
    + lineNumber: 5
    + errorClass: ErrorClass

+ `discarded`: `true` (boolean)

  Whether future Events for this error are being discarded.

## ElasticSearchEventApiView
+ id: 595301a6ae48dd0018aedd61 (string)
+ is_full_report: false (boolean)
+ url: https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/events/515fb9337c1074f6fd000001 (string)
+ project_url: https://api.bugsnag.com/projects/74f6fd000001515fb9337c10 (string)
+ error_id: 515fb9337c1074f6fd000001 (string) - The Error this Event is an occurrence of
+ received_at: `2017-04-19T09:16:50.000Z` (string) - The time the Bugsnag [error reporting API](https://docs.bugsnag.com/api/error-reporting/) was notified of this Event
+ exceptions (array[object]) - An array of exceptions that occurred during this event. Most of the time there will only be one exception, but some languages support "nested" or "caused by" exceptions. The first item in the array represents the outermost exception. Each subsequent item represents the exception that caused the preceding one.
    + error_class: NoMethodError (string)
    + message (string)
+ severity (SeverityOptions)
+ unhandled: true (boolean, optional) - Whether or not the event was from an unhandled exception
+ context: `users#show` (string) - This refers to the action that was happening
when the event occurred.
+ app (object)
    + releaseStage: production (string) - release stage where this Event occurred
    + type: `rails` (string)
      The application type, such as a web framework or mobile platform, for example "rails" or "android".

## `_EventExceptionStacktrace`
+ `line_number`: 1234 (number) - The line of the file that this frame of the stack was in.
+ `column_number` (string, optional) - The column of the file that this frame of the stack was in.
+ file: `controllers/users_controller.rb` (string) - The file that this stack frame was executing
+ `in_project`: true (boolean) - Indicates if this stack trace line is in the project's application code (true) or form a 3rd party library (false).
+ `code_file`: `filename.xyz` - Path of the code file for the module referenced.
+ `address_offset`: `0x5` - Offset of the frame's return address from the base of the line, function, or module in a minidump.
+ `macho_uuid` (string, optional)
+ `relative_address`: `0x5` - Offset of the frame's return address from the base of the line, function, or module.
+ `frame_address`: `0x5` - The frame's return address from the base of the line, function, or module in a minidump.
+ method: `set_user_id` (string) - The method that this particular stack frame is within.
+ `source_control_link` (string, optional) - A link to the affected line of code in source control.
+ `source_control_name`: github (string, optional) - The name of the source control service being used.
+ code (object) - The code in the file surrounding this line, with up to three lines on either side of the line that crashed.

  + Sample
      + 1231: "  def a"
      + 1232: ""
      + 1233: "    if problem?"
      + 1234: "      raise 'something went wrong'"
      + 1235: "    end"
      + 1236: ""
      + 1237: "  end"

## `_CoreFrameFields`
+ lineNumber: 1234 (number) - The line of the file that this frame of the stack was in.
+ columnNumber (string, optional) - The column of the file that this frame of the stack was in.
+ file: `controllers/users_controller.rb` (string) - The file that this stack frame was executing
+ inProject: true (boolean) - Indicates if this stack trace line is in the project's application code (true) or form a 3rd party library (false).
+ `codeFile`: `filename.xyz` - Path of the code file for the module referenced.
+ `addressOffset`: `0x5` - Offset of the frame's return address from the base of the line, function, or module in a minidump.
+ `relativeAddress`: `0x5` - Offset of the frame's return address from the base of the line, function, or module.
+ `frameAddress`: `0x5` - the frame's return address from the base of the line, function, or module in a minidump.
+ method: `set_user_id` (string) - The method that this particular stack frame is within.
+ type: `reactnativejs`, `ruby`, `c` (string, optional) - The type of the stackframe. This may be different for each stackframe, for example when the error occures in native extension of a scripting language.
+ `source_control_link` (string, optional) - A link to the affected line of code in source control.
+ `source_control_name`: github (string, optional) - The name of the source control service being used.
+ code (object) - The code in the file surrounding this line, with up to three lines on either side of the line that crashed.

  + Sample
      + 1231: "  def a"
      + 1232: ""
      + 1233: "    if problem?"
      + 1234: "      raise 'something went wrong'"
      + 1235: "    end"
      + 1236: ""
      + 1237: "  end"

## `_EventException`
+ errorClass: NoMethodError (string)
+ message: undefined method `foo` for nil:NilClass (string)
+ type: `browserjs` (string) - The type of the exception. `null` if not recorded.
+ stacktrace (array[`_EventExceptionStacktrace`]) - An array of stack trace objects. Each object represents one line in the exception's stack trace. Bugsnag uses this information to help with error grouping, as well as displaying it to the user.
+ registers (array[`_EventExceptionRegister`]) - An array of register details for minidump stackframes.

## `_EventExceptionRegister`
+ `frame_index`: `1` (number) - The index of the frame in the stacktrace that the registers apply to
+ `register_values`: (array[`_EventExceptionRegisterValue`]) - Details of a register

## `_EventExceptionRegisterValue`
+ `register_name`: `reg` (string) - The name of the register
+ `register_value`: `0x1012d41a40dd145f` (string) - The value of the register

## `_EventThread`
+ id: `1` (number) - The id of the thread in the application.
+ name: `main` (string) - A human readable name for the thread.
+ type: `ruby` (string) - The type of the thread
+ stacktrace (array[`_CoreFrameFields`]) - An array of stack trace objects. Each object represents one line in the exception's stack trace. Bugsnag uses this information to help with error grouping, as well as displaying it to the user.
+ error_reporting_thread: `true` (boolean) - Indicates if this is the thread from which the error was reported.
+ state: `TH_STATE_RUNNING` (string, optional) - The state of the thread

## `_Breadcrumb`
+ name: `Open menu` (required, string)
    A short summary describing the event, such as the user action taken or a new application state.

+ type: (required, enum)
    A category which describes the breadcrumb, from the list of allowed values.
    + members
        + `navigation` - Changing screens or content being displayed, with a defined destination and optionally a previous location.
        + `request` - Sending and receiving requests and responses.
        + `process` - Performing an intensive task or query.
        + `log` - Messages and severity sent to a logging platform.
        + `user` - Actions performed by the user, like text input, button presses, or confirming/cancelling an alert dialog.
        + `state` - Changing the overall state of an app, such as closing, pausing, or being moved to the background, as well as device state changes like memory or battery warnings and network connectivity changes.
        + `error` - An error which was reported to Bugsnag encountered in the same session.
        + `manual` - User-defined, manually added breadcrumbs.

+ timestamp: `2016-07-19T12:17:27.000Z`  (required, string)

    The time at which the event occurred, in [ISO 8601
    format](https://tools.ietf.org/html/rfc3339#section-5.8).

+ `metaData`: (object) - An object containing extra information about a breadcrumb

## `_EventRequest`
+ url: `http://example.com/users/19/settings` (string, optional)
    The URL the request was made to
+ clientIp: `192.168.44.0` (string, optional)
    The IP making the request
+ httpMethod: `PUT` (string, optional)
    The HTTP method used for the request
+ referer: `http://example.com?q=awesome` (string, optional)
    The URL referring the user
+ headers (object, optional)
    Hash of headers sent with the request
+ params (object, optional)
    Hash of parameter sent with the request

## `_EventDevice`

+ id: `fd124e87760c4281aef` (string, optional)
    A unique identifier for the device.
+ hostname: `web1.internal` (string, optional)
    The hostname of the server running your code, if applicable.
+ manufacturer: `LGE` (string, optional)
    The manufacturer of the device.
+ model: `Nexus 6P` (string, optional)
    The model of the device.
+ modelNumber: `600` (string, optional)
    The model number of the device.
+ osName: `android` (string, optional)
    The device's operating system name.
+ osVersion: `8.0.1` (string, optional)
    The device's operating system version.
+ freeMemory: `183879616` (number, optional)
    The number of bytes unused in the device's RAM.
+ totalMemory: `201326592` (number, optional)
    The number of total bytes in the device's RAM.
+ freeDisk: `13478064128` (number, optional)
    The number of unused bytes on the drive running the application.
+ browserName: `Chrome` (string, optional)
    If a web application, the web browser used by the device.
+ browserVersion: `61.0.3163.100` (string, optional)
    If a web application, the version of the browser used by the device.
+ jailbroken: `false` (boolean, optional)
    Whether or not the device has been modified to give users root access.
+ orientation: `portrait` (string, optional)
    The orientation of the device at the time of the error.
+ locale (string, optional)
    The locale of the device
+ charging (boolean, optional)
    Whether the device was charging
+ batteryLevel (number, optional)
    The battery level of the device as a decimal
+ time: `2018-08-07T10:16:34.564Z` (string, optional)
    The time at which the error occurred, in [ISO 8601
    format](https://tools.ietf.org/html/rfc3339#section-5.8).
+ timezone (string, optional)
    The timezone in which the error occurred
+ cpuAbi: `x86_64` (array[string], optional)
    The [ABIs](https://developer.android.com/ndk/guides/abis) supported by the device (Android only).
+ runtimeVersions (object, optional)
    Hash of the versions of the relevant runtimes, languages and/or frameworks for the platform.
+ macCatalystIosVersion: `13.5` (string, optional)
    The Mac Catalyst version (iOS only).

## `_EventApp`
+ id: `com.bugsnag.android.example.debug` (string)
    A unique ID for the application.
+ version: `1.1.3` (string)
    The version number of the application which generated the error.
+ versionCode: `12` (number)
    The [version
    code](https://developer.android.com/studio/publish/versioning.html) of the
    application (Android only)
+ bundleVersion: `1.0.2` (string)
    The [bundle version/build number](https://developer.apple.com/library/content/technotes/tn2420/_index.html)
    of the application (iOS/macOS/tvOS only)
+ codeBundleId: `1.0-1234` (string)
    A unique identifier to identify a code bundle release when using tools like
    CodePush (mobile only).
+ buildUUID: `BE5BA3D0-971C-4418-9ECF-E2D1ABCB66BE` (string)
    A build ID that is required to identify a specific build when the version
    and version code are the same.
+ releaseStage: `staging` (string)
    The release stage that this error occurred in, for example "development",
    "staging" or "production".
    + default: `production`
+ type: `rails` (string)
    The application type, such as a web framework or mobile platform, for example "rails" or "android".
+ dsymUUIDs: `e6173678256785afd940392abee` (array[string])
    The UUIDs of the [debug symbols file](http://lldb.llvm.org/symbols.html)
    corresponding to this application, if any.
+ duration: `1275` (number)
    How long the app has been running for in milliseconds.
+ durationInForeground: `983` (number)
    How long the app has been in the foreground of the device in milliseconds.
+ inForeground: `true` (boolean)
    Whether or not the app was in the foreground when the error occurred.
+ isLaunching: `false` (boolean)
    Whether or not the application was still in the process of launching when the event was created.
+ binaryArch: `x86_64` (enum[string])
    The architecture of the running binary (Android only).
    + members
        + `x86` - x86/i386 (32-bit).
        + `x86_64` - x86 (64-bit).
        + `arm32` - armeabi/armeabi-v7a (32-bit).
        + `arm64` - arm64-v8a (64-bit).
        + `amd64` - amd64 (64-bit).
+ runningOnRosetta: `true` (boolean)
    Whether or not the application was running through Rosetta (iOS only).

## `_EventUser`

+ id: `19` (string)
    A unique identifier for a user affected by this event. This could be any
    distinct identifier that makes sense for your application/platform.
+ name: `Robert Hawkins` (string)
    The user's name, or a string you use to identify them.
+ email: `bob@example.com` (string)
    The user's email address.

## `_EventCorrelation`
+ traceId: `6368f07a518fa064ce036bdb` (string)
    The ID of the OTel trace during which this event occurred
+ spanId: `6368f07a518fa064ce036bdb` (string)
    The ID of the OTel span during which this event occurred

## EventApiView

+ id: 595301a6ae48dd0018aedd61 (string)

+ url: `https://api.bugsnag.com/projects/74f6fd000001515fb9337c/events/515fb9337c1074f6fd000765` (string)

  The URL for the event

+ project_url: https://api.bugsnag.com/projects/74f6fd000001515fb9337c10 (string)

+ is_full_report: false (boolean)

+ error_id: 515fb9337c1074f6fd000001 (string)

  The Error this Event is an occurrence of

+ received_at: `2017-04-19T09:16:50.000Z` (string)

  The time the Bugsnag [error reporting API](https://docs.bugsnag.com/api/error-reporting/) was notified of this Event

+ exceptions (array[`_EventException`])

  An array of exceptions that occurred during this event. Most of the time there will only be one exception, but some languages support "nested" or "caused by" exceptions. The first item in the array represents the outermost exception. Each subsequent item represents the exception that caused the preceding one.

+ threads (array[`_EventThread`])

  An array of the threads running when this event was reported.

+ metaData (object)

  Custom metadata passed with the event manually or via the notifier library. The API preserves the original casing and key format as received.

+ request (`_EventRequest`)

+ app (`_EventApp`)

  Information about the application that reported the event.

+ device (`_EventDevice`)

  Information about the device the error occurred on.

+ user (`_EventUser`)

  Information about the user that reported the event. This field can be sent in with extra metadata, and thus may return keys alongside those documented here.

+ breadcrumbs (array[`_Breadcrumb`])

  An array of user- and system-initiated events which led up to an error, providing additional context. This list is sequential and ordered newest to oldest.

+ context: `users#show` (string)

  This refers to the action that was happening when the event occurred.

+ severity (SeverityOptions)

+ unhandled: true (boolean, optional)

  Whether or not the event was from an unhandled exception.

+ `missing_dsym`: true (boolean, optional)

  Whether or not there's a missing dsym (only included in response if event includes a dsym_uuid).

+ correlation (`_EventCorrelation`)

  Information about the trace and span linked to the event.

+ `feature_flags` (array[`_FeatureFlagSummary`])

  Feature flags and variants that were active when the event occurred.



## `_FeatureFlagSummary`

+ `feature_flag_name`: `share_ios_photo_sharing_button` (string)

  The name of the feature_flag.

+ `feature_flag_id`: `5f688f55d1befa016c94de00` (string)

  The ID of the feature_flag.

+ `variant_name`: `blue_button` (string, optional)

  The name of the variant if present.

+ `variant_id`: `173c8f55d1befa016c94df1c` (string, optional)

  The ID of the variant if present.


## EventSourceMapFailureApiView
+ reason: `missing-js` (enum[string]) - reason for failure; see https://smartbear.atlassian.net/wiki/spaces/EN/pages/3284884918/ROAD-116+Help+Users+With+Source+Maps+Pipeline+Design
  + Members
    + `missing-js`
    + `missing-uploaded-js`
    + `missing-source-map-link`
    + `missing-source-map`
    + `incorrect-source-map`
+ has_uploaded_source_maps_for_project: true (boolean)
  whether the project has any source maps uploaded at the time the event was processed
+ has_uploaded_source_maps_for_version: false (boolean)
  whether there were any source maps uploaded for the event's version at the time
+ is_local_minified_url: false (boolean, optional) - whether the minified URL has been detected as local
+ source_map_url: `http://example.com/app.min.js.map` (string, optional) - source map URL for invalid stackframe
+ file_url: `http://example.com/app.min.js` (string, optional)
  file/URL associated with the stackframe that had a source map failure
+ platform: android (enum[string], optional) - Whether the source map relates to an ios or android build (React Native projects only).
    + ios
    + android
+ release_variant: dev (enum[string], optional) - The release variant for the missing source map (React Native projects only).
    + dev
    + release

## Integration

+ key: jira (string) - The key to uniquely identify the integration service.
+ name: Jira (string) - The name of the integration service.
+ url: https://www.atlassian.com/software/jira (string) - The URL of the integration service.
+ type: `issue-tracker` (enum[string])

  The type of the integration service.

  + Members
    + `issue-tracker` - An issue tracker integration. Used for creating and linking issues to Bugsnag errors.
    + `team-notification` - A team communication tool integration. Used for alerting engineering teams when errors are reported to Bugsnag.
    + `on-call` - An on call integration. Used for alerting ops teams when errors are reported to Bugsnag.
    + `data-forwarding` - A data forwarding integration. Used for forwarding detailed error data when errors are reported to Bugsnag.

+ `two_way_sync`: true (boolean) - Whether the integration supports two-way sync.
+ description (string) - A brief explanation of what the integration does.
+ actions(IntegrationActions) - Descriptions of the various actions supported by the integration.
+ fields (array[IntegrationField]) - The fields required to configure the integration.
+ `icon_url` (string) - A URL containing an icon representing the service.
+ `created_entity_name` (string) -  A noun representing the entity that this integration can create (for issue-tracker type integrations only).
+ `issue_automation_options` (optional, array[IntegrationAutomation]) - Automation settings (for `issue-tracker` integrations only).

## DefaultErrorViewsApiView (object)
+ `name`: `Unhandled errors` (string, required) - The name of the error view
+ `project_id`: `515fb9337c1074f6fd000007` (string, required) - The project this relates to
+ `user_id`: `605fb9337c1011f6fd000123` (string, required) - The user this relates to
+ `position`: `1` (number, required) - The position this error view should be displayed, 1-indexed
+ `configuration` (DefaultErrorViewsConfiguration)
+ `filters` (Filters)

## DefaultErrorViewsConfiguration (object)
+ `events_since`: `30d` (string) - The time scope of the error view
+ `sort`: `events` (enum[string]) - What to sort the view on, for default error views will only be
    + `events`
+ `basic_filter` (ErrorViewsConfigurationBasicFilter, required) - The filter to be applied for this view

## ErrorViewsApiView (object)
+ `id`: `502fb9236c1f74f6fd0ba123` (string, required) - The id of the error view
+ `project_id`: `515fb9337c1074f6fd000007` (string, required) - The project this relates to
+ `user_id`: `605fb9337c1011f6fd000123` (string, required) - The user this relates to
+ `position`: `1` (number, required) - The position this error view should be displayed, 1-indexed
+ `configuration` (ErrorViewsConfiguration)
+ `filters` (Filters)

## ErrorViewsConfiguration (object)
+ `events_since`: `30d` (enum[string]) - The time scope of the error view
    + `all`
    + `30d`
    + `7d`
    + `1d`
    + `3h`
    + `1h`
+ `sort`: `events` (enum[string]) - What to sort the view on
    + `users`
    + `events`
+ `saved_search_summary` (ErrorViewsConfigurationSavedSearchSummary, optional) - Summary of the saved search used for this view. If not supplied, basic filter will be used.
+ `basic_filter` (ErrorViewsConfigurationBasicFilter, optional) - The filter to be applied for this view if not filtering on a saved search.

## ErrorViewsConfigurationSavedSearchSummary (object)
+ `id`: `502fb9236c1f74f6fd0ba168` (string, required) - The ID of the saved search
+ `name`: `My Saved Search` (string, optional) - The name of the saved search if the saved search exists
+ `shared`: `true` (boolean, optional) - Whether the saved search is shared with other collaborators if the saved search exists

## ErrorViewsConfigurationBasicFilter (object)
+ `unhandled_states` (array[string], optional, nullable) - The type of state to filter on (no filtering if parameter null) containing one or both of
    + `unhandled`
    + `handled`
+ `severities` (array[string], optional, nullable) - The severities to filter by (no filtering if parameter null) containing one or many of
    + `error`
    + `warning`
    + `info`
+ `error_statuses` (array[string], optional, nullable) - The error status to filter by (no filtering if parameter null) containing one of
    + `new` - "Introduced Today"
    + `open`
    + `for_review`
    + `open_assigned_to_me` - Errors in an open status that are assigned to the current user
    + `open_assigned_to_anyone` - Errors in an open status that are assigned to any user
    + `open_issue_created` - Errors in an open status that have an issue linked to them
    + `fixed`
    + `snoozed`
    + `ignored`

## ErrorViewsRequest (object)
+ `configuration` (object, required)
    + `events_since`: `30d` (enum[string]) - The time scope of the error view
        + `all`
        + `30d`
        + `7d`
        + `1d`
        + `3h`
        + `1h`
    + `sort`: `events` (enum[string]) - What to sort the view on
        + `users`
        + `events`
    + `saved_search_id` (string, optional) - ID for a saved search to use as the filter. If not supplied, basic filter will be used.
    + `basic_filter` (ErrorViewsConfigurationBasicFilter, optional) - The filter to be applied for this view if not filtering on a saved search.

## ErrorViewsUpdateRequest (object)
+ `position`: `1` (number, optional)
+ `configuration` (object, optional)
    + `events_since`: `30d` (enum[string], optional) - The time scope of the error view
        + `all`
        + `30d`
        + `7d`
        + `1d`
        + `3h`
        + `1h`
    + `sort`: `events` (enum[string], optional) - What to sort the view on
        + `users`
        + `events`
    + `saved_search_id` (string, optional) - ID for a saved search to use as the filter.
    + `basic_filter` (ErrorViewsConfigurationBasicFilter, optional) - The filter to be applied for this view if not filtering on a saved search.

## IntegrationActions

+ `create`: Create a Trello card (string) - Description of creating an entity in the integrated service (e.g. an issue tracker ticket).
+ `view`: View in Trello (string, optional) - Optional description of viewing an entity in the integrated service.
+ `object`: Trello Card (string, optional) - Optional the name of a single entity in the integrated service.
+ `new`: Add Amazon SQS queue (string, optional) - Optional description of adding an entity to the service to receive data (e.g. a stream, a queue, a webhook url).

## IntegrationAutomation

+ `automation_style` (IntegrationAutomationStyle) - The style of this automation. Most integrations have a single 'default' style but some can have multiple.
+ `error_new` (IntegrationAutomationItem) - Options for automations when a new error is received by Bugsnag.
+ `error_fixed` (optional, IntegrationAutomationItem) - Options for automations when an error is marked as fixed in Bugsnag.
+ `error_reopened` (optional, IntegrationAutomationItem) - Options for automations when an error is reopened in Bugsnag.
+ `issue_resolved` (optional, IntegrationAutomationItem) - Options for automations when an issue is resolved in a configured issue tracker.
+ `issue_unresolved` (optional, IntegrationAutomationItem) - Options for automations when an issue is unresolved in a configured issue tracker.

## IntegrationAutomationItem

+ `configurable` (optional, boolean) - True if this automation has configuration options.
+ `options` (optional, array[string]) - Possible values for the state that may be selected.
+ `default_option` (optional, boolean) - Default state for the item (only applicable if `multiple_states` is false)
+ `default_options` (optional, array[string]) - Default set of states for the item (only applicable if `multiple_states` is true)
+ `multiple_states` (optional, boolean) - True if multiple states can be selected for this automation.

## IntegrationAutomationStyle

+ `type`: default (string) - A type of the integration automation (unique within an integration).
+ `description` (optional, string) - A description of the automation style.

## IntegrationField

+ name: password (string) - The unique name of the field.
+ label: JIRA Password (string) - The human readable name of the field.
+ description: Your JIRA password (string) - The human readable description of the field.
+ link (optional, string) - A URL that helps with finding the value associated with the field.
+ optional (optional, boolean) - True if the field is optional for an integration (defaults to false).
+ `default_value` (optional, string) - The default value of the field if the field is optional.
+ `allowed_values` (optional, array[string]) - An array of values that are permitted for the field (required when the `type` is `select` only).
+ type: password (optional, enum[string])

  The input type of the field (defaults to text input if not provided).

  + Members
    + password - A string value but a dummy value will be returned after it is initially saved. Intended for sensitive information.
    + select - An option to select one of the `allowed_values`.
    + boolean - A boolean value either 'true' or 'false'.
    + toggle - An option to toggle between one of the `allowed_values`

+ value (optional, string) - The value of the field (not present when retrieving general information about fields for an integration).
+ pattern (optional, string) - The regular expression pattern which values are required to match if supplied.
+ deprecated (optional, boolean) - True if the field is deprecated and should not be used.
+ conditions (optional, array[IntegrationFieldCondition]) - An array of conditions that must be met for the field to be submitted.

## IntegrationFieldCondition

+ `field`: `authenticationType`(enum[string]) - The field that needs to be compared.
    + Members
        + `authenticationType` - The type of authentication being used
+ `value`: `IAM Role`(string) - The value the compared field needs to be set to.

## IssueAutomationSettings

+ `automation_style_type` (string) - The identifier for the style type of the automation settings. For most integrations there is only one called 'default'.
+ `error_fixed` (IssueAutomationSetting) - Automation settings for when an error is marked as fixed in Bugsnag.
+ `error_reopened` (IssueAutomationSetting) - Automation settings for when an error is reopened in Bugsnag.
+ `issue_resolved` (IssueAutomationSetting) - Automation settings for when an issue is transitioned to resolved in the issue tracker.
+ `issue_unresolved` (IssueAutomationSetting) - Automation settings for when an issue is transitioned to unresolved in the issue tracker.

## IssueAutomationSetting

+ `active`: true (boolean) - True if this automation is active (enabled).
+ `state`: fixed (optional, string) - The state that the issue should be transitioned to when the automation is triggered (required for `error_fixed` and `error_reopened`).
+ `states` (optional, array[string]) - The states that when an issue is transitioned to should cause the Bugsnag issue to change status correspondingly (required for `issue_resolved` and `issue_unresolved`).

## PivotApiView
+ `event_field_display_id`: `app.release_stage` (string, required) - the ID of the Event Field that this Pivot describes
+ name: Release Stages (string, required)
+ cardinality: 2 (number) - how many unique values of the given Event Field are present in the Events matching the provided Filters. For example, in the case of the `app.release_stage` Pivot, if the Events matching the provided Filters occurred only in production and staging, then the cardinality would be 2.  Applicable to some Event Fields.
+ summary - A summary of the top values for this Pivot. Applicable to some Event Fields.
  + list (array) - A list of the values of the Event Field which have had the most occurrences. The data in this list along with the `no_value` and `other` properties will account for all of the occurrences of the Event that match the Filters.
      + (object)
          + value: production (string) - A particular value for the given Event Field
          + events: 34 (string) - The number of Events that matched the provided Filters that had this value for the given Event Field
  + `no_value`: 0 (number) - The number of Events that matched the provided Filters that had no value for the given Event Field
  + other: 0 (number) - The number of Events that matched the provided Filters that had a value for the given Event Field other than those described in `list`
+ average: 1000 (number, nullable) - The average value for the given Event Field. Applicable to some Event Fields. This will be null if there is no average value (if there are no values to be averaged).

## PivotValueApiView
+ `event_field_value`: production (string, required) — One of the values for this event field. For example, for the release stage event field, the values will be the stage names; for versions they will be the version number; for users they will be the user IDs, and so on.
+ events: 23 (number) - The number of Events matching the given Filters that affected this particular value of the pivot. For example, how many events occurred in the production release stage.
+ proportion: 0.9981631153563556 (number) - the proportion of the total Events matching the Filters represented by this value.
+ `first_seen`: `2017-04-14T03:04:49+00:00` (string) - the first Event occurrence with this particular value and matching the Filters (including time filters)
+ `last_seen`: `2017-04-21T02:50:35+00:00` (string) - the last Event occurrence with this particular value and matching the Filters (including time filters)
+ fields (array, optional) - some pivot values will include additional event field values. for example, in the case of a pivot value describing how many events affected a particular user, fields will contain the values of the `user.name` and `user.email` event fields, to provide more details about the user.
    + Sample
      + (object)
          + id: `user.name` (string)
          + name: User Name (string)


## PivotChildValueApiView
+ `value`: production (string, required) — One of the values for this event field. For example, for the release stage event field, the values will be the stage names; for versions they will be the version number; for users they will be the user IDs, and so on.
+ events: 23 (number) - The number of Events matching the given Filters that affected this particular value of the pivot. For example, how many events occurred in the production release stage.
+ proportion: 0.9981631153563556 (number) - the proportion of the total Events matching the Filters represented by this value.
+ `first_seen`: `2017-04-14T03:04:49+00:00` (string) - the first Event occurrence with this particular value and matching the Filters (including time filters)
+ `last_seen`: `2017-04-21T02:50:35+00:00` (string) - the last Event occurrence with this particular value and matching the Filters (including time filters)

## FeatureFlag

+ `id`: `515fb9337c1074f6fd000007` (string, required)

    The ID of the feature flag.

+ `name`: `share_ios_photo_sharing_button` (string, required)

    The name of the feature flag.

+ `first_seen`: `2021-06-01T13:00:00.000Z` (string, required)

    The date and time that the feature flag was first seen in the requested release stage (regardless of retention).

+ `is_starred`: `true` (boolean, required)

    Whether the feature flag is starred for the current user.

+ `is_active`: `true` (boolean, required)

    Whether the feature flag is one that has been seen in events in the requested release stage in the last 7 days.

+ `variant_summary` (FeatureFlagVariantSummary, optional)

    A summary of the variants for the feature flag, only present if requested.

## FeatureFlagVariantSummary

+ `variant_count`: `10` (number, required)

    The number of variants that have been seen on this feature flag in the requested release stage.

+ `first_variant_name`: `blue_button` (string, optional)

    The name of the first variant (alphabetically) that has been seen on this feature flag in the requested release stage.

## FeatureFlagSummary

+ `id`: `515fb9337c1074f6fd000007` (string, required)

    The ID of the feature flag.

+ `name`: `share_ios_photo_sharing_button` (string, required)

    The name of the feature flag.

## FeatureFlagErrorSummary

+ `errors_seen`: 3 (number, required)

    The number of errors seen on this feature flag.

+ `exclusive_errors`: 2 (number, required)

    The number of errors exclusively seen on this feature flag.

+ `last_seen`: `2017-04-21T02:50:35+00:00` (string, required)

    The last time an error was received on this feature flag.

## FeatureFlagVariantErrorSummary

+ `variant_id`: `515fb9337c1074f6fd000007` (string, required)

    The ID for this variant.

+ `errors_seen`: 3 (number, required)

    The number of errors seen for this variant.

+ `exclusive_errors`: 2 (number, required)

    The number of errors exclusively seen for this variant.

+ `last_seen`: `2017-04-21T02:50:35+00:00` (string, required)

    The last time an error was received for this variant.

## FeatureFlagVariant

+ id: `515fb9337c1074f6fd000007` (string, required)

    The ID of the variant.

+ name: `blue_button` (string, required)

    The name of the variant.

+ first_seen: `2017-04-21T02:50:35+00:00` (string, optional)

    The first the time variant was received regardless of retention. Only present if the `release_stage_name` parameter was provided and the Variant has been seen in that release stage.


## OrganizationBase

+ name: Acme Co. (string, required)
+ `billing_emails`: emily@example.com (array[string])
+ `auto_upgrade`: true (boolean, required) - whether we should upgrade your plan in response to the organization reaching its plan limit of events. If this value is `false` your events will be throttled when you reach your plan limit.

## OrganizationApiView (OrganizationBase)

+ id: 515fb9337c1074f6fd000007 (string, required)
+ slug: `acme-co` (string, required)
+ api_key: ac21b75c8b74c472cbdb74d6fcd475660d (string) - The notifier API used to send traces to this organization.
+ creator (object)
    + email: emily@example.com (string)
    + id: 58c9b9b09ef17217f1fb8b30 (string)
    + name: James Smith (string)
+ `collaborators_url`: `https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/collaborators` (string)
  API URL for the Organization's Collaborators.

+ `projects_url`: `https://api.bugsnag.com/organizations/515fb9337c1074f6fd000007/projects` (string)
  API URL for the Organization's Projects.

+ `created_at`: `2017-04-24T22:17:13.000Z` (string, required)
+ `updated_at`: `2017-04-24T22:17:13.000Z` (string, required)
+ `upgrade_url`: `http://app.bugsnag.com/settings/acme-co/plans-billing/select-plan` (string)

## CustomFiltersApiView
+ `custom_error_filters`:
    + `per_project`: 10 (number, required) - The number of custom filters your organization is allowed to create per
        project. A number greater than 0 means your organization currently has access
        to the custom filters feature.
    + `arrays_per_project`: 1 (number, required)
        The number of array custom filters the organization is allowed to
        create per project
+ `custom_trace_filters` (object) - The custom trace filter limits for the organization
    + `per_project`: 10 (number, required) - The number of custom trace filters the organization is allowed to create per
        project. A number greater than 0 means the organization currently has access
        to the custom trace filters feature.

## OrganizationSummaryApiView

+ `id`: `515fb9337c1074f6fd000007` (string, required)
+ `name`: `Acme Co.` (string, required)
+ `slug`: `acme-co` (string, required)
+ `collaborators_count`: `3` (number, required)
+ `is_admin`: true (boolean, required)

## OrganizationUpdateRequest (OrganizationBase)

+ `invoice_address`: Vendor ID number 4567 (string) - Additional information to print on your invoice
+ `invoice_info`: Vendor ID number 4567 (string) - Deprecated field. Use `invoice_address`


## PreviewPlanRequest

+ `at_time` (string, optional) - The time at which the invoice is expected. Used to account for any price changes that may occur.
+ `address` (PreviewPlanRequestAddress, optional) - The address info if the organization isn't already linked to Stripe
+ `performance_plan_type` (string, optional) - The type of the performance plan to preview.

## PreviewPlanRequestAddress

+ `line1`: `Goldman Sachs and Co. LLC` (string, required) - The first line of the address
+ `line2`: `200 West Street, 29th Floor` (string, optional) - The second line of the address
+ `city`: `New York` (string, optional) - The address city
+ `state`: `NY` (string, optional) - The address state
+ `country`: `US` (string, required) - The ISO 3166-1 alpha-2 country code
+ `postal_code`: `10282` (string, optional) - The postal code of the address

## PlanPreviewApiView

+ `tax_in_cents`: 100 (number) - The calculated sales tax based on the address provided or recorded by Stripe
+ `subtotal_in_cents`: 1000 (number) - The cost of the plan before tax
+ `amount_due_in_cents`: 950 (number) - The amount due
+ `total_in_cents`: 1100 (number) - The total including tax


## PlanApiView

+ type: team_one (string, required) - The unique identifier for this plan
+ group: team (string) - The group type for this plan
+ trial: false (boolean, required) - Whether this plan is a Trial plan
+ name: Team Plan Two (string, required) - The name of this plan
+ interval: month (string, required) - The billing interval for this plan
+ `amount_in_cents`: 24900 (number, required) - The cost of the plan in cents per billing interval
+ `fixed_amount`: true (boolean, required)  - Whether the cost of the plan is a fixed amount. A `false` value means that the `amount_in_cents` will be multiplied by some other number, e.g. seat count, to determine the monthly cost.
+ `offline_billing`: false (boolean, required) - A `false` value means we charge for this plan via a credit card on file. A `true` value means the plan is billed via an invoice, the plan is free, or it is charged by an upstream billing provider.
+ `seat_limit`: 30 (number) - The maximum number of collaborators allowed on this plan
+ `event_storage_seconds`: 3888000 (number) - The data retention period for this plan, in seconds.
+ `events`: 15000 (number) - The limit of events that will be processed by Bugsnag for an organization on this plan.
+ `events_per_month`: 450000 (number) - The nominal monthly number of events to display for this plan
+ `event_interval`: day (string) - The period type over which the plan limit of events applies.
+ `event_interval_count`: 1 (string) - The number of event intervals over which the plan limit of events applies.
+ `auto_upgradeable`: true (boolean, required) - Whether there is another related plan that an organization on this plan can be moved to if it reaches its event limit. Note that this is different from an organization's auto-upgrade preference — an organization can still opt not to auto-upgrade even if the plan is auto-upgradeable.

## PerformancePlanApiView

+ type: team_one (string, required) - The unique identifier for this plan
+ group: team (string) - The group type for this plan.
+ trial: false (boolean, required) - Whether this plan is PerformanceTrialPlan.
+ name: Team Plan Two (string, required) - The name of this plan
+ interval: month (string, required) - The billing interval for this plan.
+ `amount_in_cents`: 24900 (number, required) - The cost of the plan in cents per billing interval
+ `offline_billing`: false (boolean, required) - A `false` value means we charge for this plan via a credit card on file. A `true` value means the plan is billed via an invoice, the plan is free, or it is charged by an upstream billing provider.
+ `spans_per_day`: 3000000 (number) - The maximum number of spans that can be sent per day
+ `spans_per_month`: 91500000 (number) - The nominal monthly number of spans to display for this plan
+ `max_retention_seconds`: 2592000 (number) - The maximum retention period for this plan, in seconds.

## SubscriptionPerformancePlanApiView

+ type: team_one (string, required) - The unique identifier for this plan
+ group: team (string, optional) - The group type for this plan. Only returned with admin permissions.
+ trial: false (boolean, optional) - Whether this plan is PerformanceTrialPlan. Only returned with admin permissions.
+ name: Team Plan Two (string, required) - The name of this plan
+ interval: month (string, optional) - The billing interval for this plan. Only returned with admin permissions.
+ `amount_in_cents`: 24900 (number, optional) - The cost of the plan in cents per billing interval. Only returned with admin permissions.
+ `offline_billing`: false (boolean, required) - A `false` value means we charge for this plan via a credit card on file. A `true` value means the plan is billed via an invoice, the plan is free, or it is charged by an upstream billing provider.
+ `spans_per_day`: 3000000 (number) - The maximum number of spans that can be sent per day
+ `spans_per_month`: 91500000 (number) - The nominal monthly number of spans to display for this plan
+ `max_retention_seconds`: 2592000 (number) - The maximum retention period for this plan, in seconds.

## InvoiceApiView

+ id: 515fb9337c1074f6fd000007 (string, required) - the ID of the invoice
+ date: `2017-04-04T22:43:49Z` (string, required) - the date when the invoice was issued
+ organization_id: 515fb9337c1074f6fd000003 (string, required)
+ address: 100 Zeroth St., San Francisco CA 94107 (string) - Any text you have provided in the "Additional invoice text" field in Bugsnag settings. We will print this text on your billing invoices. It is not used by Bugsnag as a mailing address.
+ status: paid (enum[string], required) - The status of the invoice.  Must be one of the following:
    + paid - the invoice has been paid
    + waived - the invoice is closed but it was not paid
    + unpaid - the invoice has not yet been paid and payment is still due
+ charged_card_last_4: 1234 (string) - The last four digits of the credit card used to pay this invoice
+ additional_info: Vendor ID number 4567 (string) - Additional information to print on your invoice
+ discount (object)
    + coupon: PROMO10 (string) - The name of the coupon
    + amount_off: 1000 (number) - Discount in cents (USD). Null if percentage coupon.
    + percent_off: 0 (number) - Discount in percent. Null if amount coupon.
+ sub_total: 24900 (number) - Invoice subtotal in integer cents (before discounts)
+ total: 23900 (number) - Invoice total in integer cents (amount charged)
+ currency: usd (string) - Currency type used for invoice.
+ tax: 230 (number, optional) - Tax paid on the invoice amount

## ProjectBase
+ name: Example Project (string)

+ `global_grouping` (array)

  A list of error classes. Events with these classes will be grouped by their
  class, regardless of the location that they occur in the Project's source
  code. Altering a Project's `global_grouping` will not cause existing errors
  to be regrouped.

  Note: In the UI this is referred to as grouping by error class.

  Example:

  ```
  ["foo", "bar"]
  ```

  + Members
    + *Redis::CannotConnectError*
    + *Mongo::Error:SocketError*

+ `location_grouping` (array)

  A list of error classes. Events with these classes will be grouped by their
  `context`. Altering a Project's `location_grouping` will not cause existing errors
  to be regrouped.

  Note: In the UI this is referred to as grouping by error context.

  + Members
    + *Timeout::Error*

+ `discarded_app_versions` (array)

  A list of app versions whose events will be [discarded](https://docs.bugsnag.com/product/event-usage/#discard-by-app-version) if received for the Project. Supports [regular expressions](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Special_characters_meaning_in_regular_expressions) and [semver ranges](https://github.com/npm/node-semver#ranges). Errors matching these versions won't be processed by Bugsnag, and you won't receive notifications about them.

  + Members
    + *alpha*
    + *< 2.2.2*
    + *3.0.0*

+ `discarded_errors` (array)

  A list of Error classes whose events will be [discarded](https://docs.bugsnag.com/product/event-usage/#discard-by-error-class) if received for the Project. Errors with these classes won't be processed by Bugsnag, and you won't receive notifications about them.

  + Members
    + *Example::Error*

+ `url_whitelist` (array)

  When configured, the script source of each error's innermost stack trace's top frame is checked. If the script was not served from a matching domain the error will not be processed by BugSnag and will be discarded.

  Provide a list of newline separated domain names. To match example.com and its subdomains specify *.example.com.

  Relevant to JavaScript Projects only.

  + Members
    + *example.com*

+ `ignore_old_browsers`: true (boolean)

  Whether the Events in the Project will be ignored if they originate from
  old web browsers.

  Relevant to JavaScript Projects only.

+ `ignored_browser_versions` (object)

  Relevant to JavaScript Projects only.

   A mapping a of browser name to browser version. If set, Events in the
   Project will be ignored if they originate from a browser specified here
   whose version is earlier than the given version.

    Keys must be one of the following strings: chrome, ie, firefox, safari, android, uc, opera, opera_mini, samsung, blackberry, sogou, other.

    Values must be a number indicating which which version to ignore up to (but not including), or one of the strings: `ignore_all`, `ignore_none`

    Example:

    ```
    {
        "chrome": "ignore_none",
        "safari": 6,
        "other": "ignore_all"
    }
    ```

+ `resolve_on_deploy`: true (boolean)

  If true, every error in the Project will be marked as 'fixed' after using the Deploy Tracking API to notify Bugsnag of a new production deploy.

  Applies to non-JavaScript Projects only.


## ProjectCreateRequest
+ name: `Example Project` (string, required) - The new Project's name. Note that the first character should not start with a '$'.
+ type: (ProjectType, required) - The new Project's framework type. Must be one of the following:
+ ignore_old_browsers: `true` (boolean, optional) - For javascript projects this will filter errors from older browsers

## ProjectType (enum)
### Members
+ `android`
+ `angular`
+ `asgi`
+ `aspnet`
+ `aspnet_core`
+ `backbone`
+ `bottle`
+ `cocos2dx`
+ `connect`
+ `django`
+ `dotnet`
+ `dotnet_desktop`
+ `dotnet_mvc`
+ `electron`
+ `ember`
+ `eventmachine`
+ `expo`
+ `express`
+ `flask`
+ `flutter`
+ `gin`
+ `go`
+ `go_net_http`
+ `heroku`
+ `ios`
+ `java`
+ `java_desktop`
+ `js`
+ `koa`
+ `laravel`
+ `lumen`
+ `magento`
+ `martini`
+ `minidump`
+ `ndk`
+ `negroni`
+ `nintendo_switch`
+ `node`
+ `osx`
+ `other_desktop`
+ `other_mobile`
+ `other_tv`
+ `php`
+ `python`
+ `rack`
+ `rails`
+ `react`
+ `reactnative`
+ `restify`
+ `revel`
+ `ruby`
+ `silex`
+ `sinatra`
+ `spring`
+ `symfony`
+ `tornado`
+ `tvos`
+ `unity`
+ `unrealengine`
+ `vue`
+ `watchos`
+ `webapi`
+ `wordpress`
+ `wpf`
+ `wsgi`
+ `other` - used for Projects that use a framework other than those listed above

## PerformanceDisplayType (enum)
### Members
+ `js`
+ `mobile`
+ `server`
+ `webserver_backend`
+ `webserver_frontend`
+ `webserver_mixed`
+ `unsupported`

## ProjectUpdateRequest (ProjectBase)
+ `collaborator_ids` (array, optional)

  If provided in the request, the Project will be updated so that its set of Collaborators will reflect those indicated by this list of ids. Existing Collaborators whose ids do not appear in the list will be removed from the Project.

  + Members
    + *515fb9337c1074f6fd000001*


## ProjectRole (enum)
+ `project_owner`
+ `project_member`

## StabilityTarget (object)
### Properties
+ value: 0.99 (number, required) - The target value of the proportion of unhandled_sessions/total_sessions.
+ updated_at: `2017-03-02T05:55:55.555Z` (string, nullable) - (Updated automatically) The time the target was last updated.
+ updated_by_id: `515fb9337c1074f6fd000001` (string, nullable) - (Updated automatically) The id of the collaborator that last updated the value.

## GenericTimelinePointWithUserSessions (object)
### Properties
  + bucket_start: `2019-03-02T00:00:00.000Z` (string) - The timestamp marking the beginning of the range for the timeline point.
  + bucket_end: `2019-03-03T00:00:00.000Z` (string) - The timestamp marking the end of the range for the timeline point.
  + total_sessions_count: 10000 (number) - The total number of sessions that occurred within the time range.
  + unhandled_sessions_count: 20 (number) - The number of unhandled sessions seen in the time range.
  + users_seen: 1000 (number) - The total number of users sessions that occurred within the time range.
  + users_with_unhandled: 2 (number) - The number of users experiencing an unhandled session seen in the time range.

## GenericTimelinePoint (object)
### Properties
  + bucket_start: `2019-03-02T00:00:00.000Z` (string) - The timestamp marking the beginning of the range for the timeline point.
  + bucket_end: `2019-03-03T00:00:00.000Z` (string) - The timestamp marking the end of the range for the timeline point.
  + total_sessions_count: 10000 (number) - The total number of sessions that occurred within the time range.
  + unhandled_sessions_count: 20 (number) - The number of unhandled sessions seen in the time range.
  + unhandled_rate: 0.002 (number) - The proportion of unhandled sessions to total sessions seen in the time range.

## ProjectStabilityTrendApiView (object)
+ project_id: 515fb9337c1074f6fd000001 (string)
+ release_stage_name: production (string) - The name of the primary release stage for the given project.
+ timeline_points (array[GenericTimelinePointWithUserSessions]) - Unhandled session information for each UTC day in the last 30 days.

## ProjectApiView (ProjectBase)
+ id: 515fb9337c1074f6fd000003 (string)
+ organization_id: 515fb9337c1074f6fd000007 (string)
+ type: (ProjectType)
+ performance_display_type: (PerformanceDisplayType)
+ slug: `example-project` (string)
  unique, human-readable identifier that can be used in place of `id` in URLs
+ `api_key`: deadbeef1234deadbeef1234deadbeef (string)
  the notifier API key used to configure the [notifier
  library](https://docs.bugsnag.com/platforms/) being used to report errors in
  the project
+ `is_full_view`: true (boolean)
  Always true for this endpoint. Used to differentiate between terse and complete project
  representations.
+ `release_stages` (array)
  The release stages for which this project has received events.
  This will be an array of strings whose values will depend on your Project.
  + Members
    + *staging*
    + *production*
+ language: ruby (string)
  The Project's programming language as derived from the framework represented in the `type` field
+ `created_at`: `2017-03-02T05:55:55.555Z` (string)
  The time of the Project's creation.
+ `updated_at`: `2017-03-03T05:55:55.555Z` (string)
  The time the Project was last modified.
+ `url`: `https://api.bugsnag.com/projects/515fb9337c1074f6fd000003` (string)
  The API URL for the Project.
+ `html_url`: `https://app.bugsnag.com/example-account/example-project` (string)
  The dashboard URL for the project.
+ `errors_url`: `https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/errors` (string)
  The API URL for the Project's Errors.
+ `events_url`: `https://api.bugsnag.com/projects/515fb9337c1074f6fd000003/events` (string)
  The API URL for the Project's Events.
+ `open_error_count`: 10 (number)
  The number of open errors the Project has. Considers all events currently stored
  for the Project.
+ `for_review_error_count`: 5 (number)
  The number of errors for review the Project has. Considers all events currently stored
  for the Project.
+ `collaborators_count`: 15 (number)
  The number of collaborators with access to the Project.
+ `teams_count`: 5 (number)
  The number of teams with access to the Project.
+ `custom_event_fields_used`: 5 (number)
  The count of how many [Custom Filters](https://docs.bugsnag.com/product/custom-filters/) have been created for the Project.
+ `ecmascript_parse_version`: (ECMAScriptParseDetails, optional)
  The details of the ECMAScript version used to parse JavaScript events. Only present for Browser JavaScript Projects.

## ECMAScriptParseDetails (object)
+ `value`: (ECMAScriptParseVersion, required) - The ECMAScript version used for the project.

## ECMAScriptParseVersion (enum)
### Members
+ `2018`
+ `2023`
+ `2024`
+ `latest`

## ProjectOverviews (array[ProjectOverview])

## ProjectOverview (object)
+ project (object, required)
    + id: 515fb9337c1074f6fd000001 (string, required)
    + name: `Some Project` (string, required)
    + slug: `some-project` (string, required)
    + type: `java` (string, required)
+ events (array, required)
    + (array, required)
      + `2017-03-28T00:00:00.000Z` (string, required)
      + 5 (number, required)
+ errors (object, required)
    + new (object, required)
        + current: 5 (number, required)
        + previous: 0 (number, required)
    + open (object, required)
        + current: 15 (number, required)
        + previous: 14 (number, required)

## ProjectUploads (object)
+ uploaded_source_maps: false (boolean, required)
+ uploaded_code_bundle_source_map: false (boolean, required)
+ uploaded_version_code_source_map: false (boolean, required)
+ uploaded_dsyms: false (boolean, required)
+ uploaded_so_mapping_files: false (boolean, required)
+ uploaded_proguard_files: false (boolean, required)
+ uploaded_breakpad_symbol_files: false (boolean, required)
+ uploaded_ndk_symbols: false (boolean, required)

## BrowserName (enum[string])
### Members
  + chrome
  + firefox

## Trend1 (object)
+ from: `2017-04-03T22:43:49Z` (string, required)
+ to: `2017-04-04T10:43:49Z` (string, required)
+ `events_count`: 0 (number, required)

## Trend2 (object)
+ from: `2017-04-04T10:43:49Z` (string, required)
+ to: `2017-04-04T22:43:49Z` (string, required)
+ `events_count`: 1 (number, required)

## TrendA (object)
+ `2016-12-07T12:00:00Z`: 412 (number, required)
+ `2016-12-08T00:00:00Z`: 931 (number, required)

## User (object)
+ id: 515fb9337c1074f6fd000007 (string, required)
+ name: James Smith (string, optional)
+ email: james@example.com (string, required)
+ `two_factor_enabled`: true (boolean, required)
+ `two_factor_enabled_on`: `2017-04-04T22:43:49Z` (string, optional)
+ `recovery_codes_remaining`: 2 (number, optional) - The number of two factor recovery codes the User has left.
+ `password_updated_on`: `2017-04-04T22:43:49Z` (string, optional) - The time the User's password was last changed.
+ `show_time_in_utc`: true (boolean, required) - Whether the user has opted to have times displayed in UTC instead of local time.
+ heroku: false (boolean, required)
+ `created_at`: `2018-02-01T22:31:26.696Z` (string, required) - when the user was created
+ `favorite_project_ids`: `5e3bf879d1befa00093b8638` (array[string]) - list of IDs of the User's favorite projects
+ `managed_by_smartbear_id`: true (boolean, required) - Whether the user is managed by SmartBear ID

## CollaboratorApiView (object)

+ id: 515fb9337c1074f6fd000007 (string, required)
+ name: James Smith (string, optional)
+ email: james@example.com (string, required)
+ `two_factor_enabled`: true (boolean, required)
+ `two_factor_enabled_on`: `2017-04-04T22:43:49Z` (string, optional)
+ `recovery_codes_remaining`: 2 (number, optional) - The number of two factor recovery codes the User has left.
+ `password_updated_on`: `2017-04-04T22:43:49Z` (string, optional) - The time the User's password was last changed.
+ `show_time_in_utc`: true (boolean, required) - Whether the user has opted to have times displayed in UTC instead of local time.
+ heroku: false (boolean, required)
+ `created_at`: `2018-02-01T22:31:26.696Z` (string, required) - when the user was created
+ `is_admin`: true (boolean, required) - Whether the collaborator has admin permissions for the current organization
+ `pending_invitation`: true (boolean, required) - True if the user has not yet accepted their Bugsnag invitation.
+ `last_request_at`: `2017-04-04T22:43:49Z` (string) - The last time the user interacted with the Bugsnag dashboard or related APIs. Null if the user has not interacted with the dashboard before.
+ `project_ids`: `515fb9337c1074f6fd000001` (array[string], required) - Deprecated field that returns the ids of all projects the user has access to within the current organization. Consider using `project_roles` instead.
+ `paid_for`: true (boolean, required) - Whether the user has Bugsnag dashboard access under the organization's current plan. If this is false for a collaborator, they will see a "locked out" message when they attempt to log in to the Bugsnag dashboard. An admin for your organization can resolve this by upgrading the organization's Bugsnag plan.
+ `project_roles` (ProjectRoles, required)
  A mapping of project IDs to the user's role on that project. The role is either `project_owner` or `project_member`. The `project_member` role is only available on Enterprise plans, see the [Roles and Permissions documentation](https://docs.bugsnag.com/product/roles-and-permissions/) for more details.

## ProjectRoles (object)
+ `515fb9337c1074f6fd000001`: `project_member` (string, required)

## SuggestedCollaboratorApiView (object)
+ id: `515fb9337c1074f6fd000007` (string, required)

  The ID of the collaborator

+ name: `James Smith` (string, required)

  The name of the collaborator

+ email: `james@example.com` (string, required)

  The email of the collaborator

+ has_access: `true` (boolean, required)

  Whether the user has access to the project already

## ProguardFile
+ id: 515fb9337c1074f6fd000007 (string, required)
+ `app_id`: com.example.app (string, optional) - The Android applicationId for this application.
+ `version_code`: 1234 (string, optional) - The Android versionCode for this application release.
+ `version_name`: `1.0.0` (string, optional) - The Android versionName for this application release.
+ `build_uuid`: e6ead014-ce51-41c1-af38-abe7995b5156 (string, optional) - A UUID to identify this builds. This is required if you build multiple different apps with the same appId and versionCode. If you use this, you’ll also need to use setBuildUUID() in your app.
+ `created_at`: `2017-03-06T23:34:00.000Z` (string, required) - When the proguard file was created.
+ `project_id`: 515fb9337c1074f6fd000001 (string, required) - ID of project this proguard file belongs to.
+ `upload_status`: completed (string, required) - The current status of the uploaded file. Can be completed, in-progress or failed.
+ `processed_at`: `2017-03-06T23:34:00.000Z` (string, required) - When the proguard file was finished processing.

## Dsym
+ id: `008F2E70-F4F1-11E9-A0D3-4B05B34D3CD3` (string, required)
+ `upload_status`: completed (string, required) - The current status of the uploaded file. Can be completed, in-progress or failed.
+ `first_uploaded_at`: `2017-03-06T23:34:00.000Z` (string, required) - When the DSYM was first uploaded.
+ `processed_at`: `2017-03-06T23:35:00.000Z` (string, required) - When the file was finished processing.

## BreakpadSymbolFile
+ `id`: `515fb9337c1074f6fd000007` (string, required)

    The ID of the Breakpad symbol file.

+ `created_at`: `2017-03-06T23:34:00.000Z` (string, required)

    Timestamp in seconds resolution that represents the date and time the Breakpad symbol file was uploaded.

+ `debug_file`: `debug.file` (string, required)

    The name of the debug file for the module that the mappings relate to.

+ `code_file`: `code.file` (string, required)

    The basename of the module that the mappings relate to.

+ `debug_identifier`: `213579A4AB563143A11243080A9A43412` (string, required)

    The ID of the debug information for the module that the mappings relate to.

+ `os`: `mac` (string, required)

    The operating system that the module was built for, e.g. "windows".

+ `cpu`: `x86_64` (string, required)

    The CPU that the module was built for, e.g. "x86".

+ `upload_status`: `in-progress` (string, required)

    The current status of the uploaded file. Can be completed, in-progress or failed.

## DwarfFile
+ `id`: `515fb9337c1074f6fd000007` (string, required)
The ID of the Dwarf file.
+ `uploaded_at`: `2017-03-06T23:34:00.000Z` (string, required)
Timestamp in seconds that represents the date and time the Dwarf file was uploaded.
+ `code_identifier`: `213579A4AB563143A11243080A9A43412` (string, required)
The identifier for the build of the application/binary for the code that the symbols relate to.
+ `upload_status`: `in-progress` (string, required)
The status of the upload. Can be 'completed', 'in-progress' or 'failed'.
+ `arch`: `x86_64` (string, required) - The architecture of the binary that the symbol file relates to
+ `module_name`: `libnative-lib.so` (string, required) - The name of the module/application/binary that the symbol file contains the symbols for
+ `app`: (DwarfFileApp) - Information about the application that the file relates to

## DwarfFileApp
+ `id`: `515fb9337c1074f6fd000007` (string, optional) - The ID of the application that the symbol file relates to (Android only)
+ `version`: `1.0` (string, optional) - The version for the application that the symbol file relates to
+ `version_code`: `1` (string, optional) - The version code for the application that the symbol file relates to (Android only)
+ `build_uuid`: `515fb9337c1074f6fd000007` (string, optional) - The Build UUID for the application that the symbol file relates to (Android only)

## SourceMap
+ id: 515fb9337c1074f6fd000007 (string, required)
+ `app_version`: v1.2.3 (string, optional) - The version of the app that the source map applies to.
+ `app_version_code`: 1234 (string, optional) - The version code (Android) or the bundle version (iOS) that the source map applies to.
+ `code_bundle_id`: `1.0.0-b12` (string, optional) - A user-defined unique identifier for a JavaScript code deployment.
+ `minified_url`: app.js (string, optional) - The url of the minified JavaScript file that the source map relates to.
+ files: SourceMapFile (array[SourceMapFile], required)
+ platform: ios (enum[string], optional) - Whether the source map relates to an ios or android build (React Native projects only).
    + ios
    + android
+ dev: false (boolean, optional) - Whether the stack trace is for a dev build or not (React Native projects only).
+ `created_at`: `2017-03-06T23:34:00.000Z` (string, required) - When the source map was created.
+ `project_id`: 515fb9337c1074f6fd000001 (string, required) - ID of project this source map belongs to.

## _FilterValue
+ id: `new` (string) - The identifier to use when filtering by this value
+ name: `New` (string) - A human readable represenation of this value

## EventFieldFieldType (enum)
### Members
+ string
+ array

## EventField

+ custom: false (boolean) - Whether the field is a custom event field created by your organization
+ `display_id`: `user.id` - Identifier which is the key to use for filtering by this field
+ filter_options (object, required) - Details of how this field is used in filtering
  + Properties
    + name: `User ID` (string) - Human readable display name for the filter
    + description: `user impacted by an event` (string) - Description of what the filter is
    + aliases (array[string]) - Other possible names that match this field when filtering
      + Members
          + `user`
          + `uid`
    + `hint_text`: `Exact match only` (string) - Hint text to clarify the use of the field for filtering
    + `hint_url`: `http://docs.bugsnag.com/product/filtering-dashboard#user-id` - Link to Bugsnag documentation about this filter
    + values (array[_FilterValue]) - Possible values for this filter, only if this filter has a finite set of values
    + `match_types` (array[enum[string]])
        The valid match types when filtering by this field
        + Members
            + `eq` - Results must equal the value
            + `ne` - Results must not equal the value
+ pivot_options (PivotOptions, required) - Details of how this field is used in Pivots
+ reindex_in_progress: true (boolean) - Whether a reindex of this field is currently in progress (applicable to custom fields only)
+ reindex_percentage: 100 (number) - The percentage complete of the reindexing of this field (applicable to custom fields only)

## EventFieldCreateRequest(object)
+ path: `metaData.plan.tier` (string, required) - [Path](https://docs.bugsnag.com/product/custom-filters/advanced-custom-filters/#custom-filter-path) to locate the relevant data inside an Event data structure
+ reindex: false (boolean, optional) - Whether to reindex historical events for this field
+ filter_options (object, required) - Configuration for how this field will appear in the Filter Bar
  + name: `plan tier` (string) - Human readable name for the filter
+ pivot_options (PivotOptions, optional) - Configuration for how this field will appear in pivots and on the Error page

## PivotOptions (object)
+ name: `Errors` (string) - Human readable display name of the pivot.
+ fields: array(_FilterValue) - Additional fields that are displayed in the pivot tab, for example the users pivot displays user name and email in addition to ID.
+ summary: false (boolean) - Whether this field is displayed in the error summary section of the dashboard
+ values: true (boolean) - Whether this field is displayed as a pivot tab in the dashboard
+ cardinality: true (boolean) - Whether the unique values of this field are calculated
+ average: false (boolean) - Whether an average value of this field is calculated

## SourceMapFile
+ url: app.js.map (string, required)
+ file: AbcDeF.map (string, required) - cached file name

## TwoFactorAuthentication (object)
+ `two_factor_code`: 123456 (string, required)
+ password: 123456 (string, required)

## SamlConfigurationBase
+ `metadata_endpoint`: `https://example-corp.okta.com/app/abc123/sso/saml/metadata` (string)

  this must be an HTTPS URI, with a hostname that resolves to an IP that is not private or local. If `metadata_xml` is specified then this field should be set to null or an empty string.

+ `metadata_xml` (string)

  SAML IdP metadata XML. If `metadata_endpoint` is specified then this field should be set to null or an empty string.

+ enabled: false (boolean)

  whether to enable SAML single sign-on (default false).

+ `allow_username_password_login`: true (boolean)

  whether to allow username and password login in addition to SSO login (default true).

+ `auto_provision`: true (boolean)

  whether to automatically provision users (default true).

+ `auto_provision_all_projects`: true (boolean)

  whether to automatically provision users with access to all projects (default true).

+ `auto_provision_collaborator_role`: `project_member` (string, optional)

  which project role to automatically provision users with (default `project_owner`). Can only be set if the account's plan supports enterprise roles.


## SamlConfigurationResponse (SamlConfigurationBase)
+ id: 515fb9337c1074f6fd000001 (string)
+ `acs_consumer_url`: `https://example.com` (string)

## SavedSearchCreateRequest
+ `project_id`: 515fb9337c1074f6fd000003 (string, required)
    ID of project this saved search is for
+ name: `most events` (string, required) - name of the saved search
+ filters (Filters, required)
    The filters used to determine which Errors will be returned by the
    search. See [Filtering](/#introduction/filtering) for details.
+ sort: `events` (SearchSort, optional) - the `error` property to sort results by
+ shared: false (boolean, optional) - whether this saved search is shared among collaborators
    + Default: false
+ `project_default`: false (boolean, required)
    whether this saved search is the project default for the current user

## SavedSearchUpdateRequest
+ name: `most events` (string, optional) - name of the saved search
+ filters (Filters, optional)
    The filters used to determine which Errors will be returned by the
    search. See [Filtering](/#introduction/filtering) for details.
+ sort: `events` (SearchSort, optional) - the `error` property to sort results by
+ shared: false (boolean, optional) - whether this saved search is shared among collaborators
    + Default: false
+ `project_default`: false (boolean, optional)
    whether this saved search is the project default for the current user

## SavedSearch
+ id: 515fb9337c1074f6fd000001  (string, required)
+ `user_id`: 515fb9337c1074f6fd000002 (string, required)
    ID of user who created the saved search
+ `project_id`: 515fb9337c1074f6fd000003 (string, required)
    ID of project this saved search is for
+ name: `most events` (string, required) - name of the saved search
+ filters (Filters, required)
    The filters used to determine which Errors will be returned by the
    search. See [Filtering](/#introduction/filtering) for details.
+ sort: `events` (SearchSort, required) - the `error` property to sort results by
+ shared (boolean, required) - whether this saved search is shared among collaborators
+ `project_default`: false (boolean, required)
    whether this saved search is the project default for the current user
+ `updated_by_id`: 515fb9337c1074f6fd000010 (string, required)
    ID of user who last updated this saved search
+ `created_at`: `2018-06-11T10:43:55Z` (string, required) - time this saved search was created
+ `updated_at`: `2018-06-12T11:50:00Z` (string, required) - time this saved search was last updated
+ `has_assigned_to_me`: true (boolean, required) - indicates if the saved search has a filter with `assigned_to` set to `me`
+ `has_assigned_to`: true (boolean, required) - indicates if the saved search has a filter with `assigned_to` set to anything other than `me`
+ `has_created_issue_filter`: true (boolean, required) - indicates if the saved search has a filter with any criteria related to created issues
+ `has_status_filter`: true (boolean, required) - indicates if the saved search contains an explicit error status filter
+ `new_error_inclusion`: all (ErrorStatusType, required) - indicates if the saved search may include errors less than 24hrs old
+ `open_error_inclusion`: all (ErrorStatusType, required) - indicates if the saved search may include open errors
+ `for_review_error_inclusion`: all (ErrorStatusType, required) - indicates if the saved search may include open errors that are unassigned and have no linked issue
+ `snoozed_error_inclusion`: all (ErrorStatusType, required) - indicates if the saved search may include errors that are snoozed
+ `fixed_error_inclusion`: all (ErrorStatusType, required) - indicates if the saved search may include errors that are fixed
+ `ignored_error_inclusion`: all (ErrorStatusType, required) - indicates if the saved search may include errors that are ignored

## SavedSearchType (enum)
### Members
+ `error`
+ `performance`
+ `performance_comparison`

## ErrorStatusType (enum)
### Members
+ `all`
+ `some`
+ `none`

## SavedSearchUsageSummary
+ `project_notifications_count` (number, required) - the number of project notifications using this saved search
+ `current_user_using_for_email_notification` (boolean, required) - whether the current user is using this saved search for email notifications
+ `collaborator_email_notifications_count` (number, required) - the number of other users using this saved search for email notifications
+ `performance_monitor_count` (number, required) - the number of performance monitors using this saved search

## SearchSort (enum)
### Members
+ `first_seen`
+ `users`
+ `events`
+ `last_seen`

## FilterMatchType (enum)
### Members
+ eq - Filter for items that "match" (exact match or substring match depending on the field) the value
+ ne - Filter for items that don't match the value

## MultiEntryParams (array)
+ `id` (string, required) - one entry in the array of parameters

## Filters
+ `user.id` (array, optional)
    An array of user ids. Matches Errors affecting any of these users. This
    refers to user ids in the context of your application. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: 515fb9337c1074f6fd000002 (string, required)

+ `user.email` (array, optional)
    An array of email addresses. Matches Errors that have affected users with email addresses matching any of the provided emails. Supports substring matches.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `john.doe@example.com` (string, required)

+ `user.name` (array, optional)

    An array of user names. Matches Errors that have affected users with
    names matching any of the provided names. Supports substring matches.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `John Doe` (string, required)

+ `error.id` (array, optional)

    An array of error ids. Matches errors with IDs matching any of the given error IDs.
    Exact match only.
    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: 337515fb9c1074f6fd000001 (string, required)

+ `error.status` (array, optional)

    An array of error statuses. Matches Errors that have any of the given
    statuses. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: open (ErrorStatus, required)

+ `error.assigned_to` (array, optional)

    An array of collaborator identifiers. Matches Errors that have been assigned
    to any of the given collaborators. Exact match only.

    Values can be `me` (for errors assigned to the current user), `anyone` (for
    errors assigned to anyone), a collaborator ID, or an email address.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `515fb9337c1074f6fd000002` (string, required)

+ `error.has_issue` (boolean, optional)

  If set to true, matches Errors that have had an issue created for them.
  If set to false, matches Errors that have not had an issue created for them.

+ `app.release_stage` (array, optional)

    An array of release stages. Matches Errors that have occurred in any of the
    given release stages. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: production (string, required)

+ `app.context` (array, optional)

    An array of application contexts. This refers to the action that was
    happening when the event occurred. Matches Errors that occurred in any of the
    given contexts. Supports substring matches.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `users#show` (string, required)

+ `app.type` (array, optional)

    An array of application types. Matches Errors that occurred in any of the
    given application types. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: sidekiq (string, required)

+ `version.introduced_in` (array, optional)

    An array of application versions. Matches Errors that occurred for the first time in any of the
    given versions. Supports the `?` and `*` wildcards.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `1.?.1` (string, required)

+ `version.seen_in` (array, optional)

  An array of application versions. Matches Errors that occurred in any of the
  given versions. Supports the `?` and `*` wildcards.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `2.*` (string, required)

+ `version_code.introduced_in` (array, optional)

    An array of version codes. Matches Errors that occurred for the first time in
    a version of the application identified by any of the given versions codes.
    The value of an Error's versionCode depends on the corresponding Project's
    type. In Android apps this will match the versionCode setting.  In iOS apps,
    versionCode is taken from the Build Number setting. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: 123 (string, required)

+ `version_code.seen_in` (array, optional)

    An array of version codes. Matches Errors that occurred in a version of the
    application identified by any of the given versions codes. The value of an
    Error's versionCode depends on the corresponding Project's type. In Android
    apps this will match the versionCode setting. In iOS apps, versionCode is
    taken from the Build Number setting. Exact match only.


    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: 123 (string, required)

+ `release.introduced_in` (array, optional)

    An array of Release `build_label`s, `app_version`s, `app_version_code`s, or
    `app_bundle_version`s. Matches Errors that occurred for the first time in any
    of the given Releases. Supports the `?` and `*` wildcards.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: 123 (string, required)

+ `release.seen_in` (array, optional)

    An array of Release `build_label`s, `app_version`s, `app_version_code`s, or
    `app_bundle_version`s. Matches Errors that occurred in any of the given
    Releases. Supports the `?` and `*` wildcards.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: 123 (string, required)


+ `event.class` (array, optional)

    An array of classes. Matches Errors with any of the given classes. Supports
    substring matches.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `NoMethodError` (string, required)

+ `event.message` (array, optional)

    An array of messages. Matches Errors with any of the given messages. Supports
    substring matches.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `redis` (string, required)

+ `event.file` (array, optional)

    An array of file paths. Matches Errors with any of the given files in their stack traces'.
    Supports substring matches.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `app/controllers/users_controller.rb` (string, required)

+ `event.method` (array, optional)

    An array of method names. Matches Errors with any of the given methods in their stack traces'.
    Supports substring matches.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `process_payment` (string, required)

+ `event.severity` (array, optional)

    An array of severities. Matches Errors with any of the given severities.
    Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value (SeverityOptions, required)

+ `event.since` (array, optional)

    An array containing a single timestamp. Matches Errors with events occurring
    after the given time. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `2017-04-18T22:12:00.000Z` (string, required)

+ `event.before` (array, optional)

    An array containing a single timestamp. Matches Errors with events occurring
    before the given time. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `2017-04-18T22:12:00.000Z` (string, required)

+ `browser.name` (array, optional)

    An array containing web browser names. Matches Errors with events originating
    from any of the given web browsers. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value (enum[string], required)
              + Members
                + Chrome
                + Firefox
                + Safari
                + Opera

+ `browser.version` (array, optional)

    An array containing web browser versions. Matches Errors with events originating
    from any browser with the given version. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: 70.0 (string, required)

+ `os.name` (array, optional)

    An array containing operating system names. Matches Errors with events
    originating from devices running any of the given operating systems. Exact
    match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: Android (string, required)

+ `os.version` (array, optional)

    An array containing operating system versions. Matches Errors with events
    originating from devices running any of the given operating system versions.
    Supports the `?` and `*` wildcards.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `1.2.3` (string, required)

+ `device.hostname` (array, optional)

    An array containing hostnames. Matches Errors with events occurring on any
    hosts with one of the given hostnames. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: staging1 (string, required)

+ `device.manufacturer` (array, optional)

    An array containing device manufacturer names. Matches Errors with events
    occurring on any devices made by the given manufacturers. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: Google (string, required)

+ `device.model` (array, optional)

    An array containing device model names. Matches Errors with events
    occurring on any of the given device models. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `Pixel 3` (string, required)

+ `request.url` (array, optional)

    An array of URLs. Matches Errors with events associated with requests to any
    of the given URLs. Supports substring matches.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `https://api.example.com/users` (string, required)

+ `request.ip` (array, optional)

    An array of IP addresses. Matches Errors with events affecting any of the
    given IPs. Exact match only.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: `192.168.5.6` (string, required)

+ `device.jailbroken` (array, optional)

    An array containing a boolean. If `true`, matches Errors with events occurring
    on jailbroken devices.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: true (string, required)

+ `app.in_foreground` (array, optional)

    An array containing a boolean. If `true`, matches Errors with events occurring
    when the application was in the foreground.

    + Members
        + (object)
          + type (FilterMatchType, required)
          + value: true (string, required)

## ReleaseStage
+ id: 5bc7dbc5d1befa0bb25021be (string, required) - ID of the release stage
+ project_id: 5b918c28d1befa000bfa31b0 (string, required) - ID of project this release stage belongs to
+ name: production (string, required) - name of this release stage
+ last_seen_at: `2018-10-23T17:17:10.940Z` (string, optional) - when this release stage was last seen (via an event or session)
+ primary: true (boolean, required) - whether this is the primary release stage for its project
+ visible: true (boolean, required) - whether this release stage is visible

## ReleaseStageSummary
+ project_id: 515fb9337c1074f6fd000003 (string, required) - ID of project the summary is for
+ release_stage_name: production (string, required) - name of release stage the summary is for
+ sessions_count_in_last_24h: 123 (number, required)
    number of sessions started in the last 24 hours for the release stage

## ReleaseGroupSummary
+ hidden_release_group_count: 10 (number, required) - how many of the project's release groups are hidden

## ReleaseRequestSource (enum[string])
### Members
  + unknown_source - source is unknown
  + event - originated from an event
  + session - originated from a session
  + api - obtained from an API request
  + deploy - obtained from a deploy request
  + error - obtained from an error (with complete information)
  + error_incomplete_build - obtained from an error (but the build information is incomplete)

## ReleaseGroupSourceControl
+ service: github (string) - the source control provider/service
+ commit_url (string) - URL to the revision/commit corresponding to the release
+ revision (string) - identifier for the revision of the release
+ diff_url_to_previous (string) - URL to view the changes from the previous release
+ previous_app_version (string) - Previous app version for the diff

## ReleaseSourceControl
+ service: github (string) - the source control provider/service
+ commit_url (string) - URL to the revision/commit corresponding to the release
+ revision (string) - identifier for the revision of the release
+ diff_url_to_previous (string) - URL to view the changes from the previous release

## ReleaseApiView
+ id: 5a8f7294d1befa07f361fcde (string) - ID of the release
+ project_id: 5a907f72d1befa043987dedf (string) - ID of project this release belongs to
+ release_time: `2018-02-21T21:30:16+00:00` (string) - when the release happened (in ISO 8601 format)
+ release_source (ReleaseRequestSource) - what was responsible for creating the release
+ app_version: 1.2.3 (string) - version name/number
+ app_version_code: 1234 (string) - version code of release (applicable to Android)
+ app_bundle_version: 1.2.3 (string) - bundle version/build number of release (applicable to iOS/macOS/tvOS)
+ build_label: 1.2.3 (string) - auto-generated descriptive label describing the build
+ builder_name: Daniel Deployer (string) - name of person or system that triggered the release/build
+ build_tool: `webpack-bugsnag-plugins` (string) - tool used to report this release
+ errors_introduced_count: 2 (number) - number of errors introduced in this release
+ errors_seen_count: 10 (number) - number of errors that happened in this release
+ sessions_count_in_last_24h: 6500 (number) - number of sessions started for this release in the last 24 hours
+ total_sessions_count: 3000 (number) - number of sessions that started in this release
+ unhandled_sessions_count: 60 (number) - number of sessions in this release that have seen at least one unhandled event. Session Stability can be computed with: (1 - (unhandled_sessions_count / total_sessions_count)) * 100
+ accumulative_daily_users_seen: 5124 (number) - number of user with at least one session in this release group
+ accumulative_daily_users_with_unhandled: 11 (number) - number of user sessions with at least one unhandled event. User Stability can be computed with: (1 - (accumulative_daily_users_with_unhandled / accumulative_daily_users_seen)) * 100
+ metadata (object) - metadata about the release
+ release_stage (object) - information about this release's release stage
  + name: production (string) - name of the release stage
+ source_control (ReleaseSourceControl) - source control related information about the release
+ release_group_id: 5cf9a562d1befa0021e6a600 (string) - ID of release group that this release belongs to

## ReleaseGroup
+ id: 5cf9a562d1befa0021e6a600 (string, required) - ID of release group
+ project_id: 515fb9337c1074f6fd000003 (string, required) - ID of project that this release group belongs to
+ release_stage_name: production (string, required) - name of the release stage for this release group
+ app_version: 1.2.3 (string, required) - version string for this release group
+ first_released_at: `2019-06-06T15:30:00.000Z` (string, required)
    when the first release of this release group was released
+ first_release_id: 5a8f7294d1befa07f361fcde (string, required) - ID of first release of this release group
+ releases_count: 1 (number, required)
    Number of releases that belong to this release group. This will be 1 for
    releases that don't use secondary versions.
+ has_secondary_versions: false (boolean, required)
    Whether the releases in this release group use secondary versions (version
    code or bundle version). This is usually true for mobile projects and false
    for non-mobile projects.
+ build_tool: `webpack-bugsnag-plugins` (string, optional)
    tool used to report the first release of this release group
+ builder_name: Daniel Deployer (string, optional)
    name of person or system that triggered the first release/build of this release group
+ source_control (ReleaseGroupSourceControl, optional)
    source control related information about the first release of this release group
+ total_sessions_count: 3409 (number, required) - total number of sessions seen for this release group. This field will be returned if the current Plan supports stability monitoring.
+ unhandled_sessions_count: 6 (number, optional)
    number of sessions in this release group that had at least one unhandled event.
    Session Stability can be computed with: (1 - (unhandled_sessions_count / total_sessions_count)) * 100.
    This field will be returned if the current Plan supports stability monitoring.
+ sessions_count_in_last_24h: 498 (number, optional)
    number of sessions seen in the last 24 hours for this release group. This field will be returned if the current Plan supports stability monitoring.
+ accumulative_daily_users_seen: 5124 (number, optional)
    number of user with at least one session in this release group. This field will be returned if the current Plan supports stability monitoring.
+ accumulative_daily_users_with_unhandled: 11 (number, optional)
    number of user sessions with at least one unhandled event.
    User Stability can be computed with: (1 - (accumulative_daily_users_with_unhandled / accumulative_daily_users_seen)) * 100.
    This field will be returned if the current Plan supports stability monitoring.
+ top_release_group: true (boolean, required) - whether this release group is a top release
+ visible: true (boolean, required) - whether this release group is visible

## TopReleaseGroupDetailsApiView
+ `release_group_id`: `5c8815c75a0c1b12d0f6fb13` (string, required)
+ `app_version`: `1.0` (string, required)
+ `release_time`: `2020-06-01T23:33:22Z` (string, required)
+ `release_group_timeline_points` (array[GenericTimelinePoint], required)

## ReleaseStageSessionTimelinesApiView (object)
+ `release_stage_timeline_points` (array[GenericTimelinePointWithUserSessions], required)
+ `top_release_groups` (array[TopReleaseGroupDetailsApiView], required)

## SeenFeature

+ `organization_id`: 515fb9337c1074f6fd000003 (string, required)
+ key: `welcome_slideshow` (string, required)

## ProjectSeenFeature

+ `project_id`: `515fb9337c1074f6fd000003` (string, required)
+ key: `user_stability_notifier_update_banner` (string, required)

## UserAuthToken

+ id: 592e047b1f7314b637b2b6ed (string, required) - ID of the auth token
+ label: `My magic token` (string, required) - User supplied description of the token
+ `user_id`: 5915b7e01f7314fa00c22b80 (string, required) - ID of the user that created this token
+ `created_at`: `2017-04-04T22:43:49Z` (string, required) - The time this token was created
+ `token`: `0050dcb25dbdabd67ff0cdf454279f8a` (string, required) - The token parameter used for authenticated API requests
+ `last_used_at`: `2017-04-04T22:43:49Z` (string) - The last time this token was used in an API request

## UserLegal
+ agreements: (array[UserLegalAgreementApiView], required)

## LegalAgreementApiView
+ agreement_type: dpa (string, required) - type of legal document/policy agreed to
+ accepted_by: `joe@example.com` (string, required) - email address of user who agreed
+ accepted_at: `2018-03-26T18:23:33.190Z` (string, required) - when the agreement happened
+ has_accepted_latest_version: true (boolean, required) - whether this agreement is for the latest version of the document

## UserLegalAgreementApiView
+ agreement_type: dpa (string, required) - type of legal document/policy agreed to
+ accepted_at: `2018-03-26T18:23:33.190Z` (string, required) - when the agreement happened
+ has_accepted_latest_version: true (boolean, required) - whether this agreement is for the latest version of the document

## PrivacyRepresentativeApiView
+ representative_type: dpo (string, required) - type of privacy/legal representative
+ name: `John Doe` (string, required) - name of representative
+ address: `123 Main St., San Francisco, CA` (string, optional) - address of representative
+ phone_number: `(415)-555-5555` (string, optional) - phone number of representative
+ email: `john@example.com` (string, optional) - email address of representative

## Subscription

+ trial: true (boolean) - This key will be absent if the organization is not currently on a trial.
+ `trial_end`: `2017-04-29T23:00:01.000Z` (string) - This key will be absent if the organization is not currently on a trial.
+ `trial_expired`: false (boolean) - This key will be absent if the organization is not currently on a trial.
+ `trial_days_left`: 4 (number) - This key will be absent if the organization is not currently on a trial.
+ `next_plan`: `team_one` (string) - The plan type you have selected to move to when your trial ends. This key will be absent if the organization is not currently on a trial.
+ `next_payment_amount_in_cents`: 3500 (number)
+ `next_payment_due_at`: `2017-04-29T23:00:01.000Z` (string)
+ `next_payment_subtotal_in_cents`: 580 (number) - The subtotal before tax
+ `next_payment_tax_in_cents`: 58 (number) - The amount of tax to be paid
+ `payment_remaining_attempts`: 0 (number) - The number of additional times we will attempt to charge your credit card
+ `payment_information` (object)
    + `last4`: 1234 (string) - The last four digits of your credit card on file
    + `expiry_month`: 01 (number) – The expiration month of your credit card on file
    + `expiry_year`: 2018 (number) - The expiration year of your credit card on file
    + `address_city`: `New York` (string)
    + `address_country`: `US` (string) - The ISO 3166-1 alpha-2 code for the country
    + `address_line1`: `11 Wall St` (string)
    + `address_line2`: `Manhatten` (string)
    + `address_state`: `NY` (string)
    + `address_zip`: `"10005"` (string)
+ `past_due`: true (boolean)
+ plan (PlanApiView)
+ `stop_processing_events_on`: `2017-04-24T22:17:13.000Z` (string) - Date when this project will stop processing new events if account is locked and lockout is not resolved
+ performance (PerformanceApiView)

## PerformanceApiView

+ `spans_per_day`: 1023 (number, optional) - The daily span quota limit
+ `spans_per_month`: 31202 (number, optional) - The nominal monthly number of spans to display
+ `quantity`: 3 (number, optional) - The quantity of daily spans
+ `trial` (PerformanceTrialApiView)
+ `performance_plan` (SubscriptionPerformancePlanApiView, optional)
+ `next_performance_plan` (SubscriptionPerformancePlanApiView, optional)

## PerformanceTrialApiView

+ `can_start`: false (boolean) - If this organization has not started a performance trial
+ `in_trial`: false (boolean) - If this organization is currently on a performance trial
+ `expired`: false (boolean) - If this performance trial has ended
+ `ends` : `2017-04-29T23:00:01.000Z` (string, optional) - The time the performance trial ends. Only returned if in a performance trial
+ `days_left`: 14 (number, optional) - The number of days before the performance trial ends. Only returned if in a performance trial

## ExternalAuditEntryApiView
+ id: 5b200a2212d5c900178da00d (string, required) - ID of the entry
+ `created_at`: `2018-06-08T18:25:26.924Z` (string, required) - when the auditable event happened
+ message: `custom filter deleted` (string, required) - the audit message
+ `actor` (object, required) - entity that acted on the auditable event
  + type (enum, required) - type of the actor
      + Members
        + `UNKNOWN`
        + `USER`
        + `BUGSNAG_EMPLOYEE`
  + id: 5b1aca16d1befa0009842255 (string, optional) - ID of the actor - not present if `type` is `BUGSNAG_EMPLOYEE`
  + name: `Will Smith` (string, optional) - name of the actor - will be `Bugsnag Support` if `type` is `BUGSNAG_EMPLOYEE`
  + email: `will@smith.com` (string, optional) - email address of the actor - not present if `type` is `BUGSNAG_EMPLOYEE`
  + `request_ip`: `127.0.0.1` (string, optional) - the IP address of the actor - not present if `type` is `BUGSNAG_EMPLOYEE`

## AssetDeployment
+ service: `dashboard-js` (string, required) - The name of the service
+ stage: `staging` (string, required) - The name of the stage, either `staging` or `production`.
+ version: `1.2.345-staging` (string, required) - The currently reployed version

## InternalAuditEntry
+ id: 5b200a2212d5c900178da00d (string, required) - ID of the entry
+ `created_at`: `2018-06-08T18:25:26.924Z` (string, required) - when the auditable event happened
+ message: `custom filter deleted` (string, required) - the audit message
+ `actor` (object, required) - entity that acted on the auditable event
  + type (enum[string], required) - type of the actor
      + Members
        + UNKNOWN
        + BUGSNAG
        + ACCOUNT
        + USER
  + id: 5b1aca16d1befa0009842255 (string, optional) - ID of the actor
  + name: `Will Smith` (string, optional) - name of the actor
+ `associated_entities` (array[InternalAuditEntryAssociatedEntity], required) - entities associated with the audit entry

## InternalAuditEntryAssociatedEntity
+ type: Project (string, required) - type of the entity
+ id: 5b18305ed1befa000bd05052 (string, required) - ID of the entity
+ name: `Some App` (string, optional) - name of the entity

## FeatureAccess
+ `*feature_type*` (object, required)
    + enabled (boolean, required) - Whether or not the organization has access to this feature
    + `plan_required` (array[string], optional) - List of plan types that include this feature
    + type (enum[string], required) - Whether or not this feature is enabled
        + Members
            + `email-notification`
            + `issue-tracker`
            + `team-notification`
            + `on-call`
            + `data-forwarding`
            + `web-feature`
            + `authentication`
            + `custom-filters`

## DiagnosticsReportsRequest(object)
+ version: 3.1703.0 (string)
+ `enterprise_id`: 1b6c7bc2ad89a6b17519657d48dbdd33 (string) - ID of the Bugsnag enterprise that is included in the license file.
+ `instance_id`: 2091a0f48c2e94a7d9a7bf4ff420f74d (string) -  Internal Replicated ID of the individual installation.
+ `sso_enabled`: true (boolean)
+ notifiers (array[DiagnosticsReportsRequestNotifier])
+ projects (array[DiagnosticsReportsRequestProject])
+ users (array[DiagnosticsReportsRequestUser])
+ `event_stats` (array[DiagnosticsReportsRequestEventStat])

## DiagnosticsReportsRequestNotifier(object)
+ name: Ruby Bugsnag Notifier (string)
+ version: 1.0.0 (string)
+ `last_seen_at`: `2018-04-04T11:42:55Z` (string)

## DiagnosticsReportsRequestProject(object)
+ id: 1b6c7bc2ad89a6b17519657d48dbdd33 (string)
+ type: (ProjectType)
+ `created_at`: `2018-04-04T11:42:55Z` (string)
+ `saved_error_count`: 1000 (number)
+ integrations: `jira` (array[string])
+ `comments_used`: true (boolean)
+ `workflow_used`: true (boolean)
+ notifiers: (array[DiagnosticsReportsRequestNotifier])
+ `custom_filters_used`: 1 (number)
+ `sessions_used`: true (boolean)
+ `session_stats` (array[DiagnosticsReportsRequestSessionStat])

## DiagnosticsReportsRequestUser(object)
+ id: 1b6c7bc2ad89a6b17519657d48dbdd33 (string)
+ `created_at`: `2018-04-04T11:42:55Z` (string)
+ `last_active_at`: `2018-04-04T11:42:55Z` (string)

## DiagnosticsReportsRequestEventStat(object)
+ from: `2018-03-04T11:42:55Z` (string)
+ to: `2018-04-04T11:42:55Z` (string)
+ saved: 100000 (number)
+ received: 200000 (number)
+ `legacy_throttled`: 1000 (number)
+ `safeguard_sampled`: 100 (number)
+ sampled: 6000 (number)
+ rejected: 5 (number)
+ discarded: 400 (number)

## DiagnosticsReportsRequestSessionStat(object)
+ from: `2018-03-04T11:42:55Z` (string)
+ to: `2018-04-04T11:42:55Z` (string)
+ sessions: 100000 (number)
+ sessions_with_unhandled: 1000 (number)

## AccountEventUsageApiView
+ date: `2018-07-24` (string, required) - the lower bound for this period usage data
+ received: (number) - number of events received in the time period
+ saved: (number) - number of events saved in the time period
+ discarded: (number) - number of events discarded in the time period
+ throttled: (number) - number of events throttled in the time period

## ProjectTraceNotifierUsageApiView
+ name: `bugsnag.performance.browser` (string, required) - name of the notifier
+ `version`: `1.0.0` (string, required) - version of the notifier
+ `last_seen`: `2018-07-24T00:00:00.000Z` (string, required) - the last time the notifier was seen

## AccountEventUsageOverviewApiView

+ `has_recently_been_throttled`: `true` (boolean, required)

    Whether the Organization has recently been throttled.

+ `events_over_feature_flag_limit`: `12` (number, required)

    The number of Events on the Organization that have exceeded the Feature Flag limit in the requested time period. This will default to the last 7 days if the requested time period is more than 7 days ago.

+ `projects_exceeding_feature_flag_limit`:  (AccountEventUsageOverviewProjectsExceedingFeatureFlagLimit, optional)

  Summary of the Projects that the current user has access to that have recently exceeded the Feature Flag limit in the requested time period, sorted in descending order of Projects that have had the most Events exceed the limit in the requested time period.

+ `event_usage_timeline` (AccountEventUsageOverviewEventUsageTimeline, optional)

    The timeline of the event usage. Only returned for Organization admins.

## AccountEventUsageOverviewProjectsExceedingFeatureFlagLimit

+ `id`: `1b6c7bc2ad89a6b17519657d48dbdd33` (string, required)

    The project ID.

+ `name`: `A Project` (string, required)

    The project name.

## AccountEventUsageOverviewEventUsageTimeline

+ bucket_start: `2018-11-21T00:00:00.000Z` (string, required)

    The start of the time bucket for this usage data.

+ bucket_end: `2018-11-22T00:00:00.000Z` (string, required)

    The end of the time bucket for this usage data.

+ received: (number)

    Number of events received in the time period.

+ saved: (number)

    Number of events saved in the time period.

+ discarded: (number)

    Number of events discarded in the time period.

+ throttled: (number)

    Number of events throttled in the time period.

## ProjectEventUsageApiView
+ date: `2018-07-24` (string, required) - the lower bound for this period usage data
+ `project_id`: 1b6c7bc2ad89a6b17519657d48dbdd33 (string)
+ received: (number) - number of events received in the time period
+ saved: (number) - number of events saved in the time period
+ discarded: (number) - number of events discarded in the time period
+ throttled: (number) - number of events throttled in the time period
+ minidumps_received: (number) - number of minidumps received in the time period
+ minidumps_saved: (number) - number of minidumps saved in the time period
+ minidumps_discarded: (number) - number of minidumps discarded in the time period
+ minidumps_throttled: (number) - number of minidums throttled in the time period
+ events_over_feature_flag_limit: (number) - the number of events over the feature flag limit

## EventDataRequestStatus (enum[string])
### Members
+ PREPARING
+ AWAITING_CONFIRMATION
+ ACCEPTED
+ IN_PROGRESS
+ COMPLETED
+ EXPIRED

## EventDataRequestReportType (enum[string])
### Members
+ gdpr - only include event fields that pertain to the user such as event.user, event.device, and event.request; you may need to remove/redact some fields before giving this data to your users that request it

## EventDataRequestApiView
+ id: 5bf49d97468ce913212ae486 (string, required) - ID of the event data request
+ url (string, optional)
    URL for downloading the report of the requested event data. This may be a
    signed URL that is accessible for short amount of time. This field is not
    present for on-premise installations. For on-premise installations, check
    the configured directory (it defaults to /data/event-data) on the server
    for a file having a name in the format "[event data request ID].json"
+ status: ACCEPTED (EventDataRequestStatus, required) - status of the request
+ total: 10 (number, optional)
    the total number of events that are expected to be returned; this field
    will be null if the status is `PREPARING`
+ report_type (EventDataRequestReportType, optional)
    the type of report to return; this is blank if all event fields were requested
+ filters (Filters, required)
    The filters used to determine which events will be included in the report.
    See [Filtering](/#introduction/filtering) for details.
+ created_at: `2018-11-21T01:31:25.000Z` (string, required) - when the request was created
+ completed_at: `2018-11-21T01:35:00.000Z` (string, optional) - when the request was completed
+ expires_at: `2018-11-28T01:35:00.000Z` (string, optional) - when the request expires (and any stored data is removed)

## EventDataDeletionApiView
+ id: `5bf4b8aed1befa02a523f526` (string, required) - ID of the event deletion request
+ status: IN_PROGRESS (EventDataRequestStatus, required) - status of the request
+ total: 12 (number, optional)
    the total number of events that are expected to be deleted; this field will
    be null if the status is `PREPARING`
+ filters (Filters, required)
    The filters used to determine which events to delete.
    See [Filtering](/#introduction/filtering) for details.
+ created_at: `2018-11-21T01:31:25.000Z` (string, required) - when the request was created
+ completed_at: `2018-11-21T01:35:00.000Z` (string, optional) - when the request was completed

## GroupingAlgorithmApiView
+ `user_id`: `515fb9337c1074f6fd000007` (string, nullable) - The ID of the user who last updated the algorithm, or null if the algorithm has not been updated by a user
+ `last_upgraded_timestamp`: `2020-07-26T21:51:47.361Z` (string, nullable) - The timestamp the grouping algorithm was last updated, or null if the algorithm has never been updated
+ `recommended_grouping_algorithms` (RecommendedGroupingAlgorithms, nullable) - Information on recommended grouping algorithms, or null if there are no recommendations

## RecommendedGroupingAlgorithms
+ `change_log`: `change 1`, `change 2` (array[string], required) - De-duplicated merged down array of change log entries or descriptions for each suggested algorithm

## ScimUser (object)
+ id: 515fb9337c1074f6fd000007 (string, required)
+ userName: james.smith@example.com (string, required)
+ name (ScimName, required)
+ emails (array[ScimEmail], required)
+ active (boolean, optional) - Whether the user is part of the organization.

## ScimName (object)
+ formatted: James Smith (string, optional)
+ givenName: James (string, required)
+ familyName: Smith (string, required)

## ScimEmail (object)
+ value: james@example.com (string, required)

## ScimUserListResponse (ScimListPaginationOptions)
+ `totalResults`: 150 (number, required) - the total number of users matching the query
+ `Resources` (array[ScimUser]) - the users of the organisation

## ScimListPaginationOptions
+ `startIndex`: 15 (number, required) - the pagination offset, 1-indexed, defaults to 1
+ `itemsPerPage`: 10 (number, required) - the number of results returned in this response

## ScimPatchOp
+ `op`: `replace` (string, required) - the operation to perform on the field, only `replace` is supported
+ `path`: `active` (string, required) - the field to update, only `active` is supported
+ `value`: `true` (boolean, required) - the value to set

## ScimGroup (object)
+ `id`: 515fb9337c1074f6fd000007 (string, required)
+ `displayName`: Development Group (string, required)
+ `members` (array[ScimGroupMember], required) - the collaborators in a group

## ScimGroupListResponse (object)
+ `total_results`: 10 (number, required) - the total number of groups matching the query
+ `Resources`: (array[ScimGroup]) - the SCIM groups of the organization

## ScimGroupMember (object)
+ `value`: 515fb9337c1074f6fd000007 (string, required)
+ `display`: james@example.com (string, required)

## ScimGroupCreateRequest (object)
+ `displayName`: Development Group (string, required)

## ScimGroupOperations (object)
+ `op` (enum, required)
  + `add`
  + `replace`
  + `remove`
+ `path`: `members` (string, optional) - the target to update. Optional for `add` or `replace` operations and required for `remove` operations.
+ `value` : (array[ScimGroupOperationsMember, ScimGroupOperationsMember], required) - if updating the group's name, provide an object with a `displayName` attribute instead

## ScimGroupOperationsMember (object)
+ `value`: 515fb9337c1074f6fd000007 (string, required) - the id of a BugSnag collaborators in the org

## ErrorSummaryTimeline (object)
+ `bucket_start`: `2017-04-03T22:43:49Z` (string, required)
+ `bucket_end`: `2017-04-04T10:43:49Z` (string, required)
+ `event_count`: 0 (number, required)

## CommonErrorSummaryApiView (object)
+ `top_errors` (array[ErrorSummaryErrorApiView])

  The top three errors for this error view

+ `trend` (array[Trend1])

  The trend data for events over the configured period for this error view

## DefaultErrorSummaryApiView (CommonErrorSummaryApiView)
+ `error_view_name` (string, required)

  The name of the default error view

## ErrorSummaryApiView (CommonErrorSummaryApiView)
+ `error_view_id`: 515fb9337c1074f6fd000001 (string, required) - The ID of the error view

## TeamApiView
+ `id`: `515fb9337c1074f6fd000007` (string, required)
+ `name`: `acme-co` (string, required)
+ `collaborator_count`: 21 (number, required)
+ `project_count`: 4 (number, required)

## TeamProjectSuggestionApiView
+ `project_id`: `515fb9337c1074f6fd000002` (string, required)
+ `project_name`: `iOS App` (string, required)
+ `type`: `ios` (string, required) - The project type
+ `has_access`: `true` (boolean, required) - Does the team already have access?

## TeamProjectAccessesUpdate

+ `add_all_projects`: true (string, optional)

    Whether to add all remaining projects to the team. If `true`, `project_role` must also be supplied. User making the request must be an organization administrator if using `true`.

+ `project_role`: `project_member` (ProjectRole, optional)

    The role to give team members on the remaining projects being added.

+ `project_roles` (TeamProjectAccessesProjectRoles, optional)

    A hash of project IDs and roles to add to the team. User making the request must be `project_owner` for all projects on the request, or an organization administrator.

## TeamProjectAccessesProjectRoles

+ `515fb9337c1074f6fd000002`: 'project_member' (ProjectRole, required)

    A map of project IDs to the roles to be assigned to them. Must be `project_owner` unless the organization has access to the `enterprise-roles` feature. Cannot be supplied if `add_all_projects` is `true`.

## TeamProjectAccessesDelete

+ `project_ids`: `515fb9337c1074f6fd000001` (array[string], required)

    The IDs of the projects to remove

## TeamSuggestionApiView
+ `project_id`: `515fb9337c1074f6fd000002` (string, required)
+ `project_name`: `iOS App` (string, required)
+ `is_member`: `true` (boolean, required) - Is the collaborator already a member?

## TeamSuggestionForProjectApiView
+ `project_id`: `515fb9337c1074f6fd000002` (string, required)
+ `project_name`: `iOS App` (string, required)
+ `has_access`: `true` (boolean, required) - If the team already has access to the project

## TeamProjectAccessApiView
+ `project_summary` (ProjectAccessSummary, required)
+ `project_role`: `project_member` (ProjectRole, required) - The role the user has on the project

## ProjectAccessSummary (object)
+ `id`: `611a24ff5d0d567c3cdee710` (string, required) - The ID of the project.
+ `name`: `Website Project` (string, required) - The name of the project.
+ `type`: `rails` (string, required) - The type of the project.
+ `slug`: `website` (string, required) - The project's slug.

## ProjectAccessCountsApiView
+ `collaborator_id`: `515fb9337c1074f6fd000001` (string, required)
+ `project_count`: 10 (number, required) - The number of projects the user has access to.
+ `is_admin`: true (boolean, required) - Whether the collaborator is an admin on the account.

## CreateTeamMembershipRequest (object)
+ `team_ids` (array[string], optional) - IDs of the teams to assign the collaborator to. This variable is optional, but required if add_all_teams is false
+ `add_all_teams` (boolean, optional) - Whether to assign the collaborator to all teams in the organization

## TeamIDRequest (object)
+ `team_ids` (array[string], required)

## TeamCreateRequest (object)
+ `name` (string, required)

## TeamUpdateRequest (object)
+ `name` (string, required)

## TeamMembershipsAddUsersRequest (object)
+ `collaborator_ids` (array[string], optional) - Collaborators to add to the team.
+ `add_all_collaborators` (boolean, optional) - Add all organization collaborators to the team. This should not be set if `collaborator_ids` is specified.

## CollaboratorsRequest (object)
+ `collaborator_ids` (array[string], required)

## SuggestedTeamCollaboratorApiView (object)
+ id: `515fb9337c1074f6fd000007` (string, required)

  The ID of the collaborator

+ name: `James Smith` (string, required)

  The name of the collaborator

+ email: `james@example.com` (string, required)

  The email of the collaborator

+ has_access: `true` (boolean, required)

  Whether the user has access to the team already

## CollaboratorProjectAccessApiView (object)
+ `project_summary`: (ProjectAccessSummary) - Details of the project.
+ `team_count`: `5` (number, required) - The number of teams the collaborator belongs to that have access to the project.
+ `is_admin`: true (boolean, required) - Indicates if the collaborator is an administrator for the organization.
+ `project_role`: `project_owner` (string, optional) - The overall role that the Collaborator has on the Project (based on the individual and Team roles). This will be the most permissive of the individual and Team roles. One of "project_owner", "project_member".
+ `individual_project_role`: `project_owner` (string, optional) - The role that the Collaborator has on the Project as an individual (ignoring any Team access). One of "project_owner", "project_member".
+ `team_project_role`: `project_member` (string, optional) - The role that the Collaborator has on the Project from the Teams that they belong to. If the Collaborator belongs to multiple Teams this will be the most permissive role. One of "project_owner", "project_member"

## TeamProjectAccessSummaryApiView (object)

+ `id`: `611a24ff5d0d567c3cdee700` (string)

  The ID of the team.

+ `name`: `Website Team` (string)

  The name of the team.

+ `project_role`: `project_owner` (string)

  The project role the team provides to its members.

+ `collaborator_count`: 20 (number)

  The number of collaborators in the team.

## ProjectCollaboratorAccessSummaryApiView (object)
+ `id`: `611a24ff5d0d567c3cdee720` (string)
  The ID of the collaborator.
+ `name`: `Joe Bloggs`, (string)
  The name of the collaborator.
+ `email`: `joe@example.com` (string)
  The collaborator's email.
+ `project_role`: `project_owner` (string)
  The role the collaborator has on the project.
+ `account_admin`: true (boolean)
  Indicates if the collaborator is an administrator for the organization.

## ProjectAccessApiView (object)

+ `team`: (array[TeamProjectAccessSummaryApiView])

  Details of the teams with access to this project.

+ `collaborators`: (array[ProjectCollaboratorAccessSummaryApiView])

  Details of the collaborators with access to this project.

## ErrorSummaryErrorApiView (ErrorBase)
+ `assigned_collaborator_id`: `515fb9337c1074f6fd000002` (string, optional)

  Identifies the collaborator, if any, who has been assigned to the Error.

+ id: 515fb9337c1074f6fd000001 (string)
+ project_id: 74f6fd000001515fb9337c10 (string)
+ url: https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001 (string)
+ project_url: https://api.bugsnag.com/projects/74f6fd000001515fb9337c10 (string)
+ `error_class`: `NoMethodError` (string)
+ message: undefined method `foo` for nil:NilClass (string)
+ context: `users#show` (string)
+ `original_severity` (SeverityOptions)

  The Error's original severity. Present if the Error's default severity has been modified.

+ `overridden_severity` (SeverityOptions)

  The Error's updated severity. Present if the Error's default severity has been modified.

+ events: 10 (number)

  The number of occurrences of the Error. If the Error request includes filters, this will be a filtered count.

+ `events_url`: `https://api.bugsnag.com/projects/74f6fd000001515fb9337c10/errors/515fb9337c1074f6fd000001/events` (string)

  The API URL for the Error's Events.

+ `unthrottled_occurrence_count`: 10 (number)

  The absolute count of all received Events for the Error.

+ users: 5 (number)

  The number of users affected by the Error. If the Error request includes filters, this will be a filtered count.

+ `reopen_rules` (ErrorReopenRules)

  Snooze rules for automatically reopening the Error

+ status: open (ErrorStatus)

  The Error's work flow status. Must be one of:

+ `linked_issues` (array[ErrorCreatedIssue], optional)

  Issues linked to this error

+ `comment_count`: 5 (number)

  The number of comments on the Error. This count does not consider time Filters.

+ `most_recent_event` (ElasticSearchEventApiView, optional)

  The most recent occurrence of the Error. This is a terse representation of
  the Event. The full event can be retrieved by id from the [Events API](/#reference/errors/events)

+ `missing_dsyms` (array)

  An array of UUIDs for dSYMs that were not [uploaded](https://docs.bugsnag.com/platforms/ios/symbolication-guide/) but are required to
  symbolicate the Error. Applies to iOS, macOS, and tvOS projects.

+ `grouping_reason`: `frame-inner` (enum[string], nullable)

  The reason that events were grouped into this error.

  + Members
    + `frame-code` - same code location
    + `frame-inner` - top in-project stackframe
    + `context-inner` - context
    + `error_class-inner` - error class
    + `user_defined` - custom grouping hash
    + `js-blob` - from blobs (JS only)
    + `js-tag` - same inline script (JS only)
    + `js-html` - same page location (JS only)
    + `js-eval` - originate from eval statements (JS only)
    + `js-structure` - same point in the code using the structure of the surrounding minified code (JS only)
    + `js-codebase` - same point in the code using the surrounding minified code (JS only)
    + `js-location` - similar location (JS only)

+ `grouping_fields` (object)

  A map of the fields and their values that were used for the grouping of this error. Long field values may be truncated. The specific fields included in this response are dependent on the `grouping_reason`.

  + Sample
    + lineNumber: 5
    + errorClass: ErrorClass

## GamesConsoleConnector (object)
+ `id`: `6368efb0d1befa003d22c7f4` (string, required) - The ID of the Games Console Connector.
+ `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project that the Connector belongs to.
+ `type` (GamesConsoleConnectorType, required) - The type of Connector.
+ `configuration` (object, required) - The configuration details for the Games Console Connector.
  + `switch` (SwitchConfigurationNoToken, optional) - The configuration for calling onto the Nintendo Switch API (required if type is nintendo-switch).
+ `state` (GamesConsoleConnectorState, required) - The state of the Connector.

## GamesConsoleConnectorType (enum[string])
### Members
+ `nintendo_switch`

## SwitchConfigurationNoToken (object)
+ `application_identifier`: `0100d420179ba000` (string, required) - The Nintendo ID of the Switch application.
+ `environment` (enum[string], required) - The environment that the configuration details apply to.
  + Members
    + `production`
    + `development`
+ `release_stage`: `development` (string, optional) - The release stage to apply to any Events generated from crash reports extracted with this Switch Configuration

## SwitchConfigurationWithToken (SwitchConfigurationNoToken)
+ `access_token`: `d0reuc5pdjjz9zd0fzzioao1naljuc` (string, required) - The access token to use to use to obtain the crash reports.

## GamesConsoleConnectorState (object)
+ `status` (enum[string], required) - The status of the Connector.
    + Members
      + active - The Connector is healthy and we are actively polling for new reports.
      + failing - We are getting transient failures when polling the API. We will keep retrying (with backoff) and will fill in the data when we are next successful.
      + failed - The Connector has failed (due to a permanent error or repeated transient errors) and we are no longer polling it.
      + disabled - The Connector has been disabled and we are not polling it.
+ `last_successful_at`: `2022-10-17 14:38:45 +0000` (string, optional) - The date and time that we last successfully polled the API.
+ `last_failure_at`: `2022-10-17 13:38:45 +0000` (string, optional) - The date and time that we last failed to poll the API.
+ `last_status_code`: 200 (number, optional) - The status code from the last time that we polled the Connector’s API (only present after we've performed the first poll of the API).
+ `next_check_at`: `2022-10-17 15:38:45 +0000` (string, optional) - The date and time that we will next poll the API (absent if the status is failed or disabled).

## GamesConsoleConnectorCreateUpdateRequest (object)
+ `type` (GamesConsoleConnectorType, required) - The type of Connector.
+ `configuration` (object, required) - The configuration details for the Games Console Connector.
  + `switch`: (SwitchConfigurationWithToken, optional) - The configuration for calling onto the Nintendo Switch API (required if type is nintendo-switch).

## GamesConsoleConnectorListRequest (object)
+ `per_page`: 30 (number, optional) - How many results to return per page.
+ `offset`: `3fdssr4stk` (string, optional) - The offset for the desired page of results.
+ `type` (GamesConsoleConnectorType, required) - The type of Connector.

## ErrorAssignmentRuleApiView (object)
+ `id`: 6368efb0d1befa003d22c7f4 (string, required) - The ID of the ErrorAssignmentRule
+ `position`: 3 (number, required) - The priority of the ErrorAssignmentRule compared to other rules on the same project, where a smaller position value indicates higher priority. 1-indexed.
+ `assignee` (ErrorAssignmentRuleAssigneeApiView, nil, required) - The User or Team to be assigned. Null if the User or Team does not exist or if the User is no longer a member of the Project's Organization.
+ `pattern` (ErrorAssignmentRulePatternApiView, required) - The matching logic to apply to the rule scope.
+ `invalid`: true (boolean, optional) - True if the rule's assigned team or user does not exist, otherwise unset.
+ `invalid_reason`: deleted_user (enum[string], optional) - The reason that the rule was disabled. Unset if `invalid` is not `true`.
  + deleted_team
  + deleted_user
  + project_access_team
  + project_access_user
+ `comment`: Green team handles mailer errors (string, optional) - Freeform text about the rule.

## ErrorAssignmentRuleAssigneeApiView (object)
+ `type`: user (enum[string], required) - Whether the rule will assign to a team or a specific user.
  + user
  + team
+ `id`: 6368efb0d1befa003d22c7d3 (string, required) - The ID of the team or user to be assigned.
+ `name`: Jane Doe (string, required) - The name of the team or user to be assigned.
+ `email`: jane@example.com (string, optional) - The email of the user to be assigned (if applicable).

## ErrorAssignmentRulePatternApiView (object)
+ `type`: payload_path (enum[string], required) - The pattern variant.
  + payload_path
  + file_path
  + code_method
+ `scope`: metaData.roles.team (string, required) - The file glob or dot notation payload path that, when matched, will activate the path.
+ `match_value`: green (string, optional) - The value to match to the resolved scope - required for payload_path matches, unset for file_path and code_method matches.
+ `match_frame`: any (enum[string], optional) - Whether to match on any line or only the first line - required for file_path and code_method matches, unset for payload_path mathces.
  + any
  + first

## ErrorAssignmentRulesSummary (object)
+ `active_count`: 496 (number, required) - The number of active ErrorAssignmentRules on the Project.
+ `invalid_count`: 28 (number, required) - The number of invalid ErrorAssignmentRules on the Project.

## ErrorAssignmentRuleCreateRequest (object)
+ `assignee` (ErrorAssignmentRulesAssignee, required) - The assignee Team or User details.
+ `pattern` (ErrorAssignmentRulePatternApiView, required) - The matching logic to apply to the rule scope.
+ `comment`: `Green team handles mailer errors` (string, optional) - Freeform text about the rule.

## ErrorAssignmentRuleUpdateRequest (object)
+ `position`: 3 (number, required) - The priority of the ErrorAssignmentRule compared to other rules on the same project, where a smaller position value indicates higher priority. 1-indexed.
+ `assignee` (object, required) - The assignee Team or User details.
  + `type`: user (enum[string], required) - Whether the rule will assign to a team or a specific user.
      + `user`
      + `team`
  + `id`: `6368efb0d1befa003d22c7f4` (string, required) - The ID of the User or Team being assigned the rule.
  + `name`: `team name` (string, optional) - The name of the Team is a Team is being assigned the rule.
  + `email`: `example@example.com` (string, optional) - The email of the User if a User is being assigned the rule.
+ `pattern` (ErrorAssignmentRulePatternApiView, required) - The matching logic to apply to the rule scope.
+ `comment`: `Green team handles mailer errors` (string, optional) - Freeform text about the rule.

## ErrorAssignmentRulesReplaceRequest (object)
+ `assignment_rules`: (array[ErrorAssignmentRuleCreateRequest])

## ErrorAssignmentRulesAssignee (object)
+ `type`: user (enum[string], required) - Whether the rule will assign to a team or a specific user.
  + `user`
  + `team`
+ `id`: `6368efb0d1befa003d22c7f4` (string, required) - The ID of the User or Team being assigned the rule.

## ProjectNetworkGroupingRuleset (object)
+ `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the project this is for
+ `endpoints` (array[string], required) - The URL patterns by which network spans are grouped.

## OrganizationNetworkGroupingRuleset (object)
+ `organization_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the organization this is for
+ `endpoints` (array[string], required) - The URL patterns by which network spans are grouped.

## NetworkGroupingRulesetRequest (object)
+ `endpoints` (array[string], required) - The URL patterns by which network spans are grouped.

## Span (object)
+ `id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the span
+ `parent_span_id`: `6368f07a518fa064ce036bdb` (string, optional) - The ID of the parent span if applicable
+ `trace_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the trace
+ `category`: `app_start` (string, required) - The category of the span
+ `name`: `My Span` (string, required) - The name of the span
+ `display_name`: `App Start - My Span` (string, required) - The name of the span for display purposes
+ `duration`: 1000 (number, required) - The duration of the span in milliseconds
+ `timestamp`: `2023-04-11T13:14:25.123Z` (string, required) - The timestamp we've attributed to the Span
+ `time_adjustment_type`: `adjusted` (enum[string], required) - How the time was adjusted
  + `adjusted`
  + `device`
  + `received`
  + `unadjusted`
+ `start_time`: `2023-04-11T13:14:25.123Z` (string, required) - The time the span started
+ `is_first_class`: true (boolean, required) - Whether the span is first class or just a sub-span
+ `build_id`: `6368f07a518fa064ce036bdb` (string, optional) - The ID of the build that this span is associated with
+ `project_id`: `6368f07a518fa064ce036bdb` (string, optional) - The ID of the project that this span is associated with
+ `span_group_id`: `1.app_start.My Span` (string, optional) - The id of the span group if applicable
+ `virtual_span_group_id`: `1.page_load./my/route` (string, optional) - The raw id of the page load span group if applicable
+ `statistics` (SpanStatistics, optional) - Any additional statistics for the span
+ `metadata` (SpanMetadata, optional) - Additional metadata for the span

## SpanStatistics (object)
+ `category_statistics`: (SpanCategoryStatistics, optional) - Statistics for the span category

## SpanCategoryStatistics (object)
+ `full_page_load`: (SpanCategoryStatisticsFullPageLoad, optional) - Statistics for the full_page_load category

## SpanCategoryStatisticsFullPageLoad (object)
+ `largest_contentful_paint`: 1000 (number, optional) - The largest contentful paint time in milliseconds
+ `first_input_delay`: 1000 (number, optional) - The first input delay time in milliseconds
+ `first_input_delay_ended_at`: `2023-04-11T13:14:25.123Z` (string, optional) - The time the first input delay ended
+ `cumulative_layout_shift`: 0.2 (number, optional) - Measure of how often visible elements move unexpectedly
+ `time_to_first_byte`: 1000 (number, optional) - The time to first byte in milliseconds
+ `first_contentful_paint`: 1000 (number, optional) - The first contentful paint time in milliseconds

## SpanSystemMetrics
+ `cpu`: (SpanSystemMetricsCpu, optional) - Details about the CPU usage of the Span
+ `memory`: (SpanSystemMetricsMemory, optional) - Details about the device memory of the Span

## SpanSystemMetricsCpu
+ `total`: (SpanSystemMetricsCpuStatistics, required) - Details of the total CPU usage measured at intervals across the Span's lifetime
+ `main_thread`: (SpanSystemMetricsCpuStatistics, required) - Details of the main thread CPU usage measured at intervals across the Span's lifetime

## SpanSystemMetricsMemory
+ `device`: (SpanSystemMetricsMemoryStatistics, required) - Details of the device memory measured at intervals across the Span's lifetime
+ `android_runtime`: (SpanSystemMetricsMemoryStatistics, optional) - Details of the Android Runtime memory measured at intervals across the Span's lifetime

## SpanSystemMetricsCpuStatistics
+ `mean`: 0.5 (number, required) - The mean value of the measurements (as a percentage)

## SpanSystemMetricsMemoryStatistics
+ `mean`: 10000 (number, required) - The mean value of the measurements (in bytes)

## SpanMetadata (object)
+ `key`: `device.id` (string, required) - The key of the metadata
+ `value`: `1234` (string, required) - The value of the metadata. May be a string or an integer.
+ `level` (SpanMetadataLevel, required) - The location of the metadata attribute within the Trace payload

## SpanMetadataLevel (enum[string])
+ `unspecified`
+ `resource`
+ `span`

## SpanGroupCategory (enum[string])
+ `app_start`
+ `view_load`
+ `page_load`
+ `route_change`
+ `full_page_load`
+ `network`
+ `custom`
+ `navigation`
+ `inbound_http`
+ `outbound_http`
+ `inbound_rpc`
+ `outbound_rpc`
+ `custom_server`
+ `frozen_frame`

## SpanGroupSummary (object)
+ `id`: `1.app_start.AppStart/Cold` (string, required) - The ID of the Span Group.
+ `category`: `app_start` (SpanGroupCategory, required) - The performance category of the Span Group.
+ `name`: `AppStart/Cold` (string, required) - The name of the Span Group.
+ `display_name`: `AppStart - Cold` (string, required) - The name of the Span Group for display purposes.

## SpanGroup (object)
+ `id`: `1.app_start.AppStart/Cold` (string, required) - The ID of the Span Group.
+ `category`: `app_start` (SpanGroupCategory, required) - The performance category of the Span Group.
+ `name`: `AppStart/Cold` (string, required) - The name of the Span Group.
+ `display_name`: `AppStart - Cold` (string, required) - The name of the Span Group for display purposes.
+ `is_starred`: false (boolean, optional) - Whether the requesting user has starred the Span Group.
+ `statistics`: (SpanGroupStatistics, optional) - Statistics of spans in the Span Group.
+ `performance_target`: (PerformanceTarget, optional) - The Performance Target for the Span Group.

## SpanGroupProperties (object) - Only one of the following is populated, based on the span group category type.
  + `app_start` (SpanGroupPropertiesAppStart, optional) - Properties for the app_start category
  + `view_load` (SpanGroupPropertiesViewLoad, optional) - Properties for the view_load category
  + `network` (SpanGroupPropertiesNetwork, optional) - Properties for the network category
  + `page_load` (SpanGroupPropertiesPageLoad, optional) - Properties for the page_load category
  + `route_change` (SpanGroupPropertiesRouteChange, optional) - Properties for the route_change category
  + `full_page_load` (SpanGroupPropertiesFullPageLoad, optional) - Properties for the full_page_load category
  + `navigation` (SpanGroupPropertiesNavigation, option) - Properties for the navigation category

## SpanGroupPropertiesAppStart
  + `type` (AppStartType, required) - The type of startup for the app (based on whether it was loaded from memory etc)

## AppStartType (enum) - The app start type
  + `unspecified`
  + `hot`
  + `warm`
  + `cold`
  + `unity_runtime`
  + `react_native_init`
  + `android_hot`
  + `android_warm`
  + `android_cold`
  + `ios_warm`
  + `ios_cold`
  + `flutter_init`

## SpanGroupPropertiesViewLoad
  + `view_type`: (ViewType, required) - The type of view being loaded
  + `view_name`: (string, required) - The name of the view being loaded

## ViewType (enum) - The view type
  + `unspecified`
  + `activity`
  + `fragment`
  + `compose`
  + `ui_kit`
  + `swift_ui`
  + `unity_scene`

## SpanGroupPropertiesNetwork
  + `request`: (SpanGroupPropertiesNetworkRequestProperties, required) - Provides specific properties for elements in the network category

## SpanGroupPropertiesNetworkRequestProperties
  + `http_method`: (HttpMethod, required) - The HTTP method of the request
  + `domain`: (string, required) - The domain of the request
  + `endpoint`: (string, optional) - The endpoint for the request. This will be set according to the network grouping rules on the Project. If no rule applies (at the time the Span is received) the field will be omitted.

## HttpMethod (enum) - The HTTP method of the request
  + `unspecified`
  + `get`
  + `head`
  + `post`
  + `put`
  + `delete`
  + `connect`
  + `options`
  + `trace`
  + `patch`

## SpanGroupPropertiesFullPageLoad
  + `route`: `posts/:id/comments` (string, required) - The route that was being loaded

## SpanGroupPropertiesRouteChange
  + `route`: `posts/:id/comments` (string, required) - The route that was being navigated to

## SpanGroupPropertiesPageLoad
  + `route`: `posts/:id/comments` (string, required) - The route that was being loaded / navigated to

## SpanGroupPropertiesNavigation
  + `route`: `posts/:id/comments` (string, required) - The route that was navigated to

## SpanGroupDescription
+ `id`: `1.app_start.AppStart/Cold` (string, required) - The ID of the Span Group.
+ `name`: `AppStart/Cold` (string, required) - The name of the Span Group being described.
+ `display_name`: `AppStart - Cold` (string, required) - The name of the Span Group for display purposes.

## SpanGroupStatistics (object)
+ `duration_statistics`: (SpanGroupDurationStatistics, required) - The aggregated statistics for the filtered Span durations.
+ `total_spans`: 3264 (number, required) - The total number of Spans that were sampled in the bucketed time period.
+ `estimated_spans`: 4321 (number, optional) - The estimated total of Spans that were generated in the bucketed time period, before sampling was applied.
+ `last_seen`: `2022-10-17 15:30:00 +0000` (string, required) - When the last filtered Span within this Span Group was seen.
+ `category_statistics`: (SpanGroupCategoryStatistics, optional) - Statistics that are specific to the Span Group's category. This is populated by only one property object based on the category type.
+ `rendering_statistics`: (RenderingMetrics, optional) -  Statistics about rendering issues encountered while the Spans in the Span Group were active.

## SpanGroupDurationStatistics (object)
+ `p50`: 1000 (number, required) - The P50 duration (in ms).
+ `p75`: 1200 (number, required) - The P75 duration (in ms).
+ `p90`: 1500 (number, required) - The P90 duration (in ms).
+ `p95`: 1750 (number, required) - The P95 duration (in ms).
+ `p99`: 2000 (number, required) - The P99 duration (in ms).

## Category (enum) - Span group performance categories.
  + `unspecified`
  + `app_start`
  + `view_load`
  + `network`
  + `custom`
  + `full_page_load`
  + `route_change`
  + `page_load`
  + `navigation`
  + `inbound_http`
  + `inbound_rpc`
  + `outbound_http`
  + `outbound_rpc`

## SpanGroupCategoryStatistics (object)
+ `full_page_load`: (SpanGroupCategoryStatisticsFullPageLoadStatistics, optional) - Statistics for the full_page_load category

## SpanGroupCategoryStatisticsFullPageLoadStatistics (object)
+ `largest_contentful_paint`: 100 (number, optional) - P75 Time (integer, in ms) from a navigation event to the largest element on the page rendered
+ `first_input_delay`: 200 (number, optional) - P75 Time (integer, in ms) from a user interaction with the page (e.g. click) to the page becoming interactive
+ `cumulative_layout_shift`: 0.1234 (number, optional) - P75 Measure (float) of how often visible elements move unexpectedly
+ `time_to_first_byte`: 300 (number, optional) - P75 Time (integer, in ms) from a navigation event starting to the first byte arriving
+ `first_contentful_paint`: 400 (number, optional) - P75 Time (in ms) from a navigation event to the first element rendered

## RenderingMetrics (object)
+ `slow_frames`: (RenderingMetricsSlowFrames, optional) - Details about the slow frames (those that missed their render deadline)
+ `frozen_frames`: (RenderingMetricsFrozenFrames, optional) - Details about the frozen frames (those that took longer than 700ms to render)
+ `total_frames`: (RenderingMetricsTotalFrames, optional) - Details about the total number of frames

## RenderingMetricsSlowFrames (object)
+ `span_count`: 10 (number, required) - The number of Spans that has at least one slow frame

## RenderingMetricsFrozenFrames (object)
+ `span_count`: 25 (number, required) - The number of Spans that has at least one frozen frame

## RenderingMetricsTotalFrames (object)
+ `span_count`: 100 (number, required) - The number of Spans that tracked at least one frame

## SystemMetrics (object)
+ `cpu` (SystemMetricsCpu, optional) - Details about the CPU usage of the Spans
+ `memory` (SystemMetricsMemory, optional) - Details about the memory usage of the Spans

## SystemMetricsCpu (object)
+ `total` (SystemMetricsCpuTotal, required) - Aggregated statistics for the total CPU usage for the Spans in the Span Group
+ `main_thread` (SystemMetricsCpuMainThread, required) - Aggregated statistics for the main thread CPU usage for the Spans in the Span Group

## SystemMetricsMemory (object)
+ `device` (SystemMetricsMemoryDevice, required) - Aggregated statistics for the device memory usage for the Spans in the Span Group
+ `android_runtime` (SystemMetricsMemoryAndroidRuntime, optional) - Aggregated statistics for the Android Runtime memory usage for the Spans in the Span Group

## SystemMetricsCpuTotal (object)
+ `mean` (SystemMetricsCpuStatistics, required) - The aggregated mean value

## SystemMetricsCpuMainThread (object)
+ `mean` (SystemMetricsCpuStatistics, required) - The aggregated mean value

## SystemMetricsMemoryDevice (object)
+ `mean` (SystemMetricsMemoryStatistics, required) - The aggregated mean value

## SystemMetricsMemoryAndroidRuntime (object)
+ `mean` (SystemMetricsMemoryStatistics, required) - The aggregated mean value

## SystemMetricsCpuStatistics (object)
+ `span_count`: 100 (number, required) - The number of Spans that reported CPU system metric
+ `p50`: 0.1 (number, optional) - The P50 CPU usage percentage between 0 and 100 - (Only present if span_count > 0)
+ `p75`: 0.2 (number, optional) - The p75 CPU usage percentage between 0 and 100 - (Only present if span_count > 0)
+ `p90`: 0.3 (number, optional) - The p90 CPU usage percentage between 0 and 100 - (Only present if span_count > 0)
+ `p95`: 0.4 (number, optional) - The p95 CPU usage percentage between 0 and 100 - (Only present if span_count > 0)
+ `p99`: 0.5 (number, optional) - The p99 CPU usage percentage between 0 and 100 - (Only present if span_count > 0)

## SystemMetricsMemoryStatistics (object)
+ `span_count`: 100 (number, required) - The number of Spans that reported memory system metrics of this type
+ `p50`: 10000 (number, optional) - The P50 memory usage (in bytes) - (Only present if span_count > 0)
+ `p75`: 20000 (number, optional) - The p75 memory usage (in bytes) - (Only present if span_count > 0)
+ `p90`: 30000 (number, optional) - The p90 memory usage (in bytes) - (Only present if span_count > 0)
+ `p95`: 40000 (number, optional) - The p95 memory usage (in bytes) - (Only present if span_count > 0)
+ `p99`: 50000 (number, optional) - The p99 memory usage (in bytes) - (Only present if span_count > 0)

## SpanGroupTimelinePoint (object)
+ `bucket_start`: `2022-10-17 15:00:00 +0000` (string, required) - The timestamp (inclusive) representing the start point of the bucketed statistics.
+ `bucket_end`: `2022-10-17 15:30:00 +0000` (string, required) - The timestamp (exclusive) representing the end point of the bucketed statistics.
+ `statistics` (SpanGroupStatistics, optional) - Statistics for the time period.

## SpanGroupDistributionPoint (object)
+ `bucket_min`: 100 (number, required) - The minimum time (in milliseconds; inclusive) represented by this distribution point.
+ `bucket_max`: 200 (number, required) - The maximum time (in milliseconds; exclusive) represented by this distribution point.
+ `total_spans`: 1000 (number, required) - The number of spans represented by this distribution point.

## PageLoadSpanGroup (object)
+ `id`: `1.page_load.AppStart/Cold` (string, required) - The ID of the (virtual) Span Group.
+ `display_name`: `AppStart - Cold` (string, required) - The name of the (virtual) Span Group for display purposes.
+ `is_starred`: false (boolean, optional) - Whether the requesting user has starred the (virtual) Span Group.
+ `full_page_load_span_group`: (SpanGroup, required) - Span Group of full page load spans associated with this virtual Span Group.
+ `route_change_span_group`: (SpanGroup, required) - Span Group of route change spans associated with this virtual Span Group.

## TraceField (object)
+ `display_id`: `device.connection_type` (string, required) - Identifier that is used as the key for filtering by this field.
+ `filter_options` (TraceFieldOptions, required) - The values to filter by.
+ `custom`: `true` (boolean, required) - Whether or not this Trace Field is for a user-specified attribute rather than a pre-defined filter.
+ `metadata_key` (string, optional) - The key in metadata to use for this Trace Field. Only present when `custom` is `true`.
+ `metadata_location` (enum, optional) - The location of the metadata key within a Trace. Only present when `custom` is `true`.
  + Members
    + `span_attribute` - The metadata key is with the span attribute of the Trace.
    + `resource_attribute` - The metadata key is with the resource attribute of the Trace.
+ `field_type` (enum, optional) - The type of the field. Only present when `custom` is `true`.
  + Members
    + `string`
    + `boolean`
    + `number`

## TraceFieldOptions (object)
+ `name`: `Connection type` (string, required) - Human readable display name for the filter.
+ `description`: `model of the device the span was recorded on` (string, required) - Description of what the filter is.
+ `values`: (array[TraceFieldOptionValue], optional) - Possible values for this filter, only if this filter has a fixed set of values.
+ `match_types` (array[enum[string]], required) - The match types that are supported by this filter.
  + Members
    + `eq` - Equals.
    + `ne` - Not equals.
    + `lt` - Less than.
    + `gt` - Greater than.
    + `empty` - Is empty
+ `searchable`: true (boolean, required) - Whether the filter is searchable in the search bar suggestions.

## TraceFieldOptionValue (object)
+ `id`: `2g` (string, required) - The identifier to use when filtering by this value.
+ `name`: `2G` (string, required) - A human readable represenation of this value.

## TraceFieldSavedSearchSummary
+ `total_saved_searches`: `20` - The number of saved searches which use the Trace Field

## PerformanceFilter
+ `key`: `event.since` (string, required) - Identifier that is used as the key when filtering by this field.
+ `filter_values` (array[PerformanceFilterValue]) - The values to filter by.

## PerformanceFilterValue
+ `value`: `30d` (string, required)
+ `match_type`: (enum, required)
  + Members
    + eq - Filter for items that match the value
    + ne - Filter for items that don't match the value
    + lt - Filter for items that are less than the value
    + gt - Filter for items that are greater than the value
    + empty - Filter for items that are not populated or missing

## SpanUsageBase
+ `estimated`: 10000 (number, required) - The number of estimated spans generated.
+ `client_dropped`: 2000 (number, required) - The number of spans dropped at client due to sampling.
+ `received`: 8000 (number, required) - The number of spans received.
+ `saved`: 7000 (number, required) - The number of spans saved.
+ `oversized`: 500 (number, required) - The number of oversized spans.
+ `failed_integrity`: 250 (number, required) - The number of spans that failed integrity.
+ `malformed`: 250 (number, required) - The number of malformed spans.

## SpanServiceNameSettings
+ `automatically_match_on_project_name`: true (boolean, required) - Whether to automatically match spans to a project based on the project name.

## AccountSpanUsageTimelinePoint (SpanUsageBase)
+ `bucket_start`: `2018-11-21T00:00:00.000Z` (string, required) - Timestamp representing the start point of the bucketed span counts, inclusive.
+ `bucket_end`: `2018-11-22T00:00:00.000Z` (string, required) - Timestamp representing the end point of the bucketed span counts, exclusive.
+ `allocated`: 15000 (number, required) - The number of spans allocated to the organization.
+ `plan`: 20000 (number, required) - The number of spans specified on the organization's plan.

## ProjectManagedSpanUsageTimelinePoint (SpanUsageBase)
+ `bucket_start`: `2018-11-21T00:00:00.000Z` (string, required) - Timestamp representing the start point of the bucketed managed span counts, inclusive.
+ `bucket_end`: `2018-11-22T00:00:00.000Z` (string, required) - Timestamp representing the end point of the bucketed managed span counts, exclusive.
+ `allocated`: 15000 (number, required) - The number of managed spans allocated to the project.
+ `predicted`: 20000 (number, required) - The number of managed spans predicted for the project.

## ProjectManagedSpanUsageSpansSummary (SpanUsageBase)
+ `date`: `2023-06-21` (string, required) - Date of the reported managed spans usage.
+ `project_id`: `6368f07a518fa064ce036bdb` (string, required) - ID of the project.
+ `allocated`: 15000 (number, required) - The number of managed spans allocated to the project.
+ `predicted`: 20000 (number, required) - The number of managed spans predicted for the project.

## AccountUnmanagedSpanUsageTimelinePoint
+ `bucket_start`: `2018-11-21T00:00:00.000Z` (string, required) - Timestamp representing the start point of the bucketed unmanaged span counts, inclusive.
+ `bucket_end`: `2018-11-22T00:00:00.000Z` (string, required) - Timestamp representing the end point of the bucketed unmanaged span counts, exclusive.
+ `saved`: 7000 (number, required) - The number of unmanaged spans saved.
+ `unmapped`: 8000 (number, required) - The number of spans that were not automatically mapped to a project by service.name attribute.
+ `plan`: 20000 (number, required) - The number of unmanaged spans specified on the organization's plan.
+ `quota_reached_at`: `2018-11-23T00:00:00.000Z` (string, optional) - Timestamp representing the time the unmanaged span quota was reached for the organization (if applicable).

## ProjectUnmanagedSpanUsageSpansSummary
+ `date`: `2023-06-21` (string, required) - Date of the reported unmanaged spans usage.
+ `project_id`: `6368f07a518fa064ce036bdb` (string, required) - ID of the project.
+ `saved`: 15000 (number, required) - The number of unmanaged spans saved on the project.
+ `payloads_oversized`: 500 (number, required) - The number of oversized payloads.

## ProjectUnmanagedSpanUsageTimelinePoint
+ `bucket_start`: `2018-11-21T00:00:00.000Z` (string, required) - Timestamp representing the start point of the bucketed span counts, inclusive.
+ `bucket_end`: `2018-11-22T00:00:00.000Z` (string, required) - Timestamp representing the end point of the bucketed span counts, exclusive.
+ `saved`: 15000 (number, required) - The number of unmanaged spans saved on the project.

## AccountUnmanagedRateLimitingPeriod
+ `from`: `2018-11-21T00:00:00.000Z` (string, required) - Timestamp representing the start of the unmanaged rate limiting period.
+ `to`: `2018-11-22T00:00:00.000Z` (string, required) - Timestamp representing the end of the unmanaged rate limiting period.

## AccountUnmappedSpans
+ `name`: `service.name` (string, required) - The name of the service for which there are unmapped spans.
+ `count`: `14000` (string, required) - The count of unmapped spans for the service.

## OnboardingChecklist
+ `id`: `6368f07a518fa064ce036bdb` (string, required) - ID of the onboarding checklist.
+ `organization_id`: `6368f07a518fa064ce036bdb` (string, required) - ID of the organization.
+ `tasks`: (array[OnboardingChecklistTask]) - The array of tasks
+ `last_seen`: `2018-11-21T00:00:00.000Z` (string, required) - Timestamp representing the last time a user view this onboarding checklist

## OnboardingChecklistTask
+ `key`: (enum[string], required) - The key name of the onboarding checklist task.
  + `send_event`
  + `invite_user`
  + `fix_error`
  + `create_issue_tracker`
  + `create_team_notification`
  + `send_span`
  + `create_custom_filter`
  + `create_saved_search`
  + `send_build_source_control`
  + `create_additional_project`
+ `status`: (enum[string], required) - The status of the onboarding checklist task.
  + `pending`
  + `completed`
  + `skipped`
+ `status_changed_at`: `2018-11-21T00:00:00.000Z` (string, required) - Timestamp representing the last time a this onboarding checklist task was changed,
+ `completed_from_skipped`: false (boolean, required) - Whether the onboarding checklist task was skipped.

## ProjectRateLimitingSummary
+ `has_recently_been_rate_limited`: true (boolean) - Whether the project has been rate-limited in the last two UTC days.
+ `project_approaching_rate_limit`: true (boolean) - Whether the project is approaching its rate limit.
+ `account_approaching_rate_limit`: false (boolean) - Whether the account is approaching its rate limit.

## Framework
+ `type`: `rails` (string, required)
+ `name`: `Rails` (string, required)
+ `display_type`: `server` (string, required)
+ `base_notifier`: `ruby` (string, required)
+ `has_source_maps`: `false` (boolean, required) - Whether the framework supports source maps.
+ `has_dsyms`: `false` (boolean, required) - Whether the framework supports dSYMs.
+ `installation_methods`: (array[string], required) - The possible installation methods for the framework.
+ `languages`: (array[string], required) - The languages that the framework supports.
+ `docs_url`: `https://docs.bugsnag.com/platforms/ruby/rails` (string, required)
+ `event_field_examples` (object, required) - Examples values for event fields specific to the framework.

## SystemAnnouncement
+ `headline`: `An Important Message` (string)
+ `content`: `Something really important is happening` (string)
+ `learnMoreURL`: `https://learn.more.com/123` (string)

## SpanServiceNameMapping
+ `id`: `587826d7000000000000000f` (string, required) - The ID of the mapping.
+ `project_summary`: (SpanServiceNameMappingProjectSummary, required) - A summary of the Project that Spans should get mapped to.
+ `service_name`: `My Server` (string, required) - The name of the service that should map to the Project (based on the service.name Resource Attribute in the Span).

## SpanServiceNameMappingProjectSummary
+ `id`: `587826d70000000000000002` (string, required) - The ID of the Project.
+ `name`: `Website Project` (string, otional) - The name of the Project, if it is found.
+ `type`: `rails` (string, opitonal) - The type of the Project, if it is found.
+ `slug`: `website` (string, optional) - The slug used for the Project, if it is found.

## PerformanceTarget
+ `id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Performance Target.
+ `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project that the Performance Target belongs to.
+ `type` (PerformanceTargetType, required) - The type of Performance Target.
+ `span_group`: (PerformanceTargetSpanGroupDetails, required) - The details of the Span Group(s) that the Performance Target is for.
+ `config`: (PerformanceTargetConfiguration, required) - The configuration details for the Performance Target.

## PerformanceTargetSpanGroupDetails
+ `category`: (SpanGroupCategory, required) - The category of the affected Span Group(s).
+ `id`: `1.app_start.AppStart/Cold` (string) - The ID of the Span Group. Required when Performance Target type is span_group.
+ `display_name`: `AppStart - Cold` (string) - The name of the Span Group for display purposes. Required when Performance Target type is span_group.

## PerformanceTargetConfiguration
+ `state`: (enum[string], required) - The state of the Performance Target.
  + `enabled`
  + `disabled`
+ `warning_performance`: (PerformanceTargetConfigurationThreshold) - The warning performance threshold for the Performance Target. Required when state is enabled.
+ `critical_performance`: (PerformanceTargetConfigurationThreshold) - The critical performance threshold for the Performance Target. Requires the advanced performance targets feature.

## PerformanceTargetConfigurationThreshold
+ `duration`: 1000 (number, required) - The duration threshold in milliseconds.

## PerformanceTargetType (enum[string])
  + `category`
  + `span_group`

## PerformanceTargetCategoryCount
+ `category`: (SpanGroupCategory, required) - The category of Span Group that the count relates to.
+ `count`: 100 (number, required) - The number of Performance Targets (of the requested type) with a matching category.

## PerformanceTargetCreateRequest
+ `type` (PerformanceTargetType, required) - The type of performance target to create
+ `span_group`: (PerformanceTargetSpanGroupDetails, required) - The span group to restrict results to.
+ `config`: (PerformanceTargetConfiguration, required) - The configuration for the performance target.

## PerformanceMonitor
+ `id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Performance Monitor.
+ `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project that the Performance Monitor belongs to.
+ `type` (PerformanceMonitorType, required) - The type of Performance Monitor.
+ `state`: (PerformanceMonitorState, required) - The state of the Performance Monitor.
+ `config`: (PerformanceMonitorConfiguration, required) - The configuration details for the Performance Monitor.
+ `notification_ids`: `587826d70000000000000006`, `587826d70000000000000007` (array[string], optional) - The IDs of any non-email Notifications that are assigned to this Performance Monitor.
+ `last_escalated_at`: `2018-11-21T00:00:00.000Z` (string, optional) - The date and time that an Alert on the Performance Monitor last increased in severity.
+ `alert_summary`: (PerformanceMonitorAlertSummary, optional) - A summary of the Alerts on this Performance Monitor (only present if requested).

## PerformanceMonitorType (enum[string])
  + `duration_threshold` - A fixed threshold based on a duration percentile.

## PerformanceMonitorState (enum[string])
  + `enabled` - The Performance Monitor is enabled and should be checking the triggers.
  + `disabled` - The Performance Monitor is disabled and should not check for triggers.

## PerformanceMonitorConfiguration
+ `name`: `My Monitor` (string, required) - A user-defined name for the Performance Monitor.
+ `period`: `30m` (string, required) - The period to check the data across (positive integer followed by granularity of m/h/d e.g. 2h, max 1d).
+ `comparator`: (enum[string], required) - How to check the thresholds against the target value.
  + `greater_than`
  + `less_than`
+ `minimum_span_count`: 3000 (number, required) - The mininum number of Spans that need to have been seen in the period in order for the Performance Monitor to trigger. This is used to avoid being notified for statistically insignificant data (e.g. a P90 when there are 5 Spans)
+ `warning_threshold`: 1000 (number, optional) - The threshold that should be treated as a warning state if passed. Optional, but one of warning_threshold or critical_threshold must be present.
+ `critical_threshold`: 2000 (number, optional) - The threshold that should be treated as a critical state if passed. Optional, but one of warning_threshold or critical_threshold must be present.
+ `percentile`: p90 (enum[string], required) - The percentile to use when checking the thresholds.
  + `p50`
  + `p75`
  + `p90`
  + `p95`
  + `p99`
+ `applicable_span_groups`: (PerformanceMonitorApplicableSpanGroups, optional) - Rules for selecting Span Groups that are applicable to the Performance Monitor.
+ `filters`: (PerformanceMonitorFilters, optional) - Filters to apply to the Span Groups when getting the statistics.

## PerformanceMonitorApplicableSpanGroups
+ `categories`: (array[SpanGroupCategory], required) - The categories of Span Groups that the Performance Monitor applies to.
+ `excluded_span_group_rules`: (PerformanceMonitorSpanGroupRules, optional) - Rules for which Span Groups aren't appliable to this Performance Monitor. Each rule field is independent of the other, i.e. it will match on ID OR display name. Optional, but only one (or none) of excluded_span_group_rules or included_span_group_rules will be present.
+ `included_span_group_rules`: (PerformanceMonitorSpanGroupRules, optional) - Rules for which Span Groups are appliable to this Performance Monitor. Each rule field is independent of the other, i.e. it will match on ID OR display name. Optional, but only one (or none) of excluded_span_group_rules or included_span_group_rules will be present.

## PerformanceMonitorSpanGroupRules
+ `span_group_ids`: `1.app_start.[AppStart/AndroidHot]`, `1.view_load.[ViewLoad/Activity]MainActivity` (array[string], optional) - Matches on the Span Groups with these IDs.
+ `display_name_matches`: `Activity`, `Help Page` (array[string], optional) - Matches on Span Groups that have a display name containing one of these values (case-insensitive).

## PerformanceMonitorFilters
+ `basic_filter`: (PerformanceMonitorBasicFilter, optional) - The basic filters to apply. Can't be used in conjunction with a Saved Search.
+ `saved_search_id`: `587826d70000000000000004` (string, optional) - The ID of the Saved Search to filter data with. If multiple release stages are provided then the statistics will be across all of them (not per release stage).

## PerformanceMonitorBasicFilter
+ `release_stages`: `production`, `staging` (array[string], required) - The release stages that the Performance Monitor applies to.

## PerformanceMonitorAlertSummary
+ `overall_status`: (enum[string], required) - The overall status of Alerts on the Performance Monitor.
  + `good` - There are no active Alerts on the Performance Monitor.
  + `alerting` - There is one of more Alert in a WARNING or CRITICAL status on the Performance Monitor.
  + `disabled` - Alerts are disabled when the Performance Monitor is also disabled.
+ `critical_alert_count`: 3 (number, required) - The number of Alerts on the Performance Monitor in a CRITICAL status.
+ `warning_alert_count`: 2 (number, required) - The number of Alerts on the Performance Monitor in a WARNING status.

## PerformanceMonitorAlert
+ `id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Performance Monitor Alert.
+ `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project that the Performance Monitor Alert belongs to.
+ `performance_monitor_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Performance Monitor that the Alert has triggered on.
+ `span_group_summary`: (PerformanceMonitorSpanGroupSummary, required) - A summary of the Span Group that the Alert has triggered on.
+ `status`: (enum[string], required) - The status of the triggered Alert.
  + `warning` - The Alert has passed the warning threshold but not the critical threshold.
  + `critical` - The Alert has passed the critical threshold.
  + `resolved` - The Alert has been resolved, e.g. not passed the warning threshold or no longer applicable.
+ `resolution_reason`: (enum[string], optional) - The reason why the Alert got resolved, if the status is resolved.
  + `resolution_condition_met` - The condition for resolving the Alert got met, e.g. below the warning threshold.
  + `no_data` - No Spans were received in the Performance Monitor's period.
  + `span_group_removed` - The Span Group no longer applies to the Performance Monitor due to the applicable Span Groups rules being updated.
  + `performance_monitor_deleted` - The Performance Monitor associated with the Alert was deleted.
  + `performance_monitor_disabled` - The Performance Monitor associated with the Alert was disabled.
  + `performance_monitor_feature_access_lost` - The Organization no longer has access to Performance Monitors.
+ `status_changed_at`: `2018-11-21T00:00:00.000Z` (string, required) -  The date and time that the Alert last changed status, or the Alert was initially created if this is a new Alert.

## PerformanceMonitorSpanGroupSummary
+ `id`: `1.app_start.[AppStart/AndroidCold]` (string, required) - The ID of the Span Group that has triggered.
+ `parent_id`: `1.page_load./route` (string, optional) - The identifier of the parent page load span group if this span group is a full page load or a route change span group.
+ `category`: `app_start` (SpanGroupCategory, required) - The category of the Span Group that has triggered.
+ `category_name`: `App Start` (string, required) - The user-friendly name for the Span Group's category.
+ `display_name`: `AppStart - Android Cold` (string, required) - The display name of the Span Group that has triggered.

## RedactionRule
+ `id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Redaction Rule.
+ `project_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the Project that the Redaction Rule belongs to.
+ `path`: `metaData.user.auth_key` (string, required) - The path of the field to be redacted.
+ `created_by_user_id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the user that created the Redaction Rule.
+ `created_at`: `2018-11-21T00:00:00.000Z` (string, required) - The date and time that the Redaction Rule was created.
+ `updated_at`: `2018-11-21T00:00:00.000Z` (string) - The date and time that the Redaction Rule was last updated.
+ `updated_by_user_id`: `6368f07a518fa064ce036bdb` (string) - The ID of the user that last updated the Redaction Rule.
+ `last_used_day`: `2018-11-21T00:00:00.000Z` (string) - The day that the Redaction Rule was last applied to the entity.
+ `snapshot_entity`: (RedactionRuleSnapshotEntity) - A snapshot of an entity, e.g. Event, that the rule got applied to when last_used_day was updated.

## RedactionRuleSnapshotEntity
+ `id`: `6368f07a518fa064ce036bdb` (string, required) - The ID of the entity, e.g. Event ID.
+ `parent_id`: `6368f07a518fa064ce036bdb` (string) - The ID of the entity's parent, e.g Error ID.
